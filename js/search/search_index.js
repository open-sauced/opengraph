var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.842,1,2.122]],["body/modules/AppModule.html",[0,1.253,1,4.211,2,1.424,3,2.177,4,3.121,5,3.121,6,3.561,7,0.031,8,3.561,9,2.723,10,3.561,11,2.37,12,1.822,13,1.542,14,0.329,15,0.329,16,0.351,17,3.725,18,2.634,19,1.104,20,3.725,21,0.633,22,4.845,23,4.512,24,2.426,25,3.155,26,1.316,27,4.06,28,2.723,29,3.725,30,3.725,31,4.845,32,3.725,33,3.725,34,3.725,35,3.542,36,3.725,37,3.155,38,3.121,39,3.155,40,3.121,41,3.121,42,2.634,43,1.712,44,5.385,45,0.963,46,1.042,47,2.426,48,2.59,49,2.59,50,3.725,51,3.725,52,3.725,53,1.725,54,3.725,55,2.723,56,3.725,57,3.121,58,3.725,59,0.692,60,3.725,61,3.725,62,3.725,63,3.725,64,3.725,65,3.725,66,3.725,67,3.725,68,3.725,69,3.725,70,3.725,71,3.725,72,3.725,73,3.725,74,3.725,75,3.725,76,3.725,77,3.725,78,3.725,79,3.121,80,3.725,81,3.725,82,3.725,83,2.426,84,2.723,85,1.424,86,1.991,87,0.374,88,0.633,89,0.022,90,0.022]],["title/interfaces/DbInsight.html",[91,0.412,92,1.741]],["body/interfaces/DbInsight.html",[7,0.03,14,0.377,15,0.377,16,0.279,59,1.113,87,0.429,89,0.024,90,0.024,91,0.668,92,2.824,93,1.632,94,2.282,95,3.121,96,0.661,97,1.261,98,4.013,99,1.593,100,5.024,101,5.024,102,2.119,103,5.024,104,2.932,105,4.383,106,1.46,107,1.003,108,1.96,109,3.355,110,3.905,111,1.471,112,3.578,113,3.578,114,3.121]],["title/interfaces/DbReaction.html",[91,0.412,115,1.914]],["body/interfaces/DbReaction.html",[7,0.03,14,0.436,15,0.436,16,0.322,87,0.496,89,0.026,90,0.026,91,0.624,93,1.886,94,2.638,96,0.764,97,1.376,106,1.429,107,0.892,115,3.387,116,4.135,117,6.294,118,6.294]],["title/interfaces/DbRepo.html",[91,0.412,119,2.382]],["body/interfaces/DbRepo.html",[7,0.03,14,0.343,15,0.343,16,0.253,87,0.391,89,0.023,90,0.023,91,0.492,93,1.486,94,2.077,96,0.601,97,1.189,99,1.499,106,1.449,107,1.022,108,2.047,114,4.236,119,3.64,120,3.256,121,2.159,122,5.795,123,5.795,124,3.405,125,5.795,126,5.795,127,4.855,128,2.604,129,5.795,130,5.795,131,5.795,132,5.795,133,2.834,134,5.795,135,5.795]],["title/interfaces/DbUserHighlight.html",[91,0.412,136,1.914]],["body/interfaces/DbUserHighlight.html",[7,0.031,14,0.373,15,0.373,16,0.275,87,0.424,89,0.024,90,0.024,91,0.534,93,1.614,94,2.256,96,0.653,97,1.253,98,3.889,99,1.544,104,2.921,105,4.365,106,1.49,107,1.007,109,3.051,111,1.555,136,3.082,137,1.181,138,3.537,139,5.972,140,2.283,141,3.509,142,5.972,143,5.972,144,2.921,145,2.363]],["title/interfaces/DbUserInsightRepo.html",[91,0.412,110,2.122]],["body/interfaces/DbUserInsightRepo.html",[7,0.03,14,0.394,15,0.394,16,0.291,59,0.828,87,0.448,89,0.025,90,0.025,91,0.686,92,2.384,93,1.705,94,2.384,95,3.261,96,0.69,97,1.296,98,4.063,99,1.613,100,3.737,101,3.737,102,1.576,103,3.737,104,2.181,105,3.261,106,1.445,107,0.965,108,1.995,109,2.901,110,3.81,111,1.489,112,5.1,113,5.1,114,4.45,121,1.774]],["title/modules/GithubModule.html",[0,0.842,146,1.593]],["body/modules/GithubModule.html",[0,1.455,2,1.811,3,2.529,7,0.03,11,2.752,12,2.317,13,1.961,14,0.418,15,0.418,16,0.309,18,2.317,19,0.956,21,0.805,86,3.008,87,0.476,88,0.805,89,0.026,90,0.026,146,3.179,147,3.969,148,3.969,149,3.969,150,2.181,151,4.737,152,4.715,153,4.737]],["title/injectables/GithubService.html",[150,1.065,154,0.842]],["body/injectables/GithubService.html",[7,0.031,14,0.306,15,0.306,16,0.226,19,1.03,21,0.589,24,2.257,37,3.385,38,2.904,55,2.534,59,0.965,87,0.348,88,0.589,89,0.021,90,0.021,96,0.536,97,1.103,106,1.373,107,0.804,111,1.448,121,1.699,137,1.551,150,1.511,154,1.195,155,1.853,156,2.904,157,1.696,158,5.198,159,2.491,160,1.913,161,1.886,162,4.053,163,4.053,164,6.16,165,1.398,166,3.466,167,4.646,168,2.459,169,4.621,170,2.152,171,4.621,172,2.391,173,3.466,174,2.47,175,2.152,176,2.715,177,4.621,178,3.466,179,2.26,180,1.511,181,3.466,182,1.695,183,1.695,184,1.677,185,4.621,186,3.466,187,3.872,188,2.47,189,2.152,190,1.853,191,4.621,192,3.466,193,3.466,194,3.466,195,3.466,196,2.257,197,3.466,198,3.466,199,3.466,200,1.834,201,2.257,202,1.225,203,2.257,204,2.257,205,2.257,206,2.037,207,3.009,208,3.611,209,3.466,210,1.699,211,4.621,212,1.344,213,3.466,214,2.715,215,3.466,216,1.557,217,3.466,218,3.466,219,3.466]],["title/controllers/HealthController.html",[220,0.778,221,2.122]],["body/controllers/HealthController.html",[7,0.031,14,0.322,15,0.322,16,0.237,19,0.96,21,0.618,23,4.463,24,2.371,28,2.662,79,3.051,83,3.109,84,4.291,85,1.392,87,0.366,88,0.618,89,0.022,90,0.022,96,0.563,111,0.869,157,1.685,160,1.976,161,1.99,165,1.101,168,1.976,175,1.976,176,2.805,212,1.234,220,0.869,221,3.109,222,3.051,223,2.371,224,6.023,225,6.138,226,6.023,227,3.109,228,3.641,229,4.774,230,3.682,231,3.022,232,3.321,233,4.774,234,3.641,235,3.641,236,4.774,237,3.641,238,4.774,239,4.774,240,4.774,241,5.326,242,4.774,243,4.774,244,3.469,245,3.469,246,2.371,247,2.371,248,3.641,249,3.641,250,3.641,251,3.641,252,3.641,253,3.641,254,3.109,255,4.774,256,4.774,257,3.641,258,3.641,259,3.641,260,3.641,261,3.641,262,3.641,263,4.774,264,3.641,265,3.641,266,3.641,267,3.641,268,3.641,269,3.641,270,3.641,271,3.641,272,3.641,273,3.641,274,3.641,275,3.641,276,3.641,277,3.641,278,3.641,279,3.641]],["title/modules/HealthModule.html",[0,0.842,280,2.382]],["body/modules/HealthModule.html",[0,1.491,2,1.886,7,0.03,14,0.436,15,0.436,16,0.322,18,2.414,19,1.037,21,0.838,27,4.83,28,3.608,85,2.204,87,0.496,88,0.838,89,0.026,90,0.026,221,3.977,280,4.214,281,4.935,282,4.935]],["title/controllers/HighlightCardController.html",[220,0.778,283,2.122]],["body/controllers/HighlightCardController.html",[7,0.031,14,0.269,15,0.269,16,0.199,19,0.893,21,0.518,42,3.087,48,3.056,53,1.281,59,0.787,85,1.166,87,0.307,88,0.518,89,0.019,90,0.019,96,0.472,99,1.57,107,0.855,108,1.729,111,0.728,121,1.385,124,3.567,140,2.442,157,0.854,160,1.754,161,1.729,165,0.923,168,1.754,170,1.754,175,1.754,180,1.719,196,1.987,200,1.281,202,1.497,210,1.385,212,1.096,214,2.489,220,0.728,223,1.987,227,2.759,230,3.424,244,2.759,245,3.17,246,1.987,247,1.987,254,2.759,283,2.759,284,1.259,285,1.987,286,2.556,287,4.867,288,5.525,289,3.051,290,4.494,291,4.287,292,2.556,293,4.237,294,3.097,295,3.097,296,2.759,297,3.097,298,3.349,299,2.264,300,2.556,301,3.954,302,2.759,303,3.894,304,2.23,305,3.097,306,3.097,307,2.23,308,2.86,309,2.556,310,4.406,311,2.23,312,3.051,313,3.051,314,2.556,315,2.759,316,3.55,317,3.051,318,2.23,319,3.558,320,2.23,321,2.23,322,3.097,323,2.556,324,2.556,325,3.051,326,2.23,327,2.23,328,2.23,329,4.078,330,3.097,331,4.078,332,3.097,333,3.097,334,3.558,335,3.097,336,2.23,337,2.38,338,1.166,339,3.051,340,3.051,341,1.792,342,2.556,343,2.23,344,2.23,345,2.23,346,3.55,347,3.097,348,1.371,349,3.051,350,3.051,351,2.556,352,3.097,353,3.097,354,3.097,355,2.556,356,1.619,357,1.166,358,1.619,359,1.166,360,3.051,361,3.097,362,3.097,363,2.759,364,2.23,365,1.987,366,2.23,367,1.987,368,2.23,369,2.23]],["title/interfaces/HighlightCardData.html",[91,0.412,370,2.122]],["body/interfaces/HighlightCardData.html",[7,0.031,14,0.204,15,0.204,16,0.271,19,1.046,21,0.393,26,0.818,43,0.818,45,0.897,46,0.647,48,1.854,53,0.7,59,0.644,87,0.233,88,0.393,89,0.016,90,0.016,91,0.293,93,0.885,96,0.358,97,0.828,99,1.076,102,0.818,104,2.774,106,1.335,107,0.878,108,1.797,111,1.104,115,1.36,128,1.87,133,2.036,136,1.36,137,0.971,140,1.893,141,3.056,144,2.543,145,0.958,150,1.361,154,0.897,157,1.509,159,1.559,161,1.573,165,0.7,172,2.233,174,1.237,180,1.361,184,1.259,188,1.237,189,1.914,190,1.237,200,1.961,202,1.471,210,1.917,212,1.395,216,1.559,220,0.552,284,0.598,299,1.237,337,1.132,338,0.885,348,1.04,356,1.591,357,1.591,358,0.885,359,1.988,370,2.711,371,1.04,372,2.337,373,3.612,374,2.882,375,3.169,376,3.694,377,1.132,378,1.132,379,2.036,380,1.697,381,1.132,382,1.132,383,1.132,384,1.132,385,2.711,386,1.507,387,1.132,388,1.361,389,1.04,390,1.132,391,2.038,392,1.132,393,1.436,394,1.132,395,1.507,396,1.939,397,1.132,398,2.259,399,1.939,400,1.939,401,1.436,402,1.507,403,1.507,404,1.939,405,1.132,406,1.697,407,1.692,408,1.939,409,2.907,410,3.487,411,1.939,412,2.907,413,1.939,414,1.939,415,1.939,416,1.939,417,2.038,418,1.939,419,1.939,420,1.939,421,1.939,422,1.939,423,1.939,424,1.939,425,2.261,426,2.907,427,1.939,428,1.939,429,1.36,430,1.36,431,1.939,432,1.939,433,1.507,434,1.939,435,1.939,436,1.939,437,1.697,438,1.697,439,1.697,440,2.907,441,1.697,442,2.907,443,1.939,444,1.04,445,1.04,446,0.885,447,1.04,448,1.132,449,0.885,450,1.132,451,3.487,452,2.036,453,1.132,454,1.132,455,1.132,456,1.939,457,1.132,458,1.939,459,1.36,460,1.939,461,1.692,462,1.697,463,1.697,464,1.939,465,1.436,466,1.132,467,1.04,468,1.132,469,1.132,470,1.132,471,1.559,472,1.697,473,1.697,474,1.326,475,2.036,476,1.939,477,2.225,478,3.487,479,2.259,480,1.939,481,1.939,482,1.692,483,1.939,484,1.939,485,1.939,486,1.939,487,1.939,488,1.939,489,1.939,490,1.939,491,1.939,492,1.132,493,1.132,494,1.132,495,1.132,496,1.132,497,0.958,498,1.132,499,1.132,500,1.132,501,1.132,502,1.04,503,1.939,504,1.132,505,1.132,506,1.697,507,1.939,508,1.132,509,1.939,510,2.907,511,1.939,512,1.939,513,1.132,514,2.907,515,1.939,516,2.038,517,1.939,518,1.132,519,1.132,520,1.132,521,1.507,522,1.507,523,1.36,524,1.36,525,1.132,526,1.132,527,1.04,528,1.939,529,1.132]],["title/modules/HighlightCardModule.html",[0,0.842,6,1.914]],["body/modules/HighlightCardModule.html",[0,1.393,2,1.685,3,2.421,6,3.851,7,0.031,9,2.843,11,2.635,12,2.156,13,1.825,14,0.389,15,0.389,16,0.38,18,2.635,19,1.074,21,0.749,25,3.509,26,1.557,45,1.14,46,1.233,47,2.87,48,3.111,85,2.06,86,2.88,87,0.443,88,0.749,89,0.025,90,0.025,140,2.06,146,3.094,283,3.79,284,1.14,337,3.094,338,1.685,530,3.693,531,3.693,532,4.408,533,3.222,534,3.222,535,3.222]],["title/injectables/HighlightCardService.html",[154,0.842,337,1.593]],["body/injectables/HighlightCardService.html",[7,0.031,14,0.188,15,0.188,16,0.258,19,1.031,21,0.361,26,0.751,43,0.751,45,0.841,46,0.594,48,3.29,53,0.643,59,0.973,87,0.214,88,0.361,89,0.015,90,0.015,91,0.269,96,0.329,97,0.776,99,1.234,102,0.751,104,2.461,106,1.108,107,0.779,108,1.836,111,1.202,115,1.248,121,1.56,128,1.775,133,1.932,136,1.248,137,0.91,140,1.824,141,2.321,144,1.932,145,0.88,150,1.712,154,0.841,155,1.136,157,1.685,159,1.989,160,1.346,161,1.836,165,0.984,168,2.237,170,1.975,172,1.833,174,1.136,175,1.975,176,1.911,180,1.645,182,1.591,183,1.591,184,1.339,188,1.136,189,1.346,190,1.136,200,1.944,202,0.751,210,1.879,212,1.354,216,1.461,220,0.507,284,1.432,299,1.136,337,1.591,338,0.812,348,0.955,356,1.51,357,1.51,358,0.812,359,1.924,370,2.883,371,0.955,372,1.775,373,3.107,374,2.366,375,2.601,376,3.278,377,1.039,378,1.039,379,2.461,380,1.591,381,1.039,382,1.039,383,1.039,384,1.039,385,2.573,386,1.384,387,1.039,388,1.712,389,0.955,390,1.039,391,1.911,392,1.039,393,1.346,394,1.039,395,1.384,396,1.78,397,1.039,398,2.118,399,1.78,400,1.78,401,1.346,402,1.384,403,1.384,404,1.78,405,1.591,406,2.165,407,2.377,408,3.311,409,3.709,410,3.311,411,1.78,412,2.725,413,1.78,414,1.78,415,1.78,416,1.78,417,1.911,418,1.78,419,1.78,420,1.78,421,1.78,422,1.78,423,1.78,424,1.78,425,2.165,426,2.725,427,1.78,428,1.78,429,1.248,430,1.248,431,1.78,432,1.78,433,1.384,434,3.709,435,1.78,436,1.78,437,1.591,438,1.591,439,1.591,440,2.725,441,1.591,442,2.725,443,1.78,444,0.955,445,0.955,446,0.812,447,0.955,448,1.039,449,0.812,450,1.932,451,3.998,452,1.932,453,1.039,454,1.039,455,1.039,456,1.78,457,1.039,458,1.78,459,1.248,460,1.78,461,1.553,462,1.591,463,1.591,464,1.78,465,1.346,466,1.039,467,0.955,468,1.039,469,1.039,470,1.039,471,1.461,472,1.591,473,1.591,474,1.243,475,1.932,476,1.78,477,2.112,478,3.311,479,2.118,480,1.78,481,1.78,482,1.553,483,1.78,484,1.78,485,1.78,486,1.78,487,1.78,488,1.78,489,1.78,490,1.78,491,1.78,492,1.039,493,1.039,494,1.039,495,1.039,496,1.039,497,0.88,498,1.039,499,1.039,500,1.039,501,1.932,502,0.955,503,1.78,504,1.039,505,1.039,506,1.591,507,1.78,508,1.039,509,1.78,510,2.725,511,1.78,512,1.78,513,1.039,514,2.725,515,1.78,516,1.911,517,1.78,518,1.039,519,1.039,520,1.039,521,1.384,522,1.384,523,1.248,524,1.248,525,1.039,526,1.039,527,0.955,528,3.311,529,1.039,536,1.553,537,3.252,538,1.78,539,2.125,540,2.125,541,2.125,542,1.384,543,2.125,544,2.125,545,2.125,546,2.125,547,2.125,548,1.78]],["title/controllers/InsightCardController.html",[220,0.778,549,2.122]],["body/controllers/InsightCardController.html",[7,0.031,14,0.263,15,0.263,16,0.194,19,0.883,21,0.505,42,3.074,49,3.032,53,1.259,59,0.773,85,1.137,87,0.299,88,0.505,89,0.019,90,0.019,96,0.46,99,1.582,107,0.847,108,1.716,111,0.71,121,1.36,124,3.547,144,1.454,157,0.832,160,1.723,161,1.716,165,0.899,168,1.723,170,1.723,175,1.723,180,1.7,184,1.259,196,1.937,200,1.452,202,1.471,210,1.569,212,1.241,214,2.445,220,0.71,223,1.937,227,2.71,230,3.387,244,2.71,245,3.127,246,1.937,247,1.937,254,2.71,284,1.241,285,1.937,290,4.471,291,4.257,292,2.492,294,3.802,295,3.802,296,3.387,297,3.802,298,3.334,299,2.224,300,2.492,301,3.792,302,2.71,303,3.869,304,2.174,305,3.042,306,3.042,307,2.174,308,2.821,309,2.492,310,4.357,311,2.174,314,2.492,315,2.71,318,2.174,319,3.51,320,2.174,321,2.174,322,3.042,323,2.492,324,2.492,326,2.174,327,2.174,328,2.174,329,4.023,330,3.042,331,4.023,332,3.042,333,3.042,334,3.51,335,3.042,336,2.174,338,1.137,341,1.747,342,2.492,343,2.174,344,2.174,345,2.174,346,3.487,347,3.042,351,2.492,352,3.042,353,3.042,354,3.042,355,2.492,356,1.835,357,1.835,358,1.988,359,1.137,361,3.042,362,3.042,363,2.71,364,2.174,365,1.937,366,2.174,367,1.937,368,2.174,369,2.174,549,2.71,550,2.174,551,4.801,552,5.474,553,2.974,554,4.162,555,4.596,556,2.974,557,2.974,558,3.487,559,2.492,560,2.974,561,2.348,562,2.974,563,2.974,564,1.937,565,4.162,566,2.492,567,2.974,568,2.492]],["title/interfaces/InsightCardData.html",[91,0.412,569,2.122]],["body/interfaces/InsightCardData.html",[7,0.031,14,0.24,15,0.24,16,0.298,19,1.052,21,0.462,26,0.961,43,0.961,45,1.01,46,0.761,49,2.087,53,0.822,59,0.928,87,0.273,88,0.462,89,0.018,90,0.018,91,0.344,92,1.453,93,1.039,96,0.421,97,0.932,99,1.182,102,2.089,104,2.891,106,1.278,107,0.852,108,1.511,111,1.193,137,0.761,140,1.039,145,1.126,150,1.494,154,1.01,157,1.48,159,1.755,161,1.511,165,0.822,174,1.453,180,1.494,184,1.511,200,1.974,202,1.615,207,1.771,210,2.006,212,1.292,216,1.755,220,0.649,284,0.703,338,1.039,348,1.222,356,1.747,357,1.747,358,1.039,359,2.105,371,1.222,372,1.755,377,1.33,378,1.33,379,2.235,380,1.91,381,1.33,382,1.33,383,1.33,384,1.33,385,2.976,386,1.771,387,1.33,388,1.494,389,1.222,393,1.617,394,1.33,397,1.33,398,1.771,401,1.617,405,1.33,406,1.33,417,2.685,433,1.771,437,1.91,438,1.91,439,1.91,441,1.91,444,1.222,445,1.222,446,1.039,447,1.222,448,1.33,449,1.039,450,1.33,452,1.91,453,1.33,454,1.33,455,1.33,457,1.33,462,1.91,463,1.91,465,1.617,466,1.33,467,1.222,468,1.33,469,1.33,470,1.33,471,1.755,472,1.91,473,1.91,474,1.493,475,1.91,492,1.33,493,1.33,494,1.33,495,1.33,496,1.33,497,1.126,498,1.33,499,1.33,500,1.33,501,1.33,502,1.222,504,1.33,505,1.33,506,1.91,508,1.33,513,1.33,516,1.597,518,1.33,519,1.33,520,1.33,521,1.771,522,1.771,523,1.597,524,1.597,525,1.33,526,1.33,527,1.222,529,1.33,561,1.33,569,2.976,570,4.244,571,4.026,572,3.905,573,2.278,574,1.771,575,2.278,576,1.771,577,3.272,578,1.771,579,2.278,580,3.272,581,3.272,582,1.771,583,2.278,584,2.278,585,2.278,586,2.278,587,2.278,588,2.278,589,2.278,590,2.278,591,2.278,592,1.987,593,2.278,594,2.278,595,2.278,596,2.278,597,2.278,598,2.278,599,2.278,600,2.278,601,2.855,602,2.278,603,2.278,604,2.278,605,3.829,606,2.278,607,2.278,608,2.278,609,2.278,610,1.33,611,2.278,612,2.278,613,2.278]],["title/modules/InsightCardModule.html",[0,0.842,8,1.914]],["body/modules/InsightCardModule.html",[0,1.395,2,1.688,3,2.424,7,0.031,8,3.852,9,2.844,11,2.638,12,2.159,13,1.828,14,0.39,15,0.39,16,0.38,18,2.638,19,1.075,21,0.75,25,3.513,26,1.56,45,1.142,46,1.235,47,2.875,49,2.883,85,2.062,86,2.883,87,0.444,88,0.75,89,0.025,90,0.025,146,3.095,284,1.142,338,1.688,533,3.228,534,3.228,535,3.228,549,3.793,555,3.943,561,3.095,614,3.699,615,4.415,616,3.699]],["title/injectables/InsightCardService.html",[154,0.842,561,1.593]],["body/injectables/InsightCardService.html",[7,0.031,14,0.217,15,0.217,16,0.281,19,1.032,21,0.417,26,0.868,43,0.868,45,0.938,46,0.687,49,3.277,53,0.743,59,1.07,87,0.247,88,0.417,89,0.017,90,0.017,91,0.311,92,1.313,96,0.38,97,0.866,99,1.314,102,1.878,104,2.6,106,1.048,107,0.786,108,1.82,111,1.269,121,1.66,137,0.687,140,0.939,145,1.017,150,1.798,154,0.938,155,1.313,157,1.612,159,2.14,160,1.502,161,1.82,165,1.097,168,2.201,170,2.103,174,1.313,175,1.971,176,1.443,180,1.738,182,1.201,183,1.201,184,1.536,200,1.954,202,0.868,207,1.6,210,1.967,212,1.231,216,1.63,220,0.586,284,1.422,338,0.939,348,1.104,356,1.648,357,1.648,358,0.939,359,2.032,371,1.104,372,1.63,377,1.201,378,1.201,379,2.6,380,1.774,381,1.201,382,1.201,383,1.201,384,1.201,385,2.808,386,1.6,387,1.201,388,1.798,389,1.104,393,1.502,394,1.201,397,1.201,398,1.6,401,1.502,405,1.774,406,1.201,417,2.533,433,1.6,437,1.774,438,1.774,439,1.774,441,1.774,444,1.104,445,1.104,446,0.939,447,1.104,448,1.201,449,0.939,450,2.109,452,1.774,453,1.201,454,1.201,455,1.201,457,1.201,462,1.774,463,1.774,465,1.502,466,1.201,467,1.104,468,1.201,469,1.201,470,1.201,471,1.63,472,1.774,473,1.774,474,1.386,475,1.774,492,1.201,493,1.201,494,1.201,495,1.201,496,1.201,497,1.017,498,1.201,499,1.201,500,1.201,501,2.109,502,1.104,504,1.201,505,1.201,506,1.774,508,1.201,513,1.201,516,1.443,518,1.201,519,1.201,520,1.201,521,1.6,522,1.6,523,1.443,524,1.443,525,1.201,526,1.201,527,1.104,529,1.201,536,1.796,538,2.058,542,1.6,561,1.774,569,3.101,570,3.713,571,3.152,573,2.058,574,1.6,575,2.058,576,1.6,577,3.039,578,1.6,579,3.613,580,3.99,581,3.039,582,1.6,583,2.058,584,2.058,585,2.058,586,2.058,587,2.058,588,2.058,589,2.058,590,2.058,591,2.058,592,1.796,593,2.058,594,2.058,595,2.058,596,2.058,597,2.058,598,2.058,599,2.058,600,2.058,601,2.651,602,2.058,603,2.058,604,2.058,605,4.256,606,2.058,607,2.058,608,2.058,609,2.058,610,1.201,611,2.058,612,2.058,613,3.613,617,3.627,618,2.456,619,2.456,620,2.456,621,2.456,622,2.456,623,2.456,624,2.456]],["title/interfaces/RequiresUpdateMeta.html",[91,0.412,401,1.349]],["body/interfaces/RequiresUpdateMeta.html",[7,0.031,14,0.233,15,0.233,16,0.293,19,1.025,21,0.449,26,0.933,43,1.351,45,0.989,46,0.739,53,0.799,59,0.915,87,0.452,88,0.449,89,0.017,90,0.017,91,0.484,93,1.01,96,0.409,97,0.913,99,0.989,102,1.742,106,1.292,107,0.763,108,1.157,109,2.915,111,1.177,128,1.719,133,1.871,137,1.258,145,2.041,150,1.47,154,0.989,157,1.463,159,1.719,161,1.491,165,0.799,172,1.094,179,2.667,180,1.47,184,1.649,188,1.412,189,2.041,190,1.412,200,1.945,201,1.72,202,1.742,203,2.491,204,2.491,205,1.72,206,1.552,210,1.949,212,1.163,216,1.719,220,0.631,284,0.683,348,1.187,356,2.15,357,2.15,358,1.999,359,2.279,371,1.187,372,2.02,374,2.796,375,3.204,377,1.292,378,1.292,379,2.199,380,1.871,381,1.292,382,1.292,383,1.292,384,1.292,387,1.292,388,1.47,389,1.187,390,1.292,391,2.247,392,1.292,393,1.583,394,1.292,397,1.292,401,1.861,405,1.292,406,1.292,425,1.292,429,1.552,430,2.642,437,1.871,438,1.871,439,1.871,441,1.871,444,1.187,445,1.187,446,1.01,447,1.187,448,1.292,449,1.01,450,1.292,452,2.199,453,1.292,454,1.292,455,1.292,457,1.292,459,1.552,462,1.871,463,1.871,465,1.583,466,1.292,467,1.187,468,1.292,469,1.292,470,1.292,471,1.719,472,1.871,473,1.871,474,1.462,475,1.871,492,1.292,493,1.292,494,1.292,495,1.292,496,1.292,497,1.094,498,1.292,499,1.292,500,1.292,501,1.292,502,1.187,504,1.292,505,1.292,506,1.871,508,1.292,513,1.292,518,1.292,519,1.292,520,1.292,525,1.292,526,1.292,527,1.187,529,1.292,610,2.199,625,1.552,626,1.931,627,1.292,628,2.247,629,1.931,630,1.931,631,3.603,632,1.187,633,1.931,634,1.552,635,1.931,636,1.931,637,1.931,638,1.931,639,1.931,640,1.931,641,1.931,642,1.931,643,1.931,644,1.931,645,1.931,646,1.931,647,1.931,648,1.931,649,1.931,650,1.931,651,1.931,652,1.931,653,1.931,654,1.931,655,1.931,656,1.931,657,1.931,658,3.287,659,1.931,660,1.931,661,1.931,662,1.931,663,2.796,664,1.931,665,1.931,666,1.72,667,1.72,668,1.931,669,1.931]],["title/modules/S3FileStorageModule.html",[0,0.842,9,1.464]],["body/modules/S3FileStorageModule.html",[0,1.446,2,1.791,3,2.512,7,0.03,9,2.914,11,2.734,12,2.292,13,1.94,14,0.414,15,0.414,16,0.404,18,2.292,19,0.95,21,0.796,45,1.212,46,1.311,86,2.988,87,0.471,88,0.796,89,0.026,90,0.026,152,4.684,388,2.178,389,2.106,670,3.926,671,3.926,672,3.926,673,3.426,674,4.686]],["title/injectables/S3FileStorageService.html",[154,0.842,388,1.065]],["body/injectables/S3FileStorageService.html",[7,0.031,14,0.245,15,0.245,16,0.419,19,0.905,21,0.471,24,1.805,39,1.805,40,2.322,41,2.322,45,1.194,46,1.662,53,0.838,55,2.026,57,3.317,59,0.99,87,0.279,88,0.471,89,0.018,90,0.018,96,0.429,97,0.945,106,1.401,107,0.858,111,1.203,121,1.742,145,2.207,154,1.024,155,1.481,157,1.41,160,1.639,161,1.863,165,1.197,167,4.222,168,2.416,170,2.207,175,2.086,180,1.907,182,1.936,183,1.936,184,1.612,200,1.197,210,1.647,212,1.433,299,2.849,373,1.805,388,1.294,407,3.376,444,2.564,502,2.791,527,1.779,542,1.805,634,2.714,673,4.342,675,2.322,676,4.619,677,4.619,678,5.543,679,4.619,680,4.619,681,4.619,682,4.619,683,2.771,684,2.771,685,2.771,686,2.771,687,2.771,688,2.771,689,2.771,690,2.771,691,2.771,692,5.039,693,5.33,694,2.771,695,4.619,696,2.771,697,2.771,698,2.771,699,5.039,700,3.959,701,2.322,702,2.771,703,2.771,704,2.771,705,2.771,706,2.771,707,2.771,708,2.771,709,2.771,710,2.771,711,2.771,712,2.771,713,2.026,714,2.771,715,2.322,716,2.771,717,2.322,718,2.771,719,2.322,720,2.771,721,2.322,722,2.771,723,4.619,724,5.039,725,4.222,726,5.039,727,5.039,728,4.619,729,6.159,730,4.619,731,4.619,732,4.619,733,4.619,734,3.959,735,2.771,736,2.771,737,2.771,738,2.771]],["title/controllers/UserCardController.html",[220,0.778,739,2.122]],["body/controllers/UserCardController.html",[7,0.031,14,0.268,15,0.268,16,0.198,19,0.89,21,0.514,42,3.084,43,2.016,53,1.275,59,0.783,85,1.158,87,0.305,88,0.514,89,0.019,90,0.019,96,0.469,106,1.256,107,0.853,111,0.723,121,1.378,124,3.439,137,1.696,144,1.482,157,0.848,160,1.745,161,1.726,165,0.916,168,1.745,170,1.745,175,1.745,179,2.863,180,1.714,184,1.275,196,1.973,200,1.667,202,1.49,210,1.585,212,1.254,214,2.477,220,0.723,223,1.973,227,2.746,230,3.414,244,2.746,245,3.158,246,1.973,247,1.973,254,2.746,284,1.254,285,1.973,290,4.488,291,4.279,294,3.832,295,3.832,296,3.414,297,3.832,298,3.345,299,2.253,301,3.812,302,2.746,303,3.716,304,2.215,305,3.082,306,3.082,307,2.215,308,2.849,311,2.215,315,2.746,318,2.215,319,3.545,320,2.215,321,2.215,322,3.082,326,2.215,327,2.215,328,2.215,330,3.082,332,3.082,333,3.082,334,3.545,335,3.082,336,2.215,338,1.158,341,1.78,343,2.215,344,2.215,345,2.215,347,3.082,352,3.082,353,3.082,354,3.082,356,1.853,357,1.853,358,2.004,359,1.158,361,3.082,362,3.082,363,2.746,364,2.215,365,1.973,366,2.215,367,1.973,368,2.215,369,2.215,558,3.532,559,2.538,564,1.973,566,2.538,568,2.538,632,2.179,739,2.746,740,2.538,741,4.849,742,5.511,743,3.03,744,3.03,745,4.216,746,3.03,747,3.03,748,3.03,749,3.03,750,3.03,751,3.03,752,3.03,753,3.03,754,3.03,755,4.216,756,4.216,757,4.216,758,4.216,759,3.03,760,3.03]],["title/interfaces/UserCardData.html",[91,0.412,628,1.914]],["body/interfaces/UserCardData.html",[7,0.031,14,0.231,15,0.231,16,0.292,19,1.024,21,0.444,26,0.925,43,1.343,45,0.983,46,0.732,53,0.792,59,1.042,87,0.45,88,0.444,89,0.017,90,0.017,91,0.481,93,1,96,0.405,97,0.907,99,1.348,102,1.982,106,1.326,107,0.806,108,1.484,109,2.031,111,1.172,128,1.707,133,1.858,137,1.251,145,1.573,150,1.462,154,0.983,157,1.458,159,1.707,161,1.484,165,0.792,172,1.084,179,2.659,180,1.462,184,1.644,188,1.399,189,2.251,190,1.399,200,1.943,201,1.704,202,1.343,203,2.474,204,2.474,205,1.704,206,1.538,210,1.945,212,1.157,216,1.707,220,0.625,284,0.677,348,1.176,356,1.876,357,1.876,358,1.452,359,2.144,371,1.176,372,2.443,374,3.071,375,3.441,377,1.28,378,1.28,379,2.188,380,1.858,381,1.28,382,1.28,383,1.28,384,1.28,387,1.28,388,1.462,389,1.176,390,1.28,391,2.232,392,1.28,393,1.573,394,1.28,397,1.28,401,1.573,405,1.28,406,1.28,425,1.28,429,1.538,430,2.628,437,1.858,438,1.858,439,1.858,441,1.858,444,1.176,445,1.176,446,1,447,1.176,448,1.28,449,1,450,1.28,452,2.188,453,1.28,454,1.28,455,1.28,457,1.28,459,1.538,462,1.858,463,1.858,465,1.573,466,1.28,467,1.176,468,1.28,469,1.28,470,1.28,471,1.707,472,1.858,473,1.858,474,1.452,475,1.858,492,1.28,493,1.28,494,1.28,495,1.28,496,1.28,497,1.084,498,1.28,499,1.28,500,1.28,501,1.28,502,1.176,504,1.28,505,1.28,506,1.858,508,1.28,513,1.28,518,1.28,519,1.28,520,1.28,525,1.28,526,1.28,527,1.176,529,1.28,610,2.188,625,1.538,626,1.913,627,1.28,628,2.628,629,1.913,630,1.913,631,4.101,632,1.176,633,1.913,634,1.538,635,1.913,636,1.913,637,1.913,638,1.913,639,1.913,640,1.913,641,1.913,642,1.913,643,1.913,644,1.913,645,1.913,646,1.913,647,1.913,648,1.913,649,1.913,650,1.913,651,1.913,652,1.913,653,1.913,654,1.913,655,1.913,656,1.913,657,1.913,658,3.27,659,1.913,660,1.913,661,1.913,662,1.913,663,2.778,664,1.913,665,1.913,666,1.704,667,1.704,668,1.913,669,1.913]],["title/modules/UserCardModule.html",[0,0.842,10,1.914]],["body/modules/UserCardModule.html",[0,1.395,2,1.688,3,2.424,7,0.031,9,2.844,10,3.852,11,2.638,12,2.159,13,1.828,14,0.39,15,0.39,16,0.38,18,2.638,19,1.075,21,0.75,25,3.513,26,1.56,43,1.906,45,1.142,46,1.235,47,2.875,85,2.062,86,2.883,87,0.444,88,0.75,89,0.025,90,0.025,137,1.509,146,3.095,284,1.142,338,1.688,533,3.228,534,3.228,535,3.228,632,2.844,739,3.793,761,3.699,762,4.415,763,3.699]],["title/injectables/UserCardService.html",[154,0.842,632,1.464]],["body/injectables/UserCardService.html",[7,0.031,14,0.212,15,0.212,16,0.277,19,1.004,21,0.407,26,0.847,43,2.157,45,0.921,46,0.671,53,0.725,59,1.063,87,0.427,88,0.407,89,0.016,90,0.016,91,0.451,96,0.371,97,0.85,99,0.921,102,1.663,106,1.354,107,0.778,108,1.077,109,1.904,111,1.258,121,1.644,128,1.601,133,1.742,137,1.189,145,1.475,150,1.784,154,0.921,155,1.281,157,1.602,159,2.114,160,1.475,161,1.811,165,1.077,168,2.182,170,2.082,172,0.993,175,1.948,176,1.409,179,2.85,180,1.722,182,1.172,183,1.172,184,1.65,188,1.281,189,1.948,190,1.281,200,1.923,201,1.561,202,1.259,203,2.32,204,2.32,205,1.561,206,1.409,210,1.905,212,1.099,216,1.601,220,0.572,284,1.411,348,1.077,356,1.799,357,1.799,358,1.362,359,2.086,371,1.077,372,1.91,374,2.688,375,3.096,377,1.172,378,1.172,379,2.577,380,1.742,381,1.172,382,1.172,383,1.172,384,1.172,387,1.172,388,1.784,389,1.077,390,1.172,391,2.093,392,1.172,393,1.475,394,1.172,397,1.172,401,1.475,405,1.742,406,1.172,425,1.172,429,1.409,430,2.498,437,1.742,438,1.742,439,1.742,441,1.742,444,1.077,445,1.077,446,0.916,447,1.077,448,1.172,449,0.916,450,2.079,452,2.079,453,1.172,454,1.172,455,1.172,457,1.172,459,1.409,462,1.742,463,1.742,465,1.475,466,1.172,467,1.077,468,1.172,469,1.172,470,1.172,471,1.601,472,1.742,473,1.742,474,1.362,475,1.742,492,1.172,493,1.172,494,1.172,495,1.172,496,1.172,497,0.993,498,1.172,499,1.172,500,1.172,501,2.079,502,1.077,504,1.172,505,1.172,506,1.742,508,1.172,513,1.172,518,1.172,519,1.172,520,1.172,525,1.172,526,1.172,527,1.077,529,1.172,536,1.753,542,1.561,548,2.985,610,2.079,625,1.409,626,1.753,627,1.172,628,2.765,629,1.753,630,1.753,631,3.44,632,1.601,633,3.108,634,1.409,635,1.753,636,1.753,637,1.753,638,1.753,639,1.753,640,1.753,641,1.753,642,1.753,643,1.753,644,1.753,645,1.753,646,1.753,647,1.753,648,1.753,649,1.753,650,1.753,651,1.753,652,1.753,653,1.753,654,1.753,655,1.753,656,1.753,657,1.753,658,3.676,659,1.753,660,1.753,661,1.753,662,1.753,663,2.604,664,1.753,665,1.753,666,1.561,667,1.561,668,1.753,669,3.108,764,2.397,765,2.397,766,2.397,767,2.397,768,2.397,769,2.397,770,2.397,771,2.397]],["title/changelog.html",[772,1.776,773,1.994,774,2.285]],["body/changelog.html",[0,0.659,3,1.451,7,0.03,16,0.243,42,2.154,45,1.139,59,0.818,83,1.017,89,0.012,90,0.012,99,0.659,102,0.901,107,0.242,127,3.691,128,1.674,137,1.232,140,1.424,141,0.917,144,1.246,172,1.824,179,2.37,183,0.764,184,0.472,187,2.705,206,1.497,212,0.835,231,1.362,286,2.135,296,1.66,298,2.822,301,2.869,302,1.66,308,0.917,341,2.73,363,1.017,376,1.66,446,1.569,449,0.974,471,0.702,474,0.597,477,2.68,479,1.66,516,1.497,550,1.863,582,2.103,601,1.141,610,1.246,627,1.246,666,1.66,667,1.66,713,1.863,725,2.135,772,1.66,774,2.135,775,1.561,776,2.549,777,3.727,778,2.135,779,2.549,780,2.135,781,2.549,782,2.549,783,4.32,784,5.014,785,2.549,786,2.549,787,3.229,788,2.549,789,2.549,790,2.135,791,2.549,792,5.993,793,2.549,794,2.549,795,2.135,796,2.549,797,5.386,798,1.561,799,3.229,800,4.405,801,5.41,802,3.44,803,2.549,804,3.727,805,2.549,806,6.061,807,6.061,808,5.48,809,2.549,810,2.549,811,2.549,812,2.549,813,4.106,814,3.122,815,4.661,816,2.135,817,2.549,818,2.549,819,2.549,820,3.229,821,2.549,822,2.549,823,2.135,824,2.135,825,2.549,826,2.549,827,4.106,828,3.229,829,2.549,830,2.549,831,4.405,832,3.229,833,2.549,834,4.405,835,2.549,836,2.549,837,2.549,838,2.549,839,5.157,840,2.549,841,2.549,842,3.22,843,2.549,844,3.122,845,2.135,846,2.549,847,2.549,848,1.561,849,1.561,850,2.549,851,5.014,852,6.326,853,2.549,854,2.549,855,2.549,856,2.549,857,2.135,858,2.549,859,4.647,860,4.405,861,2.549,862,2.549,863,3.122,864,2.549,865,2.549,866,2.549,867,2.549,868,2.549,869,2.549,870,3.727,871,2.549,872,2.549,873,2.549,874,3.894,875,2.549,876,2.549,877,2.549,878,2.549,879,2.549,880,3.727,881,2.549,882,2.549,883,2.549,884,2.549,885,2.549,886,2.549,887,2.549,888,2.549,889,6.31,890,3.229,891,1.561,892,1.561,893,3.229,894,3.229,895,2.549,896,2.549,897,5.157,898,2.549,899,2.549,900,3.002,901,2.549,902,3.727,903,3.44,904,2.549,905,2.135,906,2.549,907,2.549,908,2.549,909,3.727,910,3.727,911,3.122,912,3.122,913,2.135,914,2.549,915,2.705,916,2.549,917,2.135,918,3.727,919,2.549,920,2.549,921,2.549,922,2.135,923,2.549,924,2.549,925,2.724,926,2.549,927,2.705,928,3.727,929,2.135,930,2.549,931,3.691,932,3.691,933,3.122,934,2.549,935,2.135,936,2.135,937,2.705,938,2.549,939,2.549,940,4.106,941,3.229,942,2.549,943,2.549,944,2.549,945,2.549,946,2.549,947,2.549,948,2.549,949,2.135,950,2.549,951,3.727,952,2.549,953,2.549,954,2.549,955,1.863,956,2.135,957,2.549,958,2.549,959,2.549,960,2.549,961,2.549,962,2.135,963,2.549,964,2.549,965,3.727,966,3.122,967,2.549,968,2.549,969,2.135,970,2.549,971,2.549,972,2.135,973,2.549,974,2.549,975,2.549,976,3.727,977,2.549,978,2.549,979,2.549,980,2.549,981,2.549,982,2.549,983,1.863,984,2.549,985,2.549,986,2.549,987,2.135,988,3.229,989,3.229,990,2.549,991,2.549,992,2.549,993,2.135,994,2.549,995,5.157,996,1.561,997,1.561,998,1.561,999,1.561,1000,1.561,1001,1.561,1002,2.549,1003,2.549,1004,1.561,1005,1.561,1006,1.308,1007,1.561,1008,1.561,1009,1.561,1010,2.549,1011,1.561,1012,1.561,1013,1.308,1014,2.705,1015,1.561,1016,1.561,1017,1.561,1018,1.561,1019,1.561,1020,1.561,1021,1.561,1022,1.308,1023,1.561,1024,1.561,1025,1.561,1026,1.561,1027,3.229,1028,1.561,1029,1.561,1030,1.561,1031,1.561,1032,1.561,1033,1.561,1034,2.549,1035,1.561,1036,1.561,1037,1.561,1038,1.561,1039,1.561,1040,1.561,1041,1.561,1042,1.561,1043,1.561,1044,1.561,1045,2.549,1046,1.561,1047,1.561,1048,1.141,1049,1.561,1050,1.561,1051,1.561,1052,1.561,1053,1.561,1054,2.549,1055,1.561,1056,1.561,1057,1.561,1058,1.561,1059,1.561,1060,1.561,1061,1.561,1062,1.561,1063,1.561,1064,1.308,1065,1.561,1066,1.561,1067,1.561,1068,1.308,1069,1.308,1070,1.561,1071,1.561,1072,1.561,1073,2.705,1074,1.561,1075,1.561,1076,1.561,1077,1.561,1078,1.561,1079,2.549,1080,1.561,1081,2.705,1082,1.561,1083,1.141,1084,1.561,1085,1.561,1086,1.561,1087,1.308,1088,1.561,1089,1.561,1090,2.135,1091,1.308,1092,1.561,1093,1.561,1094,1.141,1095,1.561,1096,1.561,1097,1.561,1098,1.561,1099,1.308,1100,1.561,1101,1.561,1102,1.561,1103,1.561,1104,1.308,1105,1.561,1106,1.561]],["title/coverage.html",[1107,3.713]],["body/coverage.html",[7,0.031,16,0.32,35,2.268,37,2.02,39,2.02,43,2.121,46,0.868,48,3.072,49,3.072,89,0.02,90,0.02,91,0.771,92,1.658,94,2.971,95,3.133,107,0.48,110,2.02,115,1.822,116,2.599,119,2.268,120,2.599,136,1.822,137,0.868,138,2.599,150,1.014,154,1.437,156,2.599,162,2.268,163,2.268,184,0.938,220,1.264,221,2.02,222,2.599,283,2.02,284,1.701,285,3.198,337,1.517,370,2.02,371,2.647,388,1.014,390,1.517,392,1.517,393,1.284,395,2.02,401,1.284,402,2.02,403,2.02,425,3.294,474,1.186,549,2.02,561,1.517,569,2.02,574,2.02,576,2.02,578,2.02,625,1.822,627,1.517,628,1.822,632,1.394,673,2.268,675,2.599,739,2.02,842,2.268,983,2.268,1107,2.599,1108,3.102,1109,3.102,1110,2.599,1111,5.498,1112,6.604,1113,2.599,1114,2.599,1115,2.599,1116,4.286,1117,3.102,1118,5.558,1119,3.102,1120,3.102,1121,4.91,1122,3.591,1123,2.599,1124,2.599,1125,2.599,1126,5.296,1127,2.599,1128,4.286,1129,4.286,1130,2.599,1131,4.114,1132,2.599,1133,4.114,1134,4.114,1135,2.599,1136,2.599,1137,2.599,1138,2.599,1139,4.114,1140,2.599,1141,2.599,1142,3.591,1143,2.599,1144,2.599,1145,2.599,1146,3.591,1147,2.599,1148,2.599,1149,2.599,1150,3.102,1151,4.307,1152,2.599,1153,2.599,1154,2.599,1155,2.599,1156,2.599,1157,3.102,1158,2.599,1159,3.102,1160,3.102]],["title/miscellaneous/functions.html",[1048,2.862,1161,1.776]],["body/miscellaneous/functions.html",[7,0.029,59,1.122,89,0.026,90,0.026,96,0.744,106,1.42,107,0.965,121,1.975,170,2.501,402,3.697,403,3.697,477,3.034,1048,3.514,1125,4.028,1127,5.061,1151,3.514,1152,4.756,1161,3.131,1162,4.808,1163,5.061,1164,4.808,1165,4.808,1166,4.808,1167,4.808,1168,4.808]],["title/index.html",[96,0.422,772,1.776,773,1.994]],["body/index.html",[7,0.029,13,1.272,15,0.271,16,0.2,42,2.082,45,0.795,53,0.929,59,0.571,83,2.001,84,3.571,89,0.019,90,0.019,91,0.389,121,1.004,137,1.191,140,1.174,157,0.86,172,1.272,182,2.082,189,1.763,208,3.607,231,3.063,232,3.099,298,1.642,308,1.805,315,2.001,341,3.367,445,1.381,446,2.016,447,2.37,449,1.627,477,2.611,482,2.246,524,1.805,555,2.246,564,2.001,592,2.246,627,1.503,701,2.574,740,2.574,778,3.567,783,4.093,795,2.574,815,3.567,823,4.093,844,3.567,845,3.567,863,2.574,900,2.246,905,2.574,911,2.574,912,4.419,913,2.574,915,3.567,917,2.574,922,2.574,925,4.189,927,2.574,929,2.574,931,2.574,932,2.574,933,2.574,935,2.574,936,4.093,937,2.574,949,3.567,956,2.574,966,2.574,972,3.567,987,2.574,993,4.641,1006,2.574,1022,2.574,1064,2.574,1087,4.093,1090,4.093,1091,2.574,1099,4.093,1104,3.567,1111,2.574,1169,3.112,1170,2.574,1171,4.419,1172,3.073,1173,3.073,1174,4.257,1175,3.073,1176,4.257,1177,3.073,1178,3.073,1179,3.073,1180,4.885,1181,6.36,1182,4.257,1183,4.641,1184,2.574,1185,3.073,1186,3.073,1187,3.073,1188,3.073,1189,3.073,1190,3.073,1191,3.073,1192,6.157,1193,3.073,1194,3.073,1195,2.574,1196,2.574,1197,2.574,1198,3.073,1199,4.419,1200,3.073,1201,2.574,1202,3.073,1203,3.073,1204,3.073,1205,3.073,1206,3.073,1207,3.073,1208,3.073,1209,3.073,1210,3.073,1211,3.073,1212,4.257,1213,3.073,1214,3.073,1215,3.073,1216,3.073,1217,3.073,1218,3.073,1219,3.073,1220,3.073,1221,3.073,1222,3.073,1223,3.073,1224,3.073,1225,3.073,1226,3.073,1227,3.073,1228,3.073,1229,3.073,1230,3.073,1231,3.073,1232,3.073,1233,3.073,1234,3.073,1235,3.073,1236,3.073,1237,3.073,1238,3.073,1239,3.073,1240,3.073,1241,3.073,1242,3.073,1243,3.073,1244,3.073,1245,4.257,1246,3.073,1247,4.257,1248,3.073,1249,4.257,1250,3.073,1251,3.567,1252,3.073,1253,3.073,1254,3.073,1255,3.073,1256,3.073,1257,3.073,1258,3.073,1259,3.073,1260,3.073,1261,3.073,1262,3.073,1263,3.073,1264,3.073,1265,3.073,1266,3.073,1267,4.257,1268,3.073,1269,4.885,1270,3.073,1271,3.073,1272,3.073,1273,3.073,1274,3.073,1275,3.073,1276,3.073,1277,3.073,1278,3.073,1279,3.073,1280,3.567,1281,3.073,1282,3.073,1283,4.257,1284,4.257,1285,3.073,1286,3.073,1287,2.574,1288,4.257,1289,3.073,1290,3.073,1291,3.073,1292,3.073,1293,3.073,1294,3.073,1295,3.073,1296,3.073,1297,3.073,1298,3.073,1299,3.073,1300,3.073,1301,3.073,1302,3.073,1303,4.257,1304,3.073,1305,3.073,1306,3.073,1307,3.073,1308,3.073,1309,3.073,1310,3.073,1311,3.073,1312,3.073,1313,2.001,1314,2.246]],["title/license.html",[772,1.776,773,1.994,1313,1.776]],["body/license.html",[7,0.025,13,1.834,89,0.025,90,0.025,231,2.368,232,2.603,316,3.712,449,2.066,801,3.712,842,3.239,857,3.712,1183,3.712,1184,5.463,1195,4.528,1201,4.887,1287,4.528,1313,2.885,1314,3.239,1315,5.833,1316,4.43,1317,5.405,1318,4.43,1319,4.43,1320,4.43,1321,4.43,1322,4.43,1323,4.43,1324,4.43,1325,4.43,1326,4.43,1327,4.43,1328,4.43,1329,4.43,1330,4.43,1331,4.43,1332,4.43,1333,4.43,1334,4.43,1335,4.43,1336,5.405,1337,4.43,1338,4.43,1339,4.43,1340,4.43,1341,4.43,1342,4.43,1343,5.405,1344,5.405,1345,4.43,1346,4.43,1347,4.43,1348,4.43,1349,4.43,1350,4.43,1351,4.43,1352,4.43,1353,4.43,1354,4.43,1355,4.43,1356,4.43,1357,3.712,1358,4.43,1359,4.43,1360,4.43,1361,4.43,1362,4.43,1363,4.43,1364,4.43,1365,4.43,1366,4.43,1367,4.43,1368,4.43,1369,4.43,1370,4.43,1371,4.43,1372,4.43,1373,4.43]],["title/modules.html",[2,1.694]],["body/modules.html",[1,3.202,2,1.879,6,2.889,7,0.026,8,2.889,9,2.209,10,2.889,89,0.026,90,0.026,146,2.405,280,3.594,465,2.686,816,5.435,1374,6.487,1375,6.547,1376,4.917,1377,4.917]],["title/overview.html",[1378,3.713]],["body/overview.html",[1,4.24,2,1.611,3,2.355,4,3.531,5,3.531,6,3.799,7,0.031,8,3.799,9,2.906,10,3.799,11,2.563,12,2.061,13,1.745,85,1.611,89,0.024,90,0.024,93,1.611,146,3.136,147,3.531,148,3.531,149,3.531,150,2.074,155,2.253,337,2.79,388,2.074,497,1.745,530,3.531,531,3.531,561,2.79,614,3.531,616,3.531,632,2.563,670,3.531,671,3.531,672,3.531,761,3.531,763,3.531,955,3.081,1083,3.081,1378,3.531,1379,3.531]],["title/properties.html",[97,0.935,1014,2.285]],["body/properties.html",[7,0.03,42,2.395,89,0.026,90,0.026,97,1.169,124,2.878,189,2.028,231,2.618,232,2.878,298,2.618,780,4.104,1094,3.581,1169,3.581,1170,4.104,1313,3.19,1314,3.581,1357,4.104,1380,4.898,1381,4.898,1382,4.898,1383,4.898,1384,5.74,1385,4.898,1386,4.898,1387,4.898,1388,4.898,1389,4.898,1390,4.898,1391,4.898,1392,4.898,1393,4.898]],["title/miscellaneous/variables.html",[208,2.549,1161,1.776]],["body/miscellaneous/variables.html",[7,0.031,14,0.096,35,1.37,37,1.22,39,1.22,59,0.962,89,0.009,90,0.009,96,0.168,98,0.705,99,1.12,102,1.689,106,1.326,107,0.383,108,1.008,128,0.487,133,2.201,140,0.414,141,1.733,144,1.443,162,1.37,163,1.37,172,1.221,174,2.212,179,1.443,182,2.721,183,2.721,189,0.776,200,1.183,207,1.921,208,1.612,212,0.862,214,2.431,231,0.579,232,1.101,284,1.236,303,0.705,365,0.705,367,0.705,372,2.089,373,1.22,374,1.781,376,2.548,390,0.916,392,0.916,393,0.776,395,1.22,417,1.101,425,2.395,446,0.414,461,3.494,465,0.448,467,0.842,474,0.716,477,1.323,479,1.612,497,2.071,523,0.636,550,1.37,564,1.22,570,2.156,571,1.37,574,1.22,576,1.22,578,1.22,582,3.425,610,2.338,625,1.101,627,0.916,634,0.636,713,0.792,715,0.908,717,4.572,719,0.908,721,0.908,790,0.908,802,4.27,814,2.471,824,2.471,874,0.908,900,0.792,903,4.005,925,0.792,955,3.494,962,2.074,969,0.908,983,1.37,1013,0.908,1068,0.908,1069,0.908,1073,0.908,1081,1.57,1083,3.725,1094,0.792,1110,0.908,1113,0.908,1114,1.57,1115,0.908,1122,1.57,1123,1.57,1124,1.57,1130,0.908,1131,3.057,1132,0.908,1133,1.57,1134,2.792,1135,1.57,1136,1.57,1137,1.57,1138,2.792,1139,2.074,1140,1.57,1141,1.57,1142,2.471,1143,0.908,1144,1.57,1145,2.471,1146,1.57,1147,1.57,1148,0.908,1149,0.908,1151,0.792,1153,1.57,1154,1.57,1155,1.57,1156,5.049,1158,1.57,1161,0.705,1163,2.471,1169,1.37,1171,0.908,1196,0.908,1197,0.908,1199,0.908,1251,0.908,1280,0.908,1379,4.342,1394,1.083,1395,2.476,1396,1.083,1397,1.874,1398,1.083,1399,1.083,1400,2.95,1401,1.083,1402,1.083,1403,2.476,1404,1.083,1405,1.083,1406,1.083,1407,1.083,1408,1.083,1409,1.083,1410,1.083,1411,1.083,1412,1.083,1413,1.083,1414,1.083,1415,1.083,1416,1.083,1417,1.083,1418,1.083,1419,1.083,1420,3.913,1421,1.083,1422,1.083,1423,1.083,1424,1.083,1425,1.083,1426,1.083,1427,1.083,1428,1.083,1429,1.874,1430,1.083,1431,1.083,1432,2.476,1433,1.083,1434,1.083,1435,1.083,1436,1.083,1437,1.083,1438,1.083,1439,1.083,1440,1.874,1441,1.874,1442,1.083,1443,1.083,1444,1.083,1445,1.083,1446,1.083,1447,1.083,1448,1.083,1449,1.083,1450,1.083,1451,1.083,1452,1.083,1453,1.083,1454,1.083,1455,1.874,1456,1.083,1457,1.083,1458,1.083,1459,3.648,1460,1.874,1461,1.083,1462,1.874,1463,1.083,1464,1.874,1465,1.083,1466,1.083,1467,1.874,1468,1.083,1469,1.874,1470,1.083,1471,1.083,1472,1.874,1473,1.083,1474,1.874,1475,1.083,1476,1.083,1477,1.083,1478,1.083,1479,1.083,1480,1.083,1481,1.083,1482,1.083,1483,1.083,1484,1.874,1485,1.083,1486,1.083,1487,1.083,1488,1.083,1489,1.083,1490,1.083,1491,1.083,1492,1.083,1493,1.083,1494,1.083,1495,1.083,1496,1.083,1497,1.083,1498,1.083,1499,1.083,1500,1.083,1501,1.874,1502,1.083,1503,1.083,1504,1.874,1505,1.083,1506,1.083,1507,1.874,1508,1.083,1509,1.083,1510,1.874,1511,1.083,1512,1.083,1513,1.874,1514,1.083,1515,1.874,1516,1.083,1517,1.874,1518,1.083,1519,1.083,1520,1.874,1521,1.083,1522,1.874,1523,1.083,1524,1.083,1525,1.874,1526,1.083,1527,1.874,1528,1.083,1529,1.083,1530,1.083,1531,1.083,1532,1.083,1533,1.083,1534,1.083,1535,1.083,1536,1.083,1537,1.083,1538,1.874,1539,1.083,1540,1.083,1541,1.083,1542,1.083,1543,1.874,1544,1.083,1545,1.083,1546,1.874,1547,1.083,1548,1.874,1549,1.083,1550,1.083,1551,1.083,1552,1.083,1553,1.083,1554,1.083,1555,1.083,1556,1.083,1557,1.083,1558,1.083,1559,1.083,1560,1.083,1561,1.083,1562,1.083,1563,1.083,1564,1.083,1565,1.083,1566,1.083,1567,1.083,1568,1.083,1569,1.083,1570,1.083,1571,1.874,1572,1.083,1573,1.874,1574,3.333,1575,3.333,1576,3.333,1577,2.95,1578,1.874,1579,2.476,1580,1.874,1581,3.333,1582,2.95,1583,1.083,1584,1.083,1585,1.083,1586,1.083,1587,1.083,1588,1.083,1589,1.083,1590,1.083,1591,1.083,1592,1.083,1593,1.083,1594,1.083,1595,1.083,1596,1.083,1597,1.083,1598,1.083,1599,1.083,1600,1.083,1601,1.083,1602,1.083,1603,1.083,1604,1.083,1605,1.083,1606,1.083,1607,1.083,1608,1.083,1609,1.083,1610,1.083,1611,1.083,1612,1.083,1613,1.874,1614,1.083,1615,1.083,1616,2.95,1617,1.083,1618,1.083,1619,1.083,1620,1.083,1621,1.083,1622,1.083,1623,1.874,1624,1.874,1625,1.083,1626,1.874,1627,1.083,1628,1.083,1629,1.083,1630,1.083,1631,1.083,1632,1.083,1633,1.083,1634,1.083,1635,1.083,1636,1.874,1637,1.083,1638,1.874,1639,1.083,1640,1.874,1641,1.083,1642,2.476,1643,1.083,1644,1.083,1645,2.476,1646,1.083,1647,3.648,1648,2.95,1649,1.874,1650,1.874,1651,1.083,1652,1.874,1653,1.083,1654,1.874,1655,1.874,1656,1.083,1657,1.083,1658,1.083,1659,1.083,1660,1.874,1661,1.874,1662,1.874,1663,1.083,1664,1.874,1665,1.083,1666,1.083,1667,1.083,1668,1.083,1669,1.874,1670,2.95,1671,1.874,1672,2.476,1673,1.874,1674,1.874,1675,1.874,1676,1.874,1677,1.874,1678,1.874,1679,1.874,1680,3.333,1681,1.083,1682,2.476,1683,2.476,1684,1.874,1685,1.874,1686,1.083,1687,1.083,1688,1.083,1689,1.083,1690,1.083,1691,1.083,1692,1.083,1693,2.95,1694,4.897,1695,2.476,1696,2.95,1697,3.333,1698,1.083,1699,1.874,1700,3.648,1701,1.083,1702,2.476,1703,1.083,1704,1.874,1705,2.95,1706,1.083,1707,2.476,1708,4.78,1709,1.874,1710,1.083,1711,1.874,1712,1.874,1713,1.083,1714,4.78,1715,1.083,1716,1.083,1717,1.083,1718,3.648,1719,1.083,1720,1.083,1721,1.083,1722,1.083,1723,1.874,1724,1.083,1725,1.874,1726,3.333,1727,1.083,1728,1.083,1729,1.083,1730,1.083,1731,1.874,1732,1.083,1733,1.083,1734,1.083,1735,1.083,1736,1.083,1737,1.083,1738,1.083,1739,1.083,1740,2.95,1741,1.083,1742,1.083,1743,1.083,1744,1.083,1745,1.083,1746,1.083,1747,1.874,1748,1.083,1749,1.083,1750,1.083,1751,1.083,1752,1.874,1753,1.083,1754,1.083,1755,2.476,1756,1.083,1757,1.083,1758,1.083,1759,1.083,1760,1.083,1761,5.096,1762,1.874,1763,1.083,1764,1.083,1765,3.333,1766,1.083,1767,1.083,1768,1.083,1769,1.083,1770,1.083,1771,1.083,1772,3.648,1773,4.138,1774,2.476,1775,1.083,1776,1.083,1777,1.874,1778,1.083,1779,1.874,1780,1.083,1781,1.874,1782,1.083,1783,1.083,1784,1.083,1785,1.083,1786,1.083,1787,1.083,1788,1.083,1789,1.083,1790,1.083,1791,2.95,1792,1.083,1793,1.083,1794,1.874,1795,2.95,1796,1.874,1797,1.083,1798,2.95,1799,1.874,1800,1.083,1801,1.874,1802,1.083,1803,1.083,1804,1.874,1805,1.083,1806,1.083,1807,1.874,1808,1.083,1809,3.913,1810,1.874,1811,1.874,1812,1.083,1813,1.874,1814,1.874,1815,1.083,1816,1.083,1817,1.083,1818,1.874,1819,1.083,1820,1.874,1821,1.874,1822,1.083,1823,1.083,1824,1.083,1825,1.083,1826,1.874,1827,1.083,1828,1.083,1829,1.083,1830,1.083,1831,1.874,1832,1.083,1833,1.083,1834,1.083,1835,1.083,1836,3.648,1837,1.083,1838,1.083,1839,1.874,1840,1.083,1841,1.083,1842,1.083,1843,1.083,1844,1.083,1845,1.083,1846,1.083,1847,1.083,1848,1.083,1849,1.874,1850,1.083,1851,1.083,1852,1.083,1853,1.083,1854,1.083,1855,1.083,1856,1.083,1857,1.083,1858,1.083,1859,1.083,1860,1.083,1861,1.874,1862,1.083,1863,1.083,1864,1.083,1865,1.083,1866,1.083,1867,1.083,1868,1.083,1869,1.083,1870,1.083,1871,1.083,1872,1.083,1873,1.083,1874,1.083,1875,1.083,1876,1.083,1877,1.083,1878,1.083,1879,2.476,1880,1.083,1881,2.95,1882,1.874,1883,1.083,1884,1.083,1885,1.083,1886,1.083,1887,1.083,1888,1.083,1889,1.083,1890,1.083,1891,1.083,1892,1.083,1893,1.083,1894,1.083,1895,1.083,1896,1.083,1897,1.083,1898,1.083,1899,1.083,1900,1.083,1901,1.083,1902,1.083,1903,1.083,1904,1.083,1905,1.083,1906,1.083,1907,1.083,1908,1.083,1909,1.083,1910,1.083,1911,1.083,1912,1.083,1913,1.083,1914,1.083,1915,1.083,1916,1.083,1917,1.083,1918,1.083,1919,1.083,1920,1.874,1921,1.083,1922,1.083,1923,1.083,1924,1.083,1925,1.874,1926,1.083,1927,1.083,1928,1.083,1929,1.083,1930,1.083,1931,1.083,1932,1.083,1933,1.083,1934,1.083,1935,1.083,1936,1.083,1937,1.083,1938,1.083,1939,1.083,1940,1.083,1941,1.083,1942,1.083,1943,1.083,1944,1.874,1945,1.083,1946,1.083,1947,2.95,1948,1.083,1949,1.083,1950,1.083,1951,1.083,1952,1.083,1953,1.083,1954,1.083,1955,1.083,1956,1.083,1957,1.083,1958,1.083,1959,1.083,1960,1.083,1961,1.083,1962,1.083,1963,1.083,1964,1.083,1965,1.874,1966,1.083,1967,2.476,1968,1.083,1969,1.083,1970,1.083,1971,1.083,1972,1.083,1973,1.083,1974,1.083,1975,1.083,1976,1.083,1977,1.083,1978,1.083,1979,1.083,1980,1.083,1981,1.083,1982,1.083,1983,1.083,1984,1.083,1985,1.083,1986,4.138,1987,1.083,1988,1.083,1989,1.083,1990,1.083,1991,1.083,1992,1.083,1993,1.083,1994,1.083,1995,1.083,1996,1.083,1997,1.083,1998,1.874,1999,3.333,2000,1.083,2001,1.083,2002,1.083,2003,3.648,2004,1.874,2005,1.874,2006,1.874,2007,1.083,2008,1.874,2009,1.874,2010,1.083,2011,1.874,2012,1.083,2013,1.083,2014,1.083,2015,1.083,2016,1.874,2017,1.083,2018,1.083,2019,1.874,2020,1.083,2021,1.083,2022,1.083,2023,1.083]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":425,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.016",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.026",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.028",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.05",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.055",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.057",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.075",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.083",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.099",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.109",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.126",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.139",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.157",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.182",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.19",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.244",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.265",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.412",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.467",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.472",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":969,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["0.506",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.593",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.615",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.927",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.934",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1116,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1119,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1129,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1117,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1150,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1128,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["076ace0",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["077e473",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["08cead1",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["0b6b7fc",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":717,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":1157,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":582,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0004",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.1",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7965",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9029",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":1156,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["100px",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["108",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":903,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["11.0",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1922",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.2885",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3906",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.4",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.5582",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6209",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6223",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6557",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.7",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8652",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.9269",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":802,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["12.0",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2378",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3228",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3318",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3438",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.6543",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7115",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7344",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.8078",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":468,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["1200px",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12b86a7",{"_index":1082,"title":{},"body":{"changelog.html":{}}}],["12px",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.1192",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.2035",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.3",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.4627",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.5078",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.6",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.7",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.9996",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["134px",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["138a847",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["14.1",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4738",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.6",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.9",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1440px",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1454cbb",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["14a5e28",{"_index":1086,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.0",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.3",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.393",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.5735",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.8",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1555a25",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["16.0",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.2945",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.4",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c19.1764",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c8.60701",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6388",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.7",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16d3101",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["16px",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["17.0",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.2635",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6112",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6948",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c20.1986",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c7.70549",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.9",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["18.5479",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.8973",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18a3e23",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["19.1",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c11.2656",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c14.1434",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.3425",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.4301",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.6567",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.7929",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091c12.3443",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091l12",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.85l12.0731",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19043fc",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":461,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["2.0.14",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["2.2.1",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["2.4",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.4.0",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["2.4.1",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["2.5",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5.0",{"_index":780,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["2.5c14.9702",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c3.82903",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5zm6.73649",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["20.171",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.2",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c10.4922",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c14.9816",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.5",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.7157",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.9544",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2023",{"_index":801,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2024",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["21.1169c11.4093",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.1169c13.0971",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2031",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2388",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2886",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.318",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3516c11.7407",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3693c12.5003",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4132",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4238",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527c12.1193",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.5",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.9",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["22px",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.0",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.1",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.8",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["230",{"_index":496,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["235",{"_index":495,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["24",{"_index":814,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["24.0",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.3",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24bfb15",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["25.9",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["26.5",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.4",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29.0",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2c94638",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["2e6cb05",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2xl",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":610,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["3.1.2",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["3.72621",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.80141",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":206,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["30.0",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.8",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3001",{"_index":1197,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3047cec",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["31.6",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.8",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.5",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.3",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["34.1",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.4",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.0",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["36.0",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36b73e9",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["37.0",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.1",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.6",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["38.1",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38.7",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["39.0",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.6",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b146a3",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["3b5d838",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["3dc1a0a",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["3e35dc9",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1379,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.8",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.8236",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.1",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.3",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.4",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":438,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["41",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["41.0",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["42.2",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.6",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["425px",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.0",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.1",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.2",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.4",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.5",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.9",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.5",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.3",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.5",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.6",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4748b98",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["48.7",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48px",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["49.5",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4a434e6",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["4c15.1581",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c4.65746",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c7d29a",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xl",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4z",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1083,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5).join",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.052",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.38899",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.4",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.6",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.60482c10.8808",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.8",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.88043",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.9",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50.0",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":441,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["51",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["51.1",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["52.1",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.3",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52b97ed",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["53",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["53.6",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54e3ec0",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["55.2",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.1",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.3",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56px",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57.2",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5797c54",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["58.5",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5846c42",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["58px",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.0",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.4",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5ae3704",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["5b088e9",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["5rem",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.38882",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.73649",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.8",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60",{"_index":824,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["60.0",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.2",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.6",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.2",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["627",{"_index":470,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["627px",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["63",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["63.0",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.0",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.3",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64372f4",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["64px",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.0",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.3",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.8",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66.1",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6893d90",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["68d0202",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["69",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["69.4",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69.5",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a46be1",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["6efe0e6",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":955,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7.0",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.1",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.36118",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.4",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c10.5373",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c12.6094",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.94883",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.0",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.2",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.2",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["715e349",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":790,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["72.0",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.2",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.3",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.0",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.3",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76.9",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["765696a",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["77.4",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.5",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["778ad4e",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["78.0",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.7",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["792992e",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["7c6f199",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["7d82c0d",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541c11.6772",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.4",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c1",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c2.5",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c21.5",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c23",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.8",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.84185",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80px",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.2",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.7",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.9",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82.8",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82c0a3a",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["83.3",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84.5",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.1",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.3",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.9",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8594508",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["86.5",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["86.7",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.6",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.7",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.8",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8757519",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["88.2",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.3",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.6",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.9",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.0",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.7",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8a82a48",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["8b48513",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":497,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["9.0",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.01844",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.02981",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.2",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.8",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.85656",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.1",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.2",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.3",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.1",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.4",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.8",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.9",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.2",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.4",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.6",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.0",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.2",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.4",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.5",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.9",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.0",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.1",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.5",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.7",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.8",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.0",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.2",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.3",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.8",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.0",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.4",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.5",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.8",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96px",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.0",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.1",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.3",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.6",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.9",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["977df75",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["9790d30",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["98.0",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.5",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.6",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.7",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.8",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.9",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.0",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.1",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.2",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.4",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.6",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_color.svg",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_flat.svg",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.size",{"_index":650,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["a0e6d3f",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["a4a71e3",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["a58ec19",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1342,"title":{},"body":{"license.html":{}}}],["acbe81a",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":423,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["access",{"_index":1228,"title":{},"body":{"index.html":{}}}],["accesskeyid",{"_index":719,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["acl",{"_index":737,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["action",{"_index":1367,"title":{},"body":{"license.html":{}}}],["actions",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":815,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["added",{"_index":1282,"title":{},"body":{"index.html":{}}}],["adding",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["adjust",{"_index":1279,"title":{},"body":{"index.html":{}}}],["adjustments",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["advised",{"_index":1245,"title":{},"body":{"index.html":{}}}],["ago",{"_index":668,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["ahmed",{"_index":1391,"title":{},"body":{"properties.html":{}}}],["amz",{"_index":362,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["and/or",{"_index":1334,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":795,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["api_domain=opengraph.opensauced.pizza",{"_index":1262,"title":{},"body":{"index.html":{}}}],["api_host=0.0.0.0",{"_index":1260,"title":{},"body":{"index.html":{}}}],["api_port=3005",{"_index":1261,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":331,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["apiconfig",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiforbiddenresponse",{"_index":332,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinocontentresponse",{"_index":333,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinotfoundresponse",{"_index":334,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiokresponse",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apioperation",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiresponse",{"_index":335,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apis",{"_index":1153,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apitags(\"health",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"highlight",{"_index":340,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["apitags(\"insight",{"_index":563,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["apitags(\"user",{"_index":753,"title":{},"body":{"controllers/UserCardController.html":{}}}],["app",{"_index":956,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appear",{"_index":1257,"title":{},"body":{"index.html":{}}}],["application",{"_index":1087,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["argument",{"_index":487,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["arising",{"_index":1371,"title":{},"body":{"license.html":{}}}],["array",{"_index":1207,"title":{},"body":{"index.html":{}}}],["array.from(object.values(langs)).sort((a",{"_index":647,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["asc",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":1022,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["associated",{"_index":1324,"title":{},"body":{"license.html":{}}}],["async",{"_index":161,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["atwa",{"_index":1393,"title":{},"body":{"properties.html":{}}}],["author",{"_index":1390,"title":{},"body":{"properties.html":{}}}],["author_login",{"_index":599,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["authorization",{"_index":197,"title":{},"body":{"injectables/GithubService.html":{}}}],["authors",{"_index":1360,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1377,"title":{},"body":{"modules.html":{}}}],["avatarurl",{"_index":372,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":1246,"title":{},"body":{"index.html":{}}}],["await",{"_index":210,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["awaits",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["aware",{"_index":297,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["aws",{"_index":701,"title":{},"body":{"injectables/S3FileStorageService.html":{},"index.html":{}}}],["axios",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":648,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b.size",{"_index":649,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b1f870c",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["b62c129",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["b6abefa",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":493,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["backgroundimage",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["bee0e6e",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1273,"title":{},"body":{"index.html":{}}}],["being",{"_index":1006,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["below",{"_index":1304,"title":{},"body":{"index.html":{}}}],["beta",{"_index":1176,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["beta.10",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["beta.3",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["beta.6",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["beta.9",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["beta.opengraph.opensauced",{"_index":1178,"title":{},"body":{"index.html":{}}}],["beta@digital",{"_index":1177,"title":{},"body":{"index.html":{}}}],["binaries",{"_index":1185,"title":{},"body":{"index.html":{}}}],["bio",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biohtml",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blobmoji",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":373,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["body.length",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body.slice(0",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":927,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["boolean",{"_index":109,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["bootstrap",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boxshadow",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":1311,"title":{},"body":{"index.html":{}}}],["break",{"_index":1271,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1375,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1374,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":725,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{}}}],["bucketname",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer",{"_index":407,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{}}}],["buffers",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1386,"title":{},"body":{"properties.html":{}}}],["build",{"_index":783,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bump",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1316,"title":{},"body":{"license.html":{}}}],["c12099a",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["c2cc28c",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["c5a5fec",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":296,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["cached",{"_index":1248,"title":{},"body":{"index.html":{}}}],["caching",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["calculation",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["card",{"_index":298,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["card.controller",{"_index":535,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.controller.ts",{"_index":285,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"coverage.html":{}}}],["card.controller.ts:31",{"_index":751,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:33",{"_index":325,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.controller.ts:41",{"_index":560,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["card.controller.ts:51",{"_index":312,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.controller.ts:55",{"_index":747,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:65",{"_index":556,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["card.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["card.module.ts",{"_index":533,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.service",{"_index":338,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{}}}],["card.service.ts",{"_index":371,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["card.service.ts:120",{"_index":618,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:131",{"_index":765,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:147",{"_index":539,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:150",{"_index":622,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:159",{"_index":769,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:183",{"_index":545,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:26",{"_index":617,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:34",{"_index":624,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:35",{"_index":548,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/UserCardService.html":{}}}],["card.service.ts:36",{"_index":537,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:43",{"_index":771,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:44",{"_index":547,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:82",{"_index":620,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:84",{"_index":543,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:89",{"_index":767,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:96",{"_index":541,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.template",{"_index":397,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["card.template.ts",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/highlight",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["card/insight",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["card/templates/highlight",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/insight",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/card",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/insight",{"_index":1139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/repo",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/user",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/tailwind.config.ts",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/user",{"_index":1149,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/user",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["cardfooter",{"_index":1135,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardfooter(langs",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cards",{"_index":341,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{}}}],["cardstylesetup",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":728,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["catching",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["cba7521",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["ccc8a96",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["cdn",{"_index":936,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cdn.opensauced.pizzaother",{"_index":1253,"title":{},"body":{"index.html":{}}}],["cdncustomdomain",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdndisabled",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1255,"title":{},"body":{"index.html":{}}}],["changed",{"_index":905,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":774,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":1302,"title":{},"body":{"index.html":{}}}],["char",{"_index":1165,"title":{},"body":{"miscellaneous/functions.html":{}}}],["charge",{"_index":1321,"title":{},"body":{"license.html":{}}}],["charlimit",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charlimit).replace",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["checkhighlightsocialcard",{"_index":287,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkhighlightsocialcard(id",{"_index":289,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkin",{"_index":1285,"title":{},"body":{"index.html":{}}}],["checkinsightsocialcard",{"_index":551,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["checkinsightsocialcard(id",{"_index":553,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["checkrequiresupdate",{"_index":501,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["checkrequiresupdate(id",{"_index":538,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{}}}],["checkrequiresupdate(username",{"_index":764,"title":{},"body":{"injectables/UserCardService.html":{}}}],["checkusersocialcard",{"_index":741,"title":{},"body":{"controllers/UserCardController.html":{}}}],["checkusersocialcard(username",{"_index":743,"title":{},"body":{"controllers/UserCardController.html":{}}}],["churntotalcount",{"_index":122,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["cito",{"_index":1193,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1363,"title":{},"body":{"license.html":{}}}],["class",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["classes",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["clc",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.green(`{msg",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.yellow(`[{context",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["client",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["clip",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closed_prs_count",{"_index":123,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["closes",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_githubmodule",{"_index":147,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_exports",{"_index":148,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_providers",{"_index":149,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule",{"_index":530,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule_imports",{"_index":532,"title":{},"body":{"modules/HighlightCardModule.html":{}}}],["cluster_highlightcardmodule_providers",{"_index":531,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_insightcardmodule",{"_index":614,"title":{},"body":{"modules/InsightCardModule.html":{},"overview.html":{}}}],["cluster_insightcardmodule_imports",{"_index":615,"title":{},"body":{"modules/InsightCardModule.html":{}}}],["cluster_insightcardmodule_providers",{"_index":616,"title":{},"body":{"modules/InsightCardModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule",{"_index":670,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_exports",{"_index":671,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_providers",{"_index":672,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_usercardmodule",{"_index":761,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["cluster_usercardmodule_imports",{"_index":762,"title":{},"body":{"modules/UserCardModule.html":{}}}],["cluster_usercardmodule_providers",{"_index":763,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["code",{"_index":477,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code.tolowercase",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codename",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorize",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["colors",{"_index":1013,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["colors.util",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":1269,"title":{},"body":{"index.html":{}}}],["commitpat",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commits",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["committing",{"_index":1274,"title":{},"body":{"index.html":{}}}],["community",{"_index":1295,"title":{},"body":{"index.html":{}}}],["company",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companyhtml",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":1286,"title":{},"body":{"index.html":{}}}],["component",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["concatenation",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["concept",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1341,"title":{},"body":{"license.html":{}}}],["config",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config.accesskeyid",{"_index":720,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.get(\"api.logging",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["config.protocol}://${config.region}.${config.endpoint",{"_index":714,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.secretaccesskey",{"_index":722,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config/api.config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["config/digital",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config/github.config",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{}}}],["configmodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":1224,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configtype",{"_index":167,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["configuration",{"_index":937,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configured",{"_index":1258,"title":{},"body":{"index.html":{}}}],["connected",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1372,"title":{},"body":{"license.html":{}}}],["const",{"_index":200,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":165,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["constructor(config",{"_index":683,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["constructor(githubconfig",{"_index":166,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(httpservice",{"_index":536,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/UserCardService.html":{}}}],["container",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["contenttype",{"_index":693,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["context",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["continuous",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1368,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1290,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1288,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":987,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["contributor",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributors",{"_index":570,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["contributors.map",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributors.ts",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contributorsreq",{"_index":593,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsreq.data.data",{"_index":597,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsres",{"_index":596,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsres.map",{"_index":598,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["controller",{"_index":220,"title":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"highlights",{"_index":339,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["controller(\"insights",{"_index":562,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["controller(\"users",{"_index":752,"title":{},"body":{"controllers/UserCardController.html":{}}}],["controllers",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["conversation",{"_index":1297,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1336,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1195,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1315,"title":{},"body":{"license.html":{}}}],["correct",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["cost",{"_index":215,"title":{},"body":{"injectables/GithubService.html":{}}}],["count",{"_index":516,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{}}}],["couple",{"_index":1278,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1107,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":98,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":718,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["curr",{"_index":422,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["custom",{"_index":935,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["customprops",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["d4f854d",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["d84015b",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["d='m6.73649",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1364,"title":{},"body":{"license.html":{}}}],["dark",{"_index":962,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":472,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["data:image/svg+xml,%3csvg",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data:image/svg+xml;base64,${btoa(await",{"_index":488,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["database",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["databaseid",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":202,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date((new",{"_index":204,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(string(repo?.pushedat",{"_index":638,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(updated_at",{"_index":433,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["date).getdate",{"_index":665,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate((new",{"_index":664,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate(today.getdate",{"_index":205,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["datesince",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datetime",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":667,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["dbinsight",{"_index":92,"title":{"interfaces/DbInsight.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["dbreaction",{"_index":115,"title":{"interfaces/DbReaction.html":{}},"body":{"interfaces/DbReaction.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["dbrepo",{"_index":119,"title":{"interfaces/DbRepo.html":{}},"body":{"interfaces/DbRepo.html":{},"coverage.html":{}}}],["dbuserhighlight",{"_index":136,"title":{"interfaces/DbUserHighlight.html":{}},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["dbuserinsightrepo",{"_index":110,"title":{"interfaces/DbUserInsightRepo.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["dc9f3a4",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["dd096ca",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1326,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1373,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["defauls",{"_index":1240,"title":{},"body":{"index.html":{}}}],["default",{"_index":182,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1254,"title":{},"body":{"index.html":{}}}],["defined",{"_index":168,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["deleted_at",{"_index":139,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":1091,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deployment",{"_index":915,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deps",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":124,"title":{},"body":{"interfaces/DbRepo.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"properties.html":{}}}],["design",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["dev",{"_index":1199,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dev/usercards.ts",{"_index":1210,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1205,"title":{},"body":{"index.html":{}}}],["development",{"_index":925,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["devit",{"_index":1244,"title":{},"body":{"index.html":{}}}],["differently",{"_index":1259,"title":{},"body":{"index.html":{}}}],["digital",{"_index":931,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["digitalocean",{"_index":1231,"title":{},"body":{"index.html":{}}}],["digitaloceanconfig",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["digitaloceanspaces.com",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":448,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["direction",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":481,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["discord.find",{"_index":1298,"title":{},"body":{"index.html":{}}}],["disk",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk_percentage",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_percentage=0.7",{"_index":1265,"title":{},"body":{"index.html":{}}}],["disk_size",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_size=100",{"_index":1266,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":900,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["displayname",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/local",{"_index":1212,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1332,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["div",{"_index":1068,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["do_spaces_",{"_index":1237,"title":{},"body":{"index.html":{}}}],["do_spaces_access_key_id",{"_index":1233,"title":{},"body":{"index.html":{}}}],["do_spaces_bucket_name=opengraph",{"_index":1243,"title":{},"body":{"index.html":{}}}],["do_spaces_cdn_disabled=trueif",{"_index":1250,"title":{},"body":{"index.html":{}}}],["do_spaces_endpoint=digitaloceanspaces.com",{"_index":1241,"title":{},"body":{"index.html":{}}}],["do_spaces_region=sfo3",{"_index":1242,"title":{},"body":{"index.html":{}}}],["do_spaces_secret_access_key=*******************************************ping",{"_index":1234,"title":{},"body":{"index.html":{}}}],["do_spaces_subdomain=beta.opengraph",{"_index":1252,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.23",{"_index":1190,"title":{},"body":{"index.html":{}}}],["document",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":842,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":1251,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dot",{"_index":1380,"title":{},"body":{"properties.html":{}}}],["double",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["downgrade",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["draft_prs_count",{"_index":125,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["dry",{"_index":1281,"title":{},"body":{"index.html":{}}}],["during",{"_index":1249,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["e152d09",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["e81f5c1",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["e91c43f",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["earlier",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":716,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["edge",{"_index":428,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["edge.node",{"_index":429,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge.size",{"_index":430,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge?.node.id",{"_index":641,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edges",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji",{"_index":479,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["emoji_id",{"_index":117,"title":{},"body":{"interfaces/DbReaction.html":{}}}],["emojicache",{"_index":1154,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":1289,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":713,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["engineer",{"_index":1222,"title":{},"body":{"index.html":{}}}],["engines",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["env.example",{"_index":1220,"title":{},"body":{"index.html":{}}}],["environment",{"_index":972,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["environments",{"_index":922,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["error",{"_index":729,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["error.name",{"_index":731,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["errors",{"_index":949,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eslint",{"_index":480,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["eslint/no",{"_index":485,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["etl",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1359,"title":{},"body":{"license.html":{}}}],["exceeded",{"_index":345,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["exceeded'})@apibadrequestresponse({description",{"_index":323,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["exceeded'})@redirect",{"_index":750,"title":{},"body":{"controllers/UserCardController.html":{}}}],["except",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["exclude",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["exists",{"_index":519,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["explanation",{"_index":1226,"title":{},"body":{"index.html":{}}}],["export",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["exports",{"_index":152,"title":{},"body":{"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{}}}],["express",{"_index":1350,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extraneous",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["extrenaous",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["f1f5947",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["f761ac8",{"_index":1106,"title":{},"body":{"changelog.html":{}}}],["f7db713",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":527,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fastify",{"_index":336,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["fastifyreply",{"_index":291,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["fc9211c",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["fe44711",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":1200,"title":{},"body":{"index.html":{}}}],["ff5f13",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["filecontent",{"_index":695,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists",{"_index":679,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists(hash",{"_index":685,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["files",{"_index":1325,"title":{},"body":{"license.html":{}}}],["fileurl",{"_index":356,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fill",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='%2324292f'/%3e%3c/svg%3e",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='none",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter(boolean",{"_index":655,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["filter(repo",{"_index":652,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["filteredlangs",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs.length",{"_index":2020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1219,"title":{},"body":{"index.html":{}}}],["first",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":385,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["fitness",{"_index":1355,"title":{},"body":{"license.html":{}}}],["fix",{"_index":863,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixes",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":1069,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["fluent",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fluentflat",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":1217,"title":{},"body":{"index.html":{}}}],["following",{"_index":1183,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["fonts",{"_index":406,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["footer.ts",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":377,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["forcepathstyle",{"_index":712,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["formatit",{"_index":1272,"title":{},"body":{"index.html":{}}}],["formattedname",{"_index":631,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["found",{"_index":308,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{}}}],["found'})@apiforbiddenresponse({description",{"_index":321,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["free",{"_index":1320,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["fs",{"_index":383,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fs.readfile(\"node_modules/@fontsource/inter/files/inter",{"_index":437,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["full",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["full_name",{"_index":114,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["function",{"_index":1126,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1048,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":1339,"title":{},"body":{"license.html":{}}}],["gaps",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":1381,"title":{},"body":{"properties.html":{}}}],["generate",{"_index":1064,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generatecardbuffer",{"_index":450,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["generatecardbuffer(highlightid",{"_index":540,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["generatecardbuffer(insightid",{"_index":619,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["generatecardbuffer(username",{"_index":766,"title":{},"body":{"injectables/UserCardService.html":{}}}],["generated",{"_index":1307,"title":{},"body":{"index.html":{}}}],["generatehighlightsocialcard",{"_index":288,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generatehighlightsocialcard(id",{"_index":313,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generateinsightsocialcard",{"_index":552,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["generateinsightsocialcard(id",{"_index":557,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["generates",{"_index":315,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{}}}],["generateusersocialcard",{"_index":742,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generateusersocialcard(username",{"_index":748,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generating",{"_index":823,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generation",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":1170,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(\"/:id",{"_index":342,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get(\"/:id/metadata",{"_index":351,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get(\"/:username",{"_index":754,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/:username/metadata",{"_index":760,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/service",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":314,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get('/:id/metadata')@apioperation({operationid",{"_index":292,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get('/:username')@apioperation({operationid",{"_index":749,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/:username/metadata')@apioperation({operationid",{"_index":744,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcdnendpoint",{"_index":676,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified",{"_index":680,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified(hash",{"_index":687,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta",{"_index":681,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta(hash",{"_index":689,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfonts",{"_index":434,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["getgetinsightcard",{"_index":613,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["getgetinsightcard(id",{"_index":621,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["gethighlightcard",{"_index":528,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightcard(id",{"_index":544,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightdata",{"_index":408,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightdata(highlightid",{"_index":546,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightsocialcardmetadata",{"_index":293,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["geticoncode",{"_index":402,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["geticoncode(char",{"_index":1164,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geticoncode(segment",{"_index":490,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["getinsightdata",{"_index":579,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["getinsightdata(insightid",{"_index":623,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["getinsightsocialcardmetadata",{"_index":554,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["getoriginendpoint",{"_index":677,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getrepo",{"_index":162,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrepo(owner",{"_index":171,"title":{},"body":{"injectables/GithubService.html":{}}}],["gets",{"_index":294,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["getting",{"_index":772,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["getuser",{"_index":163,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser(username",{"_index":177,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusercard",{"_index":669,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getusercard(username",{"_index":768,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getuserdata",{"_index":633,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getuserdata(username",{"_index":770,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getusersocialcardmetadata",{"_index":745,"title":{},"body":{"controllers/UserCardController.html":{}}}],["gfonts",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1388,"title":{},"body":{"properties.html":{}}}],["github",{"_index":913,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github.service",{"_index":153,"title":{},"body":{"modules/GithubModule.html":{}}}],["github/entities/db",{"_index":398,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["github/github.module",{"_index":534,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["github/github.service",{"_index":387,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["github_pat_user=ghp_",{"_index":1230,"title":{},"body":{"index.html":{}}}],["githubconfig",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubconfig.userpat",{"_index":199,"title":{},"body":{"injectables/GithubService.html":{}}}],["githubmodule",{"_index":146,"title":{"modules/GithubModule.html":{}},"body":{"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["githubservice",{"_index":150,"title":{"injectables/GithubService.html":{}},"body":{"modules/GithubModule.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["global",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["go",{"_index":1204,"title":{},"body":{"index.html":{}}}],["goes",{"_index":1213,"title":{},"body":{"index.html":{}}}],["gql/get",{"_index":191,"title":{},"body":{"injectables/GithubService.html":{}}}],["gradient",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient(var",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grammar",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":1319,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1376,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":187,"title":{},"body":{"injectables/GithubService.html":{},"changelog.html":{}}}],["graphql.defaults",{"_index":195,"title":{},"body":{"injectables/GithubService.html":{}}}],["graphqlwithauth",{"_index":158,"title":{},"body":{"injectables/GithubService.html":{}}}],["grass",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guide",{"_index":1292,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1293,"title":{},"body":{"index.html":{}}}],["handler",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["hasfile",{"_index":357,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hash",{"_index":502,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hassponsorslisting",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["having",{"_index":1202,"title":{},"body":{"index.html":{}}}],["head",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["header",{"_index":326,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["header(\"content",{"_index":343,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["headers",{"_index":196,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["headobjectcommand",{"_index":699,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["health",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":282,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":221,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":280,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["healthstatusservice",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["hearticondata",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":469,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["height='24",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":1239,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1318,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":140,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["highlight.data",{"_index":416,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlight.entity",{"_index":399,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlight.entity.ts",{"_index":138,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"coverage.html":{}}}],["highlightcardcontroller",{"_index":283,"title":{"controllers/HighlightCardController.html":{}},"body":{"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"coverage.html":{}}}],["highlightcarddata",{"_index":370,"title":{"interfaces/HighlightCardData.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["highlightcardmodule",{"_index":6,"title":{"modules/HighlightCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules.html":{},"overview.html":{}}}],["highlightcardservice",{"_index":337,"title":{"injectables/HighlightCardService.html":{}},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"overview.html":{}}}],["highlightcardtemplate",{"_index":395,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["highlightcardtemplate(avatarurl",{"_index":458,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightdata",{"_index":451,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightid",{"_index":409,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreactions",{"_index":414,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreactions.data.reduce((acc",{"_index":421,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreq",{"_index":410,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlights",{"_index":286,"title":{},"body":{"controllers/HighlightCardController.html":{},"changelog.html":{}}}],["highlights/${string(id)}.png",{"_index":503,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["higlight",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1361,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1383,"title":{},"body":{"properties.html":{}}}],["host",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host_id",{"_index":126,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["hsl(116",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(120",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(121",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(122",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(124",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(126",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(130",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(131",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(132",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(133",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(134",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(135",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(136",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(137",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(146",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(15",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(19",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(195",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(197",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(198",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(199",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(200",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(201",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(203",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(205",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(206",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(207",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(208",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(209",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(210",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(211",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(212",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(213",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(214",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(216",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(23",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(24",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(25",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(26",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(28",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(30",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(33",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(351",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(353",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(354",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(356",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(357",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(358",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(359",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(360",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(0",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(181",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(182",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(19",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(200",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(202",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(204",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(205",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(206",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(207",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(208",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(209",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(210",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(211",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(216",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":452,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["html(insightcardtemplate(pagename",{"_index":607,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["http",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["https",{"_index":1073,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/gh/shuding/fluentui",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/gh/svgmoji/svgmoji/packages/svgmoji__noto/svg",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/npm/@svgmoji/blob@2.0.0/svg",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/npm/@svgmoji/openmoji@2.0.0/svg",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cdnjs.cloudflare.com/ajax/libs/twemoji/14.0.2/svg",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/${login}.png?size=150",{"_index":431,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["https://github.com/open",{"_index":1384,"title":{},"body":{"properties.html":{}}}],["https://unpkg.com/twemoji@13.1.0/dist/twemoji.esm.js",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.github.com/${author_login}.png?size=50",{"_index":600,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["https://www.github.com/${owner}.png?size=50",{"_index":604,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["httpservice",{"_index":379,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["httpstatus",{"_index":327,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.bad_request",{"_index":355,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["httpstatus.no_content",{"_index":352,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_found",{"_index":354,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_modified",{"_index":353,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["icon",{"_index":983,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":99,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["id'})@apinocontentresponse({description",{"_index":300,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["id'})@header('content",{"_index":317,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["id'})@redirect",{"_index":324,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["identifier",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["image",{"_index":301,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["image'})@apinotfoundresponse({description",{"_index":320,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png",{"_index":344,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png')@apiokresponse({type",{"_index":318,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["images",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["img",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1351,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori",{"_index":453,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori\")).default",{"_index":455,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["imports",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["improve",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1345,"title":{},"body":{"license.html":{}}}],["including",{"_index":1287,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":96,"title":{"index.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["inject(digitaloceanconfig.key",{"_index":710,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["inject(githubconfig.key",{"_index":193,"title":{},"body":{"injectables/GithubService.html":{}}}],["injectable",{"_index":154,"title":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"overview.html":{}}}],["input",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insertion",{"_index":1061,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":1208,"title":{},"body":{"index.html":{}}}],["insight",{"_index":555,"title":{},"body":{"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"index.html":{}}}],["insight.entity",{"_index":573,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insight.entity.ts",{"_index":95,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["insight_id",{"_index":112,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["insightcardcontroller",{"_index":549,"title":{"controllers/InsightCardController.html":{}},"body":{"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"coverage.html":{}}}],["insightcarddata",{"_index":569,"title":{"interfaces/InsightCardData.html":{}},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["insightcardmodule",{"_index":8,"title":{"modules/InsightCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InsightCardModule.html":{},"modules.html":{},"overview.html":{}}}],["insightcardservice",{"_index":561,"title":{"injectables/InsightCardService.html":{}},"body":{"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"overview.html":{}}}],["insightcardtemplate",{"_index":574,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightcontributors",{"_index":578,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightcontributors(contributors",{"_index":608,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightdata",{"_index":605,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightfooter",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightfooter(contributors",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insightid",{"_index":580,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightpagereq",{"_index":583,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightpagereq.data",{"_index":585,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightrepos",{"_index":576,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightrepos(repos",{"_index":609,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insights",{"_index":550,"title":{},"body":{"controllers/InsightCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["insights/${string(id)}.png",{"_index":611,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["install",{"_index":1191,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1186,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":730,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["instead",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":471,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["interarraybuffer",{"_index":462,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["interarraybuffermedium",{"_index":463,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["interarraybuffermediumreq",{"_index":440,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["interarraybufferreq",{"_index":436,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["interface",{"_index":91,"title":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"interfaces/InsightCardData.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":93,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"interfaces/InsightCardData.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"overview.html":{}}}],["invalid",{"_index":310,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["is_favorite",{"_index":100,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["is_public",{"_index":101,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["isbountyhunter",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscampusexpert",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeveloperprogrammember",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemployee",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isgithubstar",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["ishireable",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprivate",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issiteadmin",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issue",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":127,"title":{},"body":{"interfaces/DbRepo.html":{},"changelog.html":{}}}],["join",{"_index":592,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"index.html":{}}}],["join(joinliteral",{"_index":2021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joinliteral",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":382,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["json.stringify(ratelimit",{"_index":219,"title":{},"body":{"injectables/GithubService.html":{}}}],["key",{"_index":727,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["keys",{"_index":1236,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":1382,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1349,"title":{},"body":{"license.html":{}}}],["langlist",{"_index":426,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["langrepos",{"_index":636,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langrepos.map(repo",{"_index":639,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs",{"_index":374,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["langs.filter",{"_index":2017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["langs.ts",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs[edge.node.id",{"_index":643,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs[edge.node.id].size",{"_index":644,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langtotal",{"_index":375,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["language",{"_index":128,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":874,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages(first",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":364,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["lastmodified",{"_index":359,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified.toisostring",{"_index":520,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified?.toisostring",{"_index":366,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["lastmodifiedreq",{"_index":507,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["latest",{"_index":295,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["layout",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":666,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["level",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["levelfirst",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":1365,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1362,"title":{},"body":{"license.html":{}}}],["license",{"_index":1313,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["light",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":214,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["limit).join",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":1328,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1352,"title":{},"body":{"license.html":{}}}],["line",{"_index":483,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["link",{"_index":558,"title":{},"body":{"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["lins",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":1267,"title":{},"body":{"index.html":{}}}],["lintthis",{"_index":1270,"title":{},"body":{"index.html":{}}}],["literal",{"_index":572,"title":{},"body":{"interfaces/InsightCardData.html":{}}}],["little",{"_index":1225,"title":{},"body":{"index.html":{}}}],["live",{"_index":911,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["load",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["loadadditionalasset",{"_index":476,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["loademoji",{"_index":403,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loademoji(\"twemoji",{"_index":489,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["loademoji(type",{"_index":1166,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loading",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":446,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":845,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["location",{"_index":367,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":159,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["logger(githubservice.name",{"_index":185,"title":{},"body":{"injectables/GithubService.html":{}}}],["logger(this.constructor.name",{"_index":405,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["loggermodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forrootasync",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":141,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["lowercase",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":1187,"title":{},"body":{"index.html":{}}}],["main",{"_index":1172,"title":{},"body":{"index.html":{}}}],["make",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":2018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(repo",{"_index":590,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["matching",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxrepoqueryidslenght",{"_index":581,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["media",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["memory_heap",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_heap=200",{"_index":1263,"title":{},"body":{"index.html":{}}}],["memory_rss",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_rss=3000",{"_index":1264,"title":{},"body":{"index.html":{}}}],["memoryhealthindicator",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1354,"title":{},"body":{"license.html":{}}}],["merge",{"_index":857,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["merged_prs_count",{"_index":129,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["message",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messageformat",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":363,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["metadata",{"_index":299,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{}}}],["metadata?.[\"reactions",{"_index":515,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["metadatareq",{"_index":510,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["method",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":160,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["min",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1161,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1280,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1314,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modified",{"_index":365,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1330,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{}}}],["moduleresolution",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["mohamed",{"_index":1392,"title":{},"body":{"properties.html":{}}}],["monthlyestimatedsponsorsincomeincents",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostly",{"_index":1227,"title":{},"body":{"index.html":{}}}],["move",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.length",{"_index":2023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.substring(0",{"_index":2022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.ts",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":1223,"title":{},"body":{"index.html":{}}}],["namewithowner",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":1182,"title":{},"body":{"index.html":{}}}],["needs",{"_index":305,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["needsupdate",{"_index":358,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["nestjs",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/axios",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common/utils/cli",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/config",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{}}}],["nestjs/swagger",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["nestjs/terminus",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["new",{"_index":184,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{}}}],["newer",{"_index":521,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["next",{"_index":482,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"index.html":{}}}],["nextjs",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":1081,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["node16",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["node:fs/promises",{"_index":384,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["node:stream",{"_index":703,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["node>=18.15.0",{"_index":1188,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1358,"title":{},"body":{"license.html":{}}}],["normal",{"_index":475,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["normal.woff",{"_index":439,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notable",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":732,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["notfoundexception",{"_index":378,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notice",{"_index":1343,"title":{},"body":{"license.html":{}}}],["noto",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1192,"title":{},"body":{"index.html":{}}}],["npm>=9.6.3",{"_index":1189,"title":{},"body":{"index.html":{}}}],["null",{"_index":145,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["number",{"_index":108,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["number(curr.reaction_count",{"_index":424,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["number(parsefloat(process.env.disk_percengate",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.disk_size",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_heap",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_rss",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(langs).includes(edge.node.id",{"_index":642,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["obtaining",{"_index":1323,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":932,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ocean.app",{"_index":1174,"title":{},"body":{"index.html":{}}}],["ocean.config",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["ocean.config.ts",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["octo",{"_index":1308,"title":{},"body":{"index.html":{}}}],["octokit",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["octokit/graphql",{"_index":188,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["one",{"_index":564,"title":{},"body":{"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["one'})@header('content",{"_index":559,"title":{},"body":{"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["opacity",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["open_prs_count",{"_index":130,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["opengraph",{"_index":1169,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph.opensauced",{"_index":1175,"title":{},"body":{"index.html":{}}}],["opengraph.opensauced.pizza",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opengraph@digital",{"_index":1173,"title":{},"body":{"index.html":{}}}],["opening",{"_index":1275,"title":{},"body":{"index.html":{}}}],["openmoji",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opensauced",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationid",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["optimize",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":121,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["orange",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1180,"title":{},"body":{"index.html":{}}}],["orderby",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization(login",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations(first",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationverifieddomainemails",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os.${string(config.get(\"api.codename\")).tolowercase",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["otherwise",{"_index":1370,"title":{},"body":{"license.html":{}}}],["out",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1216,"title":{},"body":{"index.html":{}}}],["outputs",{"_index":1211,"title":{},"body":{"index.html":{}}}],["overflowing",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1378,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1300,"title":{},"body":{"index.html":{}}}],["owner",{"_index":174,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":1014,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":1283,"title":{},"body":{"index.html":{}}}],["pagename",{"_index":571,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["paginate",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":328,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["param(\"id",{"_index":346,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["param(\"username",{"_index":755,"title":{},"body":{"controllers/UserCardController.html":{}}}],["parameters",{"_index":170,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{}}}],["parseintpipe",{"_index":329,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["partial",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1356,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":347,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["path",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["performance",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1317,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1337,"title":{},"body":{"license.html":{}}}],["person",{"_index":1322,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1338,"title":{},"body":{"license.html":{}}}],["pid,hostname,context",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["pinned",{"_index":142,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["pinneditems",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pino",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["pinohttp",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":1291,"title":{},"body":{"index.html":{}}}],["png",{"_index":348,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata",{"_index":498,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata.aspng",{"_index":500,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["port",{"_index":1196,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1347,"title":{},"body":{"license.html":{}}}],["pr's",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["pr_active_count",{"_index":131,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["pr_velocity_count",{"_index":132,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["prefix",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["prerequisites",{"_index":1179,"title":{},"body":{"index.html":{}}}],["pretty",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["primarylanguage",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":157,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["proceed",{"_index":1294,"title":{},"body":{"index.html":{}}}],["process.env.api_base_url!}/v2/contributors/search?${string(query",{"_index":595,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["process.env.ci",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.do_spaces_cdn_disabled",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1171,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":627,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":778,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":180,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["promise.all([highlightreq",{"_index":415,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["promise.all([interarraybufferreq",{"_index":443,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["promise.all([lastmodifiedreq",{"_index":512,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["pronouns",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proof",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"properties.html":{}}}],["protocol",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":316,"title":{},"body":{"controllers/HighlightCardController.html":{},"license.html":{}}}],["provider",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["prpat",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":444,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["publish",{"_index":1331,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1276,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1357,"title":{},"body":{"license.html":{},"properties.html":{}}}],["pushed_at",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pushedat",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putobjectcommand",{"_index":700,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["quality",{"_index":1268,"title":{},"body":{"index.html":{}}}],["query",{"_index":207,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["query.set",{"_index":587,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["questions",{"_index":1296,"title":{},"body":{"index.html":{}}}],["radial",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":322,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["ratelimit",{"_index":164,"title":{},"body":{"injectables/GithubService.html":{}}}],["reaction",{"_index":523,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["reaction.entity",{"_index":400,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reaction.entity.ts",{"_index":116,"title":{},"body":{"interfaces/DbReaction.html":{},"coverage.html":{}}}],["reaction_count",{"_index":118,"title":{},"body":{"interfaces/DbReaction.html":{}}}],["reactions",{"_index":376,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["reactionsreq",{"_index":412,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["read",{"_index":738,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readable",{"_index":692,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readme",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":111,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["realpercent",{"_index":2019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["record",{"_index":634,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["red",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":330,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["redirecting",{"_index":525,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["refactoring",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["regeneration",{"_index":306,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["region",{"_index":715,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["registeras(\"api",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"digitalocean",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"github",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release",{"_index":912,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remaining",{"_index":216,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["remove",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["repalce",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":172,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["repo.full_name.split",{"_index":603,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repo.languages?.edges?.flatmap(edge",{"_index":427,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.languages?.edges?.map(edge",{"_index":640,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo.languages?.totalsize",{"_index":432,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.repo_id",{"_index":591,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repo.ts",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo?.isprivate",{"_index":653,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo?.owner.login",{"_index":654,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo_id",{"_index":113,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["repoiconwithname",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repoids",{"_index":588,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repolist",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.length",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.slice(0",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponame",{"_index":417,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["reponame.length",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponame.substring(0",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos",{"_index":102,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["repos.entity.ts",{"_index":120,"title":{},"body":{"interfaces/DbRepo.html":{},"coverage.html":{}}}],["repos.length",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.map",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.map(repo",{"_index":602,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repos.ts",{"_index":1142,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":601,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{}}}],["repositories(first",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoriescontributedto",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":189,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["representation",{"_index":1306,"title":{},"body":{"index.html":{}}}],["request",{"_index":1277,"title":{},"body":{"index.html":{}}}],["requestmethod",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":1090,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["requiresupdatemeta",{"_index":401,"title":{"interfaces/RequiresUpdateMeta.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["res",{"_index":290,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(fileurl",{"_index":566,"title":{},"body":{"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(url",{"_index":568,"title":{},"body":{"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.ok).send(png",{"_index":350,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["reset",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["resetat",{"_index":217,"title":{},"body":{"injectables/GithubService.html":{}}}],["resourcepath",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":734,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.lastmodified",{"_index":735,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.metadata",{"_index":736,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["restriction",{"_index":1327,"title":{},"body":{"license.html":{}}}],["results",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resvg",{"_index":380,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg(svg",{"_index":492,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg.render",{"_index":499,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg/resvg",{"_index":381,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["return",{"_index":212,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":175,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["returnval",{"_index":506,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.lastmodified",{"_index":513,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.needsupdate",{"_index":526,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["reverse",{"_index":1221,"title":{},"body":{"index.html":{}}}],["rewrite",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["rewrites",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(17",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(181",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(237",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(238",{"_index":494,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["rights",{"_index":1329,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["rolled",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["rule='evenodd",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1181,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":386,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["s3",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{}}}],["s3client",{"_index":678,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["s3filestoragemodule",{"_index":9,"title":{"modules/S3FileStorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["s3filestorageservice",{"_index":388,"title":{"injectables/S3FileStorageService.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["same",{"_index":524,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"index.html":{}}}],["sanitizedusername",{"_index":756,"title":{},"body":{"controllers/UserCardController.html":{}}}],["satori",{"_index":454,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["satori(template",{"_index":466,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["sauced",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["sauced/maintainers",{"_index":1235,"title":{},"body":{"index.html":{}}}],["sauced/opengraph",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza#readme",{"_index":1385,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza.git",{"_index":1389,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza/issues",{"_index":1387,"title":{},"body":{"properties.html":{}}}],["savedreactions",{"_index":514,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["schema",{"_index":190,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["screens",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":447,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["sdk",{"_index":929,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sdk/client",{"_index":702,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["secretaccesskey",{"_index":721,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["segment",{"_index":478,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["sell",{"_index":1335,"title":{},"body":{"license.html":{}}}],["send",{"_index":369,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["sensibly",{"_index":1238,"title":{},"body":{"index.html":{}}}],["server",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["set",{"_index":1099,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["setup.ts",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sfo3",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1344,"title":{},"body":{"license.html":{}}}],["short_code",{"_index":103,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["singleline",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":133,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["slate",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice(0",{"_index":589,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["social",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["socialaccounts(first",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1184,"title":{},"body":{"index.html":{},"license.html":{}}}],["sometimes",{"_index":1256,"title":{},"body":{"index.html":{}}}],["source",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["spaces",{"_index":933,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["spacing",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spam_prs_count",{"_index":134,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["spec",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":419,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["splitting",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.config.ts",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../digital",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.config.ts",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../highlight",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../insight",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1162,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repo",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tailwind.config.ts",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../twemoji.ts",{"_index":1163,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/api.config.ts",{"_index":1110,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/digital",{"_index":1113,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/github.config.ts",{"_index":1115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/github/entities/db",{"_index":94,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["src/github/github.module.ts",{"_index":151,"title":{},"body":{"modules/GithubModule.html":{}}}],["src/github/github.service.ts",{"_index":156,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/github/github.service.ts:12",{"_index":186,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:13",{"_index":169,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:22",{"_index":178,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:33",{"_index":173,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:41",{"_index":181,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/gql/get",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health/health.controller.ts",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":281,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/s3",{"_index":673,"title":{},"body":{"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["src/social",{"_index":284,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/twemoji.ts",{"_index":1151,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["starredrepositories",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stars",{"_index":135,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["start",{"_index":1194,"title":{},"body":{"index.html":{}}}],["start:devlocal",{"_index":1198,"title":{},"body":{"index.html":{}}}],["started",{"_index":773,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":966,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":303,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["status(hasfile",{"_index":368,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["stops",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["storage.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["storage.module.ts",{"_index":674,"title":{},"body":{"modules/S3FileStorageModule.html":{}}}],["storage.service",{"_index":389,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["storage.service.ts",{"_index":675,"title":{},"body":{"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":698,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:13",{"_index":697,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:15",{"_index":696,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:17",{"_index":684,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:34",{"_index":686,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:54",{"_index":688,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:75",{"_index":690,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:96",{"_index":694,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage/s3",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["strategy",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["streamablefile",{"_index":319,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["string",{"_index":106,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(avatarurl)}&size=40",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_codename",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_domain",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_host",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_port",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_access_key_id",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_bucket_name",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_endpoint",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_protocol",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_region",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_secret_access_key",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_subdomain",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_commit",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_pr",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_user",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(reactions",{"_index":517,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["string(user.avatarurl)}&size=150",{"_index":656,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["string.fromcharcode(8205",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style",{"_index":474,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":917,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["styling",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1340,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1333,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1346,"title":{},"body":{"license.html":{}}}],["suite",{"_index":1105,"title":{},"body":{"changelog.html":{}}}],["summary",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["superlative",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":816,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":465,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1160,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1159,"title":{},"body":{"coverage.html":{}}}],["tailwind",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["tailwindconfig",{"_index":393,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["template",{"_index":457,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["templates/highlight",{"_index":396,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["templates/insight",{"_index":575,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["templates/shared/insight",{"_index":577,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["templates/shared/user",{"_index":391,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/tailwind.config",{"_index":394,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/user",{"_index":626,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["terminusmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":1104,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["test/local",{"_index":1209,"title":{},"body":{"index.html":{}}}],["test:local:highlight",{"_index":1215,"title":{},"body":{"index.html":{}}}],["test:local:insight",{"_index":1214,"title":{},"body":{"index.html":{}}}],["test:local:user",{"_index":1206,"title":{},"body":{"index.html":{}}}],["testing",{"_index":844,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":491,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["theme",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.config.bucketname",{"_index":726,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.bucketname}.${this.config.region}.cdn.${this.config.endpoint",{"_index":709,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdncustomdomain",{"_index":708,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdndisabled",{"_index":705,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.bucketname}.${this.config.region}.${this.config.endpoint",{"_index":704,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.cdncustomdomain",{"_index":707,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":279,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":271,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":275,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":277,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":273,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":269,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.database.pingcheck(\"db",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.fonts",{"_index":442,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.fonts.length",{"_index":435,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.getfonts",{"_index":464,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.gethighlightdata(highlightid",{"_index":456,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.gethighlightdata(id",{"_index":509,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.getinsightdata(id",{"_index":612,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.getinsightdata(insightid",{"_index":606,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.getoriginendpoint",{"_index":706,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.getuserdata(username",{"_index":659,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.getrepo(owner",{"_index":420,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.githubservice.getuser(username",{"_index":635,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.ratelimit",{"_index":529,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.graphqlwithauth",{"_index":194,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(`query",{"_index":213,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(query",{"_index":211,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.health.check",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.highlightcardservice.checkrequiresupdate(id",{"_index":360,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.highlightcardservice.gethighlightcard(id",{"_index":349,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":278,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":270,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":274,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":276,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":272,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpservice.get",{"_index":594,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.httpservice.get(`${process.env.api_base_url!}/v2/highlights/${highlightid}/reactions",{"_index":413,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.httpservice.get(`${process.env.api_base_url!}/v2/insights/${insightid",{"_index":584,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.httpservice.get(`${process.env.api_base_url!}/v2/user/highlights/${highlightid",{"_index":411,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.insightcardservice.checkrequiresupdate(id",{"_index":565,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["this.insightcardservice.getgetinsightcard(id",{"_index":567,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["this.logger.debug",{"_index":518,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.logger.debug(`rate",{"_index":218,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.s3client",{"_index":711,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3client.send",{"_index":724,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3filestorageservice.fileexists(hash",{"_index":505,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getcdnendpoint()}${hash",{"_index":504,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilelastmodified(hash",{"_index":508,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilemeta(hash",{"_index":511,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.usercardservice.checkrequiresupdate(sanitizedusername",{"_index":758,"title":{},"body":{"controllers/UserCardController.html":{}}}],["this.usercardservice.getusercard(sanitizedusername",{"_index":759,"title":{},"body":{"controllers/UserCardController.html":{}}}],["thresholdpercent",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["through",{"_index":1232,"title":{},"body":{"index.html":{}}}],["throw",{"_index":733,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["title",{"_index":143,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["tocodepoint",{"_index":1152,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tocodepoint(unicodesurrogates",{"_index":1167,"title":{},"body":{"miscellaneous/functions.html":{}}}],["today",{"_index":201,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago",{"_index":203,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago.toisostring",{"_index":209,"title":{},"body":{"injectables/GithubService.html":{}}}],["today3daysago",{"_index":663,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["token",{"_index":198,"title":{},"body":{"injectables/GithubService.html":{}}}],["tokens",{"_index":1229,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["toprepositories",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":1369,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsize",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsponsorshipamountassponsorincents",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatetime",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["transpilation",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["transport",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["try",{"_index":723,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["ts5",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["tw",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twemoji",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitterusername",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":107,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":192,"title":{},"body":{"injectables/GithubService.html":{}}}],["typeormhealthindicator",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["types",{"_index":993,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["types:auto",{"_index":1284,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":484,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["u200d",{"_index":1155,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ufe0f/g",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ufe0fg",{"_index":1158,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":311,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":309,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":307,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apiresponse({description",{"_index":304,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["unexisting",{"_index":1096,"title":{},"body":{"changelog.html":{}}}],["unicode/assets",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unicodesurrogates",{"_index":1168,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unknown",{"_index":176,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/UserCardService.html":{}}}],["unsafe",{"_index":486,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["up",{"_index":302,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["update",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1310,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":104,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["updated_at.toisostring",{"_index":522,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["updatedat",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upgrade",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["uploadfile",{"_index":682,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["uploadfile(filecontent",{"_index":691,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["url",{"_index":144,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["url.replace(\"https://github.com",{"_index":418,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["urlsearchparams",{"_index":586,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["usage",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":449,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":445,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["usefactory",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":137,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["user(login",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.databaseid",{"_index":645,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.login",{"_index":657,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.name",{"_index":646,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.repositories.nodes?.filter",{"_index":637,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.toprepositories.nodes",{"_index":651,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.ts",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user[\"databaseid",{"_index":629,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user[\"name",{"_index":630,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user_id",{"_index":105,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["usercardcontroller",{"_index":739,"title":{"controllers/UserCardController.html":{}},"body":{"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"coverage.html":{}}}],["usercarddata",{"_index":628,"title":{"interfaces/UserCardData.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["usercardmodule",{"_index":10,"title":{"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["usercardservice",{"_index":632,"title":{"injectables/UserCardService.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["userdata",{"_index":658,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["userlangs",{"_index":390,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlangs(langs",{"_index":459,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["username",{"_index":179,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["username'})@apinocontentresponse({description",{"_index":746,"title":{},"body":{"controllers/UserCardController.html":{}}}],["username.tolowercase",{"_index":757,"title":{},"body":{"controllers/UserCardController.html":{}}}],["userpat",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofilecardtemplate",{"_index":625,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilecardtemplate(avatarurl",{"_index":660,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["userprofilerepos",{"_index":392,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos([repo",{"_index":460,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["userprofilerepos(repos",{"_index":661,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["users",{"_index":740,"title":{},"body":{"controllers/UserCardController.html":{},"index.html":{}}}],["users/${string(username)}.png",{"_index":662,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["using",{"_index":1247,"title":{},"body":{"index.html":{}}}],["utc:hh:mm:ss.l",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["utilities",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["utils/twemoji",{"_index":404,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["v2",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":183,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":1111,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":208,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GithubService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1094,"title":{},"body":{"changelog.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1299,"title":{},"body":{"index.html":{}}}],["viewbox='0",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visual",{"_index":1305,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1303,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":1309,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1353,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1348,"title":{},"body":{"license.html":{}}}],["way",{"_index":1203,"title":{},"body":{"index.html":{}}}],["web",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{}}}],["websiteurl",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":473,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["well",{"_index":1218,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1366,"title":{},"body":{"license.html":{}}}],["width",{"_index":467,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["width='24",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1201,"title":{},"body":{"index.html":{},"license.html":{}}}],["workflow",{"_index":1312,"title":{},"body":{"index.html":{}}}],["x",{"_index":361,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["xmlns='http://www.w3.org/2000/svg'%3e%3cpath",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xs",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":542,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}}}],["yoga",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1301,"title":{},"body":{"index.html":{}}}],["zero",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nAppModule -->\n\nInsightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HighlightCardModule\n                        \n                        \n                            InsightCardModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                        \n                            UserCardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, RequestMethod } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { LoggerModule } from \"nestjs-pino\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nimport ApiConfig from \"./config/api.config\";\nimport GitHubConfig from \"./config/github.config\";\nimport DigitalOceanConfig from \"./config/digital-ocean.config\";\nimport { UserCardModule } from \"./social-card/user-card/user-card.module\";\nimport { S3FileStorageModule } from \"./s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardModule } from \"./social-card/highlight-card/highlight-card.module\";\nimport { InsightCardModule } from \"./social-card/insight-card/insight-card.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [ApiConfig, GitHubConfig, DigitalOceanConfig],\n      isGlobal: true,\n    }),\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        pinoHttp: {\n          name: `os.${String(config.get(\"api.codename\")).toLowerCase()}`,\n          level: config.get(\"api.logging\"),\n          transport: {\n            target: \"pino-pretty\",\n            options: {\n              colorize: true,\n              levelFirst: true,\n              translateTime: \"UTC:hh:MM:ss.l\",\n              singleLine: true,\n              messageFormat: `${clc.yellow(`[{context}]`)} ${clc.green(`{msg}`)}`,\n              ignore: \"pid,hostname,context\",\n            },\n          },\n          customProps: () => ({ context: \"HTTP\" }),\n        },\n        exclude: [{ method: RequestMethod.ALL, path: \"check\" }],\n      }),\n    }),\n    TerminusModule,\n    HttpModule,\n    S3FileStorageModule,\n    UserCardModule,\n    HighlightCardModule,\n    InsightCardModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbInsight.html":{"url":"interfaces/DbInsight.html","title":"interface - DbInsight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbInsight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-insight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_favorite\n                                        \n                                \n                                \n                                        \n                                            is_public\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                                \n                                        \n                                            short_code\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_favorite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_favorite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_public\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_public:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:         DbUserInsightRepo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DbUserInsightRepo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        short_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        short_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbInsight {\n  id: number;\n  user_id: number;\n  name: string;\n  is_public: boolean;\n  is_favorite: boolean;\n  short_code: string;\n  created_at: string;\n  updated_at: string;\n  repos: DbUserInsightRepo[];\n}\n\ninterface DbUserInsightRepo {\n  readonly id: number;\n  readonly insight_id: number;\n  readonly repo_id: number;\n  readonly full_name: string;\n  readonly created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbReaction.html":{"url":"interfaces/DbReaction.html","title":"interface - DbReaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbReaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-reaction.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            emoji_id\n                                        \n                                \n                                \n                                        \n                                            reaction_count\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emoji_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emoji_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reaction_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reaction_count:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbReaction {\n  emoji_id: string;\n  reaction_count: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbRepo.html":{"url":"interfaces/DbRepo.html","title":"interface - DbRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-repos.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            churnTotalCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            closed_prs_count\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            draft_prs_count\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            host_id\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            issues\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            merged_prs_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            open_prs_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pr_active_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pr_velocity_count\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spam_prs_count\n                                        \n                                \n                                \n                                        \n                                            stars\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        churnTotalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        churnTotalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closed_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draft_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draft_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issues:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        merged_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        merged_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pr_active_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pr_active_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pr_velocity_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pr_velocity_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spam_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spam_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stars\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stars:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbRepo {\n  id: string;\n  host_id: string;\n  size: number;\n  stars: number;\n  issues: number;\n  full_name: string;\n  pr_active_count?: number;\n  open_prs_count?: number;\n  merged_prs_count?: number;\n  closed_prs_count?: number;\n  draft_prs_count?: number;\n  spam_prs_count?: number;\n  pr_velocity_count?: number;\n  churnTotalCount?: number;\n  language: string;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbUserHighlight.html":{"url":"interfaces/DbUserHighlight.html","title":"interface - DbUserHighlight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbUserHighlight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-user-highlight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            deleted_at\n                                        \n                                \n                                \n                                        \n                                            highlight\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            pinned\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted_at:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlight:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pinned\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pinned:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbUserHighlight {\n  readonly id: string;\n  readonly user_id: string;\n  readonly url: string;\n  readonly title: string;\n  readonly highlight: string;\n  readonly pinned: boolean;\n  readonly created_at: string;\n  readonly updated_at: string;\n  readonly deleted_at: string | null;\n  readonly login: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbUserInsightRepo.html":{"url":"interfaces/DbUserInsightRepo.html","title":"interface - DbUserInsightRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbUserInsightRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-insight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            insight_id\n                                        \n                                \n                                \n                                        \n                                            repo_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insight_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        insight_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repo_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repo_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbInsight {\n  id: number;\n  user_id: number;\n  name: string;\n  is_public: boolean;\n  is_favorite: boolean;\n  short_code: string;\n  created_at: string;\n  updated_at: string;\n  repos: DbUserInsightRepo[];\n}\n\ninterface DbUserInsightRepo {\n  readonly id: number;\n  readonly insight_id: number;\n  readonly repo_id: number;\n  readonly full_name: string;\n  readonly created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubModule.html":{"url":"modules/GithubModule.html","title":"module - GithubModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/github/github.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GithubService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GithubService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { GithubService } from \"./github.service\";\n\n@Module({\n  imports: [],\n  providers: [GithubService],\n  exports: [GithubService],\n})\nexport class GithubModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                graphqlWithAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRepo\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                rateLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(githubConfig: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/github/github.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        githubConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rateLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    rateLimit()\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        graphqlWithAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/github/github.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GithubService.name)\n                    \n                \n                    \n                        \n                                Defined in src/github/github.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { graphql } from \"@octokit/graphql\";\nimport { RateLimit, Repository, User } from \"@octokit/graphql-schema\";\n\nimport GithubConfig from \"../config/github.config\";\nimport getRepo from \"./gql/get-repo\";\nimport getUser from \"./gql/get-user\";\n\n@Injectable()\nexport class GithubService {\n  private readonly logger = new Logger(GithubService.name);\n  private readonly graphqlWithAuth: typeof graphql;\n\n  constructor (\n    @Inject(GithubConfig.KEY)\n    private readonly githubConfig: ConfigType,\n  ) {\n    this.graphqlWithAuth = graphql.defaults({ headers: { authorization: `token ${githubConfig.userPat}` } });\n  }\n\n  async getUser (username: string): Promise {\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n\n    const { query, variables } = getUser(username, today30daysAgo.toISOString());\n\n    const { user } = await this.graphqlWithAuth(query, variables);\n\n    return user;\n  }\n\n  async getRepo (owner: string, repo: string) {\n    const { query, variables } = getRepo(owner, repo);\n\n    const { repository } = await this.graphqlWithAuth(query, variables);\n\n    return repository;\n  }\n\n  async rateLimit () {\n    const { rateLimit } = await this.graphqlWithAuth(`query {\n      rateLimit {\n        limit,\n        cost,\n        remaining,\n        resetAt\n      }\n    }`);\n\n    this.logger.debug(`Rate limit: ${JSON.stringify(rateLimit)}`);\n\n    return rateLimit;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor (\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service () {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\")!,\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\")!,\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web () {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HighlightCardController.html":{"url":"controllers/HighlightCardController.html","title":"controller - HighlightCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HighlightCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                highlights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHighlightSocialCard\n                            \n                            \n                                    Async\n                                generateHighlightSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/metadata')@ApiOperation({operationId: 'getHighlightSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :id'})@ApiNoContentResponse({description: 'Highlight social card image is up to date', status: undefined})@ApiResponse({description: 'Highlight social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'Highlight social card image not found', status: undefined})@ApiBadRequestResponse({description: 'Invalid highlight id', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'generateHighlightSocialCard', summary: 'Generates the social card image for the provided highlight ID'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'Highlight not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@ApiBadRequestResponse({description: 'Invalid highlight id'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, ParseIntPipe, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\nimport { HighlightCardService } from \"./highlight-card.service\";\n\n\n@Controller(\"highlights\")\n@ApiTags(\"Highlight social cards\")\nexport class HighlightCardController {\n  constructor (\n    private readonly highlightCardService: HighlightCardService,\n  ) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"generateHighlightSocialCard\",\n    summary: \"Generates the social card image for the provided highlight ID\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"Highlight not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\" })\n  @Redirect()\n  async generateHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const png = await this.highlightCardService.getHighlightCard(id);\n\n    return res.status(HttpStatus.OK).send(png);\n  }\n\n  @Get(\"/:id/metadata\")\n  @ApiOperation({\n    operationId: \"getHighlightSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :id\",\n  })\n  @ApiNoContentResponse({ description: \"Highlight social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"Highlight social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"Highlight social card image not found\", status: HttpStatus.NOT_FOUND })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\", status: HttpStatus.BAD_REQUEST })\n  async checkHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.highlightCardService.checkRequiresUpdate(id);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HighlightCardData.html":{"url":"interfaces/HighlightCardData.html","title":"interface - HighlightCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HighlightCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            reactions\n                                        \n                                \n                                \n                                        \n                                            repo\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repo:     Repository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport { DbUserHighlight } from \"../../github/entities/db-user-highlight.entity\";\nimport { DbReaction } from \"../../github/entities/db-reaction.entity\";\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { getIconCode, loadEmoji } from \"../../utils/twemoji\";\n\ninterface HighlightCardData {\n  login: string;\n  body: string;\n  reactions: number;\n  avatarUrl: string;\n  repo: Repository;\n  langTotal: number;\n  langs: (Language & {\n    size: number;\n  })[];\n  updated_at: Date;\n  url: string;\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n  private fonts: Buffer[] = [];\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) { }\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/user/highlights/${highlightId}`),\n    );\n\n    const reactionsReq = firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/highlights/${highlightId}/reactions`),\n    );\n\n    const [highlight, highlightReactions] = await Promise.all([highlightReq, reactionsReq]);\n\n    const { login, updated_at, url, highlight: body } = highlight.data;\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const reactions = highlightReactions.data.reduce((acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      body,\n      login,\n      reactions,\n      avatarUrl: `https://github.com/${login}.png?size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  private async getFonts () {\n    if (this.fonts.length === 0) {\n      const interArrayBufferReq = fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n      const interArrayBufferMediumReq = fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n      this.fonts = await Promise.all([interArrayBufferReq, interArrayBufferMediumReq]);\n    }\n\n    return this.fonts;\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { reactions, body, avatarUrl, repo, langs, langTotal } = highlightData\n      ? highlightData\n      : await this.getHighlightData(highlightId);\n\n    const template = html(\n      highlightCardTemplate(avatarUrl, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions),\n    );\n\n    const [interArrayBuffer, interArrayBufferMedium] = await this.getFonts();\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n      loadAdditionalAsset: async (code: string, segment: string) => {\n        if (code === \"emoji\") {\n          // if segment is an emoji\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          return `data:image/svg+xml;base64,${btoa(await loadEmoji(\"twemoji\", getIconCode(segment)))}`;\n        }\n\n        // if segment is normal text\n        return code;\n      },\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModifiedReq = this.s3FileStorageService.getFileLastModified(hash);\n      const highlightReq = this.getHighlightData(id);\n      const metadataReq = this.s3FileStorageService.getFileMeta(hash);\n\n      const [lastModified, highlight, metadata] = await Promise.all([lastModifiedReq, highlightReq, metadataReq]);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = highlight;\n\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HighlightCardModule.html":{"url":"modules/HighlightCardModule.html","title":"module - HighlightCardModule","body":"\n                   \n\n\n\n\n    Modules\n    HighlightCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\ncluster_HighlightCardModule_imports\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HighlightCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HighlightCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardService } from \"../highlight-card/highlight-card.service\";\nimport { HighlightCardController } from \"./highlight-card.controller\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [HighlightCardService],\n  controllers: [HighlightCardController],\n})\nexport class HighlightCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HighlightCardService.html":{"url":"injectables/HighlightCardService.html","title":"injectable - HighlightCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HighlightCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fonts\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Private\n                                    Async\n                                getFonts\n                            \n                            \n                                    Async\n                                getHighlightCard\n                            \n                            \n                                    Private\n                                    Async\n                                getHighlightData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(highlightId: number, highlightData?: HighlightCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightData\n                                    \n                                                HighlightCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getFonts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFonts()\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHighlightCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getHighlightData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightData(highlightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fonts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport { DbUserHighlight } from \"../../github/entities/db-user-highlight.entity\";\nimport { DbReaction } from \"../../github/entities/db-reaction.entity\";\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { getIconCode, loadEmoji } from \"../../utils/twemoji\";\n\ninterface HighlightCardData {\n  login: string;\n  body: string;\n  reactions: number;\n  avatarUrl: string;\n  repo: Repository;\n  langTotal: number;\n  langs: (Language & {\n    size: number;\n  })[];\n  updated_at: Date;\n  url: string;\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n  private fonts: Buffer[] = [];\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) { }\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/user/highlights/${highlightId}`),\n    );\n\n    const reactionsReq = firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/highlights/${highlightId}/reactions`),\n    );\n\n    const [highlight, highlightReactions] = await Promise.all([highlightReq, reactionsReq]);\n\n    const { login, updated_at, url, highlight: body } = highlight.data;\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const reactions = highlightReactions.data.reduce((acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      body,\n      login,\n      reactions,\n      avatarUrl: `https://github.com/${login}.png?size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  private async getFonts () {\n    if (this.fonts.length === 0) {\n      const interArrayBufferReq = fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n      const interArrayBufferMediumReq = fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n      this.fonts = await Promise.all([interArrayBufferReq, interArrayBufferMediumReq]);\n    }\n\n    return this.fonts;\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { reactions, body, avatarUrl, repo, langs, langTotal } = highlightData\n      ? highlightData\n      : await this.getHighlightData(highlightId);\n\n    const template = html(\n      highlightCardTemplate(avatarUrl, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions),\n    );\n\n    const [interArrayBuffer, interArrayBufferMedium] = await this.getFonts();\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n      loadAdditionalAsset: async (code: string, segment: string) => {\n        if (code === \"emoji\") {\n          // if segment is an emoji\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          return `data:image/svg+xml;base64,${btoa(await loadEmoji(\"twemoji\", getIconCode(segment)))}`;\n        }\n\n        // if segment is normal text\n        return code;\n      },\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModifiedReq = this.s3FileStorageService.getFileLastModified(hash);\n      const highlightReq = this.getHighlightData(id);\n      const metadataReq = this.s3FileStorageService.getFileMeta(hash);\n\n      const [lastModified, highlight, metadata] = await Promise.all([lastModifiedReq, highlightReq, metadataReq]);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = highlight;\n\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InsightCardController.html":{"url":"controllers/InsightCardController.html","title":"controller - InsightCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InsightCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                insights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkInsightSocialCard\n                            \n                            \n                                    Async\n                                generateInsightSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkInsightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkInsightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/metadata')@ApiOperation({operationId: 'getInsightSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :id'})@ApiNoContentResponse({description: 'Insight social card image is up to date', status: undefined})@ApiResponse({description: 'Insight social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'Insight social card image not found', status: undefined})@ApiBadRequestResponse({description: 'Invalid insight id', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateInsightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateInsightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'generateInsightSocialCard', summary: 'Gets latest cache aware social card link for :id or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'Insight not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@ApiBadRequestResponse({description: 'Invalid insight id'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Header,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Redirect,\n  Res,\n  StreamableFile,\n} from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\nimport { InsightCardService } from \"./insight-card.service\";\n\n@Controller(\"insights\")\n@ApiTags(\"Insight social cards\")\nexport class InsightCardController {\n  constructor (private readonly insightCardService: InsightCardService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"generateInsightSocialCard\",\n    summary: \"Gets latest cache aware social card link for :id or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"Insight not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @ApiBadRequestResponse({ description: \"Invalid insight id\" })\n  @Redirect()\n  async generateInsightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate } = await this.insightCardService.checkRequiresUpdate(id);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.insightCardService.getgetInsightCard(id);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:id/metadata\")\n  @ApiOperation({\n    operationId: \"getInsightSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :id\",\n  })\n  @ApiNoContentResponse({ description: \"Insight social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"Insight social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"Insight social card image not found\", status: HttpStatus.NOT_FOUND })\n  @ApiBadRequestResponse({ description: \"Invalid insight id\", status: HttpStatus.BAD_REQUEST })\n  async checkInsightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.insightCardService.checkRequiresUpdate(id);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? (needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT) : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InsightCardData.html":{"url":"interfaces/InsightCardData.html","title":"interface - InsightCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InsightCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contributors\n                                        \n                                \n                                \n                                        \n                                            pageName\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contributors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contributors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport fs from \"node:fs/promises\";\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\n\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { DbInsight } from \"../../github/entities/db-insight.entity\";\nimport insightCardTemplate from \"../templates/insight-card.template\";\nimport insightRepos from \"../templates/shared/insight-repos\";\nimport insightContributors from \"../templates/shared/insight-contributors\";\n\ninterface InsightCardData {\n  pageName: string;\n  repos: { repoName: string; avatarUrl: string }[];\n  contributors: string[];\n  updated_at: Date;\n}\n\n@Injectable()\nexport class InsightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) { }\n\n  private async getInsightData (insightId: number): Promise {\n    const maxRepoQueryIdsLenght = 10;\n\n    const insightPageReq = await firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/insights/${insightId}`),\n    );\n\n    const { repos, name, updated_at } = insightPageReq.data;\n\n    const query = (new URLSearchParams);\n\n    query.set(\n      \"repoIds\",\n      repos\n        .slice(0, maxRepoQueryIdsLenght)\n        .map(repo => repo.repo_id)\n        .join(\",\"),\n    );\n\n    const contributorsReq = await firstValueFrom(\n      this.httpService.get(\n        `${process.env.API_BASE_URL!}/v2/contributors/search?${String(query)}`,\n      ),\n    );\n\n    const contributorsRes = contributorsReq.data.data;\n    const contributors = contributorsRes.map(\n      ({ author_login }) => `https://www.github.com/${author_login}.png?size=50`,\n    );\n\n    const repositories = repos.map(repo => {\n      const [owner, repoName] = repo.full_name.split(\"/\");\n\n      return {\n        repoName,\n        avatarUrl: `https://www.github.com/${owner}.png?size=50`,\n      };\n    });\n\n    return {\n      pageName: name,\n      repos: repositories,\n      contributors,\n      updated_at: new Date(updated_at),\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (insightId: number, insightData?: InsightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { pageName, repos, contributors } = insightData ? insightData : await this.getInsightData(insightId);\n\n    const template = html(insightCardTemplate(pageName, insightContributors(contributors), insightRepos(repos, 3)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `insights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at } = await this.getInsightData(id);\n\n      if (lastModified && lastModified > updated_at) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getgetInsightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InsightCardModule.html":{"url":"modules/InsightCardModule.html","title":"module - InsightCardModule","body":"\n                   \n\n\n\n\n    Modules\n    InsightCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InsightCardModule\n\n\n\ncluster_InsightCardModule_imports\n\n\n\ncluster_InsightCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nInsightCardModule -->\n\nGithubModule->InsightCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nInsightCardModule -->\n\nS3FileStorageModule->InsightCardModule\n\n\n\n\n\nInsightCardService\n\nInsightCardService\n\nInsightCardModule -->\n\nInsightCardService->InsightCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InsightCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InsightCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\n\nimport { InsightCardService } from \"./insight-card.service\";\nimport { InsightCardController } from \"./insight-card.controller\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [InsightCardService],\n  controllers: [InsightCardController],\n})\nexport class InsightCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InsightCardService.html":{"url":"injectables/InsightCardService.html","title":"injectable - InsightCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InsightCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getgetInsightCard\n                            \n                            \n                                    Private\n                                    Async\n                                getInsightData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/insight-card/insight-card.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(insightId: number, insightData?: InsightCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insightData\n                                    \n                                                InsightCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getgetInsightCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getgetInsightCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getInsightData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInsightData(insightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/insight-card/insight-card.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport fs from \"node:fs/promises\";\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\n\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { DbInsight } from \"../../github/entities/db-insight.entity\";\nimport insightCardTemplate from \"../templates/insight-card.template\";\nimport insightRepos from \"../templates/shared/insight-repos\";\nimport insightContributors from \"../templates/shared/insight-contributors\";\n\ninterface InsightCardData {\n  pageName: string;\n  repos: { repoName: string; avatarUrl: string }[];\n  contributors: string[];\n  updated_at: Date;\n}\n\n@Injectable()\nexport class InsightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) { }\n\n  private async getInsightData (insightId: number): Promise {\n    const maxRepoQueryIdsLenght = 10;\n\n    const insightPageReq = await firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/insights/${insightId}`),\n    );\n\n    const { repos, name, updated_at } = insightPageReq.data;\n\n    const query = (new URLSearchParams);\n\n    query.set(\n      \"repoIds\",\n      repos\n        .slice(0, maxRepoQueryIdsLenght)\n        .map(repo => repo.repo_id)\n        .join(\",\"),\n    );\n\n    const contributorsReq = await firstValueFrom(\n      this.httpService.get(\n        `${process.env.API_BASE_URL!}/v2/contributors/search?${String(query)}`,\n      ),\n    );\n\n    const contributorsRes = contributorsReq.data.data;\n    const contributors = contributorsRes.map(\n      ({ author_login }) => `https://www.github.com/${author_login}.png?size=50`,\n    );\n\n    const repositories = repos.map(repo => {\n      const [owner, repoName] = repo.full_name.split(\"/\");\n\n      return {\n        repoName,\n        avatarUrl: `https://www.github.com/${owner}.png?size=50`,\n      };\n    });\n\n    return {\n      pageName: name,\n      repos: repositories,\n      contributors,\n      updated_at: new Date(updated_at),\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (insightId: number, insightData?: InsightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { pageName, repos, contributors } = insightData ? insightData : await this.getInsightData(insightId);\n\n    const template = html(insightCardTemplate(pageName, insightContributors(contributors), insightRepos(repos, 3)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `insights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at } = await this.getInsightData(id);\n\n      if (lastModified && lastModified > updated_at) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getgetInsightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequiresUpdateMeta.html":{"url":"interfaces/RequiresUpdateMeta.html","title":"interface - RequiresUpdateMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequiresUpdateMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            hasFile\n                                        \n                                \n                                \n                                        \n                                            lastModified\n                                        \n                                \n                                \n                                        \n                                            needsUpdate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasFile:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastModified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastModified:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsUpdate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes\n        ?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username)\n        .filter(Boolean) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/S3FileStorageModule.html":{"url":"modules/S3FileStorageModule.html","title":"module - S3FileStorageModule","body":"\n                   \n\n\n\n\n    Modules\n    S3FileStorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { S3FileStorageService } from \"./s3-file-storage.service\";\n\n@Module({\n  imports: [],\n  providers: [S3FileStorageService],\n  exports: [S3FileStorageService],\n})\nexport class S3FileStorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3FileStorageService.html":{"url":"injectables/S3FileStorageService.html","title":"injectable - S3FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  S3FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCdnEndpoint\n                            \n                            \n                                    Public\n                                getOriginEndpoint\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fileExists\n                            \n                            \n                                    Async\n                                getFileLastModified\n                            \n                            \n                                    Async\n                                getFileMeta\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fileExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileExists(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileLastModified\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileLastModified(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileMeta\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileMeta(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(fileContent: Buffer | Readable, hash: string, contentType: string, metadata?: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Buffer | Readable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCdnEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOriginEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { S3, HeadObjectCommand, PutObjectCommand, S3Client } from \"@aws-sdk/client-s3\";\nimport { Readable } from \"node:stream\";\n\nimport DigitalOceanConfig from \"../config/digital-ocean.config\";\n\n\n@Injectable()\nexport class S3FileStorageService {\n  private readonly s3Client: S3Client;\n\n  public getOriginEndpoint = (): string => `${this.config.protocol}://${this.config.bucketName}.${this.config.region}.${this.config.endpoint}/`;\n\n  public getCdnEndpoint = (): string => (this.config.cdnDisabled\n    ? this.getOriginEndpoint()\n    : `${this.config.protocol}://${this.config.cdnCustomDomain !== \"\" ? this.config.cdnCustomDomain : `${this.config.bucketName}.${this.config.region}.cdn.${this.config.endpoint}`}/`);\n\n  constructor (\n    @Inject(DigitalOceanConfig.KEY)\n    private readonly config: ConfigType,\n  ) {\n    this.s3Client = new S3({\n      forcePathStyle: false,\n      endpoint: `${config.protocol}://${config.region}.${config.endpoint}`,\n      region: `us-east-1`,\n      credentials: {\n        accessKeyId: config.accessKeyId,\n        secretAccessKey: config.secretAccessKey,\n      },\n    });\n  }\n\n  async fileExists (hash: string): Promise {\n    try {\n      await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n      return true;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return false;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileLastModified (hash: string): Promise {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.LastModified ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileMeta (hash: string): Promise | null> {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.Metadata ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async uploadFile (\n    fileContent: Buffer | Readable,\n    hash: string,\n    contentType: string,\n    metadata?: Record,\n  ): Promise {\n    await this.s3Client.send(\n      new PutObjectCommand({\n        Bucket: this.config.bucketName,\n        Key: hash,\n        Body: fileContent,\n        ContentType: contentType,\n        ACL: \"public-read\",\n        Metadata: metadata,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserCardController.html":{"url":"controllers/UserCardController.html","title":"controller - UserCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUserSocialCard\n                            \n                            \n                                    Async\n                                generateUserSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/metadata')@ApiOperation({operationId: 'getUserSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :username'})@ApiNoContentResponse({description: 'User social card image is up to date', status: undefined})@ApiResponse({description: 'User social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'User social card image not found', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username')@ApiOperation({operationId: 'generateUserSocialCard', summary: 'Gets latest cache aware social card link for :username or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'User not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\n\nimport { UserCardService } from \"./user-card.service\";\n\n@Controller(\"users\")\n@ApiTags(\"User social cards\")\nexport class UserCardController {\n  constructor (\n    private readonly userCardService: UserCardService,\n  ) {}\n\n  @Get(\"/:username\")\n  @ApiOperation({\n    operationId: \"generateUserSocialCard\",\n    summary: \"Gets latest cache aware social card link for :username or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @Redirect()\n  async generateUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.userCardService.getUserCard(sanitizedUsername);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:username/metadata\")\n  @ApiOperation({\n    operationId: \"getUserSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :username\",\n  })\n  @ApiNoContentResponse({ description: \"User social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"User social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"User social card image not found\", status: HttpStatus.NOT_FOUND })\n  async checkUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCardData.html":{"url":"interfaces/UserCardData.html","title":"interface - UserCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            formattedName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formattedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     Repository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes\n        ?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username)\n        .filter(Boolean) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserCardModule.html":{"url":"modules/UserCardModule.html","title":"module - UserCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UserCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_imports\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/user-card/user-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\n\nimport { UserCardService } from \"./user-card.service\";\nimport { UserCardController } from \"./user-card.controller\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [UserCardService],\n  controllers: [UserCardController],\n})\nexport class UserCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserCardService.html":{"url":"injectables/UserCardService.html","title":"injectable - UserCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getUserCard\n                            \n                            \n                                    Private\n                                    Async\n                                getUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/user-card/user-card.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(username: string, userData?: UserCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                UserCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCard(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserData(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/user-card/user-card.service.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes\n        ?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username)\n        .filter(Boolean) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/opengraph changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n2.5.0 (2024-01-30)\n🤖 Build System\n\ndeps: bump octokit from 2.0.14 to 3.1.2 (#72) (54e3ec0)\n\n🍕 Features\n\nUpgrade to v2 API (36b73e9)\n\n2.5.0-beta.1 (2024-01-25)\n🍕 Features\n\nUpgrade to v2 API (36b73e9)\n\n2.4.1-beta.2 (2023-12-22)\n🤖 Build System\n\ndeps: bump octokit from 2.0.14 to 3.1.2 (#72) (54e3ec0)\n\n2.4.1 (2023-08-16)\n🐛 Bug Fixes\n\nupdate reactions count grammar (#69) (765696a)\n\n2.4.1-beta.1 (2023-08-16)\n🐛 Bug Fixes\n\nupdate reactions count grammar (#69) (765696a)\n\n2.4.0 (2023-07-24)\n🍕 Features\n\nadd emoji support (#63) (82c0a3a)\n\n2.4.0-beta.1 (2023-07-24)\n🍕 Features\n\nadd emoji support (#63) (82c0a3a)\n\n2.3.0 (2023-07-17)\n🍕 Features\n\nimprove performance when generating highlight card image (#60) (2c94638)\n\n2.3.0-beta.1 (2023-07-12)\n🍕 Features\n\nimprove performance when generating highlight card image (#60) (2c94638)\n\n2.2.1 (2023-07-12)\n🧑‍💻 Code Refactoring\n\nupdate social card design (#52) (6a46be1)\n\n2.2.1-beta.1 (2023-06-22)\n🧑‍💻 Code Refactoring\n\nupdate social card design (#52) (6a46be1)\n\n2.2.0 (2023-06-20)\n🐛 Bug Fixes\n\nremove issue templates (#49) (778ad4e)\n\n🍕 Features\n\ninsights social card generation (#51) (8a82a48)\n\n📝 Documentation\n\nupdate instructions on testing cards generation locally (#53) (e152d09)\n\n2.2.0-beta.2 (2023-06-20)\n📝 Documentation\n\nupdate instructions on testing cards generation locally (#53) (e152d09)\n\n📦 open-sauced/opengraph.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n2.2.0-beta.1 (2023-06-08)\n🍕 Features\n\ninsights social card generation (#51) (8a82a48)\n\n2.1.2-beta.1 (2023-06-06)\n🐛 Bug Fixes\n\nremove issue templates (#49) (778ad4e)\n\n2.1.1 (2023-05-12)\n🐛 Bug Fixes\n\ncorrect rolled back build (e91c43f)\n\n🧑‍💻 Code Refactoring\n\ncorrect lint and merge issues (cba7521)\n\n2.1.1-beta.1 (2023-05-12)\n🐛 Bug Fixes\n\ncorrect rolled back build (e91c43f)\n\n🧑‍💻 Code Refactoring\n\ncorrect lint and merge issues (cba7521)\n\n2.1.0 (2023-05-09)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\nhiglight card upload & storage (#39) (b6abefa)\nUI adjustments (#42) (acbe81a)\n\n2.1.0-beta.6 (2023-05-09)\n🍕 Features\n\nUI adjustments (#42) (acbe81a)\n\n2.1.0-beta.5 (2023-05-05)\n🍕 Features\n\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\n\n2.1.0-beta.4 (2023-05-04)\n🍕 Features\n\nhiglight card upload & storage (#39) (b6abefa)\n\n2.1.0-beta.3 (2023-05-02)\n🍕 Features\n\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\n\n2.1.0-beta.2 (2023-04-30)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n2.1.0-beta.1 (2023-04-26)\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\n\n2.0.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.2 (2023-04-19)\n🐛 Bug Fixes\n\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\n\n2.0.0 (2023-04-11)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\nimplement no-content verification strategy (6efe0e6)\noptimize image loading and return errors (7c6f199), closes #17\n\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\ncorrect dark logo render and make it static (dc9f3a4)\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect server generation environment (68d0202)\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\nupdate graphql types (f7db713)\n\n2.0.0-beta.3 (2023-04-11)\n🤖 Build System\n\nupdate graphql types (f7db713)\n\n2.0.0-beta.2 (2023-04-11)\n🐛 Bug Fixes\n\ncorrect dark logo render and make it static (dc9f3a4)\n\n2.0.0-beta.1 (2023-04-10)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🐛 Bug Fixes\n\ncorrect server generation environment (68d0202)\n\n1.2.0-beta.10 (2023-04-10)\n🐛 Bug Fixes\n\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\n\n1.2.0-beta.9 (2023-04-10)\n🍕 Features\n\noptimize image loading and return errors (7c6f199), closes #17\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\n\n1.2.0-beta.8 (2023-04-09)\n🍕 Features\n\nimplement no-content verification strategy (6efe0e6)\n\n🐛 Bug Fixes\n\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n1.2.0-beta.7 (2023-04-09)\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n1.2.0-beta.6 (2023-04-09)\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\n\n1.2.0-beta.5 (2023-04-09)\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n🐛 Bug Fixes\n\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\n\n1.2.0-beta.4 (2023-04-08)\n🍕 Features\n\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\n\n1.2.0-beta.3 (2023-04-05)\n🍕 Features\n\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\n\n1.2.0-beta.2 (2023-04-04)\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n1.2.0-beta.1 (2023-04-04)\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\n\n1.1.2 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect font usage from roboto to design (inter) (4748b98)\n\n1.1.1 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect user name being displayed as login (19043fc)\n\n1.1.0 (2023-04-04)\n📝 Documentation\n\ncorrect readme with new style (ccc8a96)\n\n🤖 Build System\n\nremove extraneous colors package (4c7d29a)\n\n🍕 Features\n\nadd correct languages calculation and display (977df75)\n\n1.0.4 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect top repositories distribution and name concatenation (24bfb15)\n\n1.0.3 (2023-04-04)\n🐛 Bug Fixes\n\nremove static assets, get gfonts roboto versions (dd096ca)\n\n1.0.2 (2023-04-03)\n🐛 Bug Fixes\n\ncorrect docker build (b62c129)\n\n1.0.1 (2023-04-03)\n🔁 Continuous Integration\n\nfix container deployment path (a58ec19)\n\n1.0.0 (2023-04-03)\n🔁 Continuous Integration\n\nimplement release tooling (3e35dc9)\n\n📝 Documentation\n\nadd partial readme (3b5d838)\n\n🤖 Build System\n\nenable local development and transpilation (6893d90)\nmake package able to release (c2cc28c)\nupdate dependencies and package meta (8757519)\n\n🧑‍💻 Code Refactoring\n\nmove to nextjs backend architecture static component functions and boilerplate (d4f854d)\nrewrite code and correct buffers (c12099a)\n\n🍕 Features\n\nadd development tooling and backend configuration (f1f5947)\nadd dynamic image (5797c54)\nadd user not found handler (b1f870c)\ncode splitting & img manual insertion (8b48513)\ndynamic user profile card (18a3e23)\ngenerate images based on route (e81f5c1)\nmake div flex global (9790d30)\nrepalce https module with fetch (3b146a3)\nswitch to graphql and etl octokit (2e6cb05)\nuse https module instead of axios (0b6b7fc)\nuse node https instead of axios (12b86a7)\nUser Profile cards (#5) (64372f4)\n\n🐛 Bug Fixes\n\nadd awaits (14a5e28)\ncorrect application return type image (a0e6d3f)\ncorrect node engines required to deploy (5b088e9)\ndowngrade required node version (5ae3704)\nfix unexisting value handling (16d3101)\nset moduleResolution to node16 (52b97ed)\n\n✅ Tests\n\ncorrect test suite usage (f761ac8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/api.config.ts\n            \n            variable\n            ApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/digital-ocean.config.ts\n            \n            variable\n            DigitalOceanConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/github.config.ts\n            \n            variable\n            GitHubConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/entities/db-insight.entity.ts\n            \n            interface\n            DbInsight\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/github/entities/db-insight.entity.ts\n            \n            interface\n            DbUserInsightRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/github/entities/db-reaction.entity.ts\n            \n            interface\n            DbReaction\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/github/entities/db-repos.entity.ts\n            \n            interface\n            DbRepo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/github/entities/db-user-highlight.entity.ts\n            \n            interface\n            DbUserHighlight\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/github/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/github/gql/get-repo.ts\n            \n            variable\n            getRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/gql/get-user.ts\n            \n            variable\n            getUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/s3-file-storage/s3-file-storage.service.ts\n            \n            injectable\n            S3FileStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.controller.ts\n            \n            controller\n            HighlightCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            injectable\n            HighlightCardService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            interface\n            HighlightCardData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.controller.ts\n            \n            controller\n            InsightCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.service.ts\n            \n            injectable\n            InsightCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.service.ts\n            \n            interface\n            InsightCardData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/templates/highlight-card.template.ts\n            \n            variable\n            highlightCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/insight-card.template.ts\n            \n            variable\n            insightCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            cardFooter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            heartIconData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-style-setup.ts\n            \n            variable\n            cardStyleSetup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-contributors.ts\n            \n            variable\n            insightContributors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-footer.ts\n            \n            variable\n            insightFooter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-repos.ts\n            \n            variable\n            insightRepos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/repo-icon-with-name.ts\n            \n            variable\n            repoIconWithName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-langs.ts\n            \n            variable\n            userLangs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-repos.ts\n            \n            variable\n            userProfileRepos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/tailwind.config.ts\n            \n            variable\n            tailwindConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-card.template.ts\n            \n            variable\n            userProfileCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.controller.ts\n            \n            controller\n            UserCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            injectable\n            UserCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            RequiresUpdateMeta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            UserCardData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            function\n            getIconCode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            function\n            loadEmoji\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            function\n            toCodePoint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            variable\n            apis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            variable\n            emojiCache\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            variable\n            U200D\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            variable\n            UFE0Fg\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getIconCode   (src/.../twemoji.ts)\n                        \n                        \n                            loadEmoji   (src/.../twemoji.ts)\n                        \n                        \n                            toCodePoint   (src/.../twemoji.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/twemoji.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getIconCode\n                        \n                    \n                \n            \n            \n                \ngetIconCode(char: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    char\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadEmoji\n                        \n                    \n                \n            \n            \n                \nloadEmoji(type, code: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCodePoint\n                        \n                    \n                \n            \n            \n                \ntoCodePoint(unicodeSurrogates: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unicodeSurrogates\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n🍕 Open Sauced OpenGraph Generator 🍕\n\nThe path to your next Open Source contribution\n\n\n\n\n\n\n\n\n\n\n🚀 Live release environments\nProduction (main)\n\nopengraph@digital-ocean.app\nopengraph.opensauced\n\nBeta (beta)\n\nopengraph-beta@digital-ocean.app\nbeta.opengraph.opensauced\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\n node>=18.15.0\n npm>=9.6.3\n docker>=20.10.23\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:devLocal dev scripts\nThere are a few scripts that can be used to generate and test the social cards locally without having to deploy to the CDN. This is the way to go when developing & testing the interface for the social cards.\nGenerating user profile cards\nnpm run test:local:user\nGenerates user cards for all users in the test array inside test/local-dev/UserCards.ts and outputs them in dist/local-dev/ for testing.\n\nThe same goes for the other card types:\n\nnpm run test:local:insight is for generating insight cards.\nnpm run test:local:highlight is for generating highlight cards.\n\nThe output of these scripts can be found in the dist/local-dev/ folder as well.\n📝 Environment variables\nSome environment variables are required to run the application. You can find them in the .env.example file. While most of them are optional, some are required to run the application.\nOne can reverse engineer the named configs but some need a little explanation.\nBoilerplate, changed mostly locally:\n# GitHub private access tokens\nGITHUB_PAT_USER=ghp_************************************\n\n# DigitalOcean Spaces through aws-sdk configuration\nDO_SPACES_ACCESS_KEY_ID=********************\nDO_SPACES_SECRET_ACCESS_KEY=*******************************************Ping @open-sauced/maintainers to get the dev CDN keys for the DO_SPACES_* variables.\nOther Digital Ocean S3 variables are sensibly set to default for local development, here are the defauls:\nDO_SPACES_ENDPOINT=digitaloceanspaces.com\nDO_SPACES_REGION=sfo3\nDO_SPACES_BUCKET_NAME=opengraph-devIt is also advised to set the following variables to true to avoid using the cached CDN during development:\nDO_SPACES_CDN_DISABLED=trueIf using a custom domain, you can set the following variable to the domain name:\nDO_SPACES_SUBDOMAIN=beta.opengraph-cdn.opensauced.pizzaOther API defaults you can change are not required in local development, but can sometimes appear configured differently for production:\nAPI_HOST=0.0.0.0\nAPI_PORT=3005\nAPI_DOMAIN=opengraph.opensauced.pizza\nMEMORY_HEAP=200\nMEMORY_RSS=3000\nDISK_PERCENTAGE=0.7\nDISK_SIZE=100🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-checkIn order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HighlightCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InsightCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        S3FileStorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\ncluster_InsightCardModule\n\n\n\ncluster_InsightCardModule_providers\n\n\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nAppModule -->\n\nInsightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\nInsightCardModule -->\n\nS3FileStorageModule->InsightCardModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\nInsightCardModule -->\n\nGithubModule->InsightCardModule\n\n\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\nInsightCardService\n\nInsightCardService\n\nInsightCardModule -->\n\nInsightCardService->InsightCardModule\n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.5.0\n        \n            Description : OpenGraph dot Open Sauced is a general purpose social card generator\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/opengraph.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/opengraph.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/opengraph.opensauced.pizza.git\n        \n            Author : Ahmed Mohamed Atwa \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiConfig   (src/.../api.config.ts)\n                        \n                        \n                            apis   (src/.../twemoji.ts)\n                        \n                        \n                            cardFooter   (src/.../card-footer.ts)\n                        \n                        \n                            cardStyleSetup   (src/.../card-style-setup.ts)\n                        \n                        \n                            DigitalOceanConfig   (src/.../digital-ocean.config.ts)\n                        \n                        \n                            emojiCache   (src/.../twemoji.ts)\n                        \n                        \n                            getRepo   (src/.../get-repo.ts)\n                        \n                        \n                            getUser   (src/.../get-user.ts)\n                        \n                        \n                            GitHubConfig   (src/.../github.config.ts)\n                        \n                        \n                            heartIconData   (src/.../card-footer.ts)\n                        \n                        \n                            highlightCardTemplate   (src/.../highlight-card.template.ts)\n                        \n                        \n                            insightCardTemplate   (src/.../insight-card.template.ts)\n                        \n                        \n                            insightContributors   (src/.../insight-contributors.ts)\n                        \n                        \n                            insightFooter   (src/.../insight-footer.ts)\n                        \n                        \n                            insightRepos   (src/.../insight-repos.ts)\n                        \n                        \n                            repoIconWithName   (src/.../repo-icon-with-name.ts)\n                        \n                        \n                            tailwindConfig   (src/.../tailwind.config.ts)\n                        \n                        \n                            U200D   (src/.../twemoji.ts)\n                        \n                        \n                            UFE0Fg   (src/.../twemoji.ts)\n                        \n                        \n                            userLangs   (src/.../user-langs.ts)\n                        \n                        \n                            userProfileCardTemplate   (src/.../user-profile-card.template.ts)\n                        \n                        \n                            userProfileRepos   (src/.../user-repos.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"api\", () => ({\n  codename: String(process.env.API_CODENAME ?? \"opengraph-local\"),\n  logging: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n  host: String(process.env.API_HOST ?? \"0.0.0.0\"),\n  port: String(process.env.API_PORT ?? \"3001\"),\n  domain: String(process.env.API_DOMAIN ?? \"opengraph.opensauced.pizza\"),\n  development: !process.env.CI,\n  memory_heap: Number(parseInt(process.env.MEMORY_HEAP ?? \"200\", 10) * 1024 * 1024),\n  memory_rss: Number(parseInt(process.env.MEMORY_RSS ?? \"3000\", 10) * 1024 * 1024),\n  disk_percentage: Number(parseFloat(process.env.DISK_PERCENGATE ?? \"0.7\")),\n  disk_size: Number(parseInt(process.env.DISK_SIZE ?? \"100\", 10) * 1024 * 1024 * 1024),\n}))\n                    \n                \n\n\n        \n    \n\n    src/utils/twemoji.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  twemoji: (code: string) =>\n    `https://cdnjs.cloudflare.com/ajax/libs/twemoji/14.0.2/svg/${\n      code.toLowerCase()\n    }.svg`,\n  openmoji: \"https://cdn.jsdelivr.net/npm/@svgmoji/openmoji@2.0.0/svg/\",\n  blobmoji: \"https://cdn.jsdelivr.net/npm/@svgmoji/blob@2.0.0/svg/\",\n  noto: \"https://cdn.jsdelivr.net/gh/svgmoji/svgmoji/packages/svgmoji__noto/svg/\",\n  fluent: (code: string) =>\n    `https://cdn.jsdelivr.net/gh/shuding/fluentui-emoji-unicode/assets/${\n      code.toLowerCase()\n    }_color.svg`,\n  fluentFlat: (code: string) =>\n    `https://cdn.jsdelivr.net/gh/shuding/fluentui-emoji-unicode/assets/${\n      code.toLowerCase()\n    }_flat.svg`,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emojiCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        U200D\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String.fromCharCode(8205)\n                    \n                \n\n            \n                \n                    modified version of https://unpkg.com/twemoji@13.1.0/dist/twemoji.esm.js.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UFE0Fg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /\\uFE0F/g\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-footer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: string, repos: string, reactions?: number) => `\n    \n      \n        \n          ${repos}\n        \n\n\n\n          \n            ${\n  reactions\n    ? ` \n            \n              ${reactions} ${reactions > 1 ? \"Reactions\" : \"Reaction\"}\n            `\n    : \"\"\n}\n\n            \n               \n            \n          \n\n      \n\n      \n        \n          ${langs}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heartIconData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M6.73649 2.5C3.82903 2.5 1 5.052 1 8.51351C1 12.3318 3.80141 15.5735 6.38882 17.7763C7.70549 18.8973 9.01844 19.7929 10.0004 20.4077C10.4922 20.7157 10.9029 20.9544 11.1922 21.1169C11.4093 21.2388 11.5582 21.318 11.6223 21.3516C11.7407 21.4132 11.8652 21.4527 12 21.4527C12.1193 21.4527 12.2378 21.4238 12.3438 21.3693C12.5003 21.2886 12.6543 21.2031 12.8078 21.1169C13.0971 20.9544 13.5078 20.7157 13.9996 20.4077C14.9816 19.7929 16.2945 18.8973 17.6112 17.7763C20.1986 15.5735 23 12.3318 23 8.51351C23 5.052 20.171 2.5 17.2635 2.5C14.9702 2.5 13.1192 3.72621 12 5.60482C10.8808 3.72621 9.02981 2.5 6.73649 2.5ZM6.73649 4C4.65746 4 2.5 5.88043 2.5 8.51351C2.5 11.6209 4.8236 14.4738 7.36118 16.6342C8.60701 17.6948 9.85656 18.5479 10.7965 19.1364C11.2656 19.4301 11.6557 19.6567 11.9269 19.8091L12 19.85L12.0731 19.8091C12.3443 19.6567 12.7344 19.4301 13.2035 19.1364C14.1434 18.5479 15.393 17.6948 16.6388 16.6342C19.1764 14.4738 21.5 11.6209 21.5 8.51351C21.5 5.88043 19.3425 4 17.2635 4C15.1581 4 13.4627 5.38899 12.7115 7.64258C12.6094 7.94883 12.3228 8.15541 12 8.15541C11.6772 8.15541 11.3906 7.94883 11.2885 7.64258C10.5373 5.38899 8.84185 4 6.73649 4Z' fill='%2324292F'/%3e%3c/svg%3e`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-style-setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardStyleSetup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  \n    div {\n      display: flex;\n    }\n  \n`\n                    \n                \n\n\n        \n    \n\n    src/config/digital-ocean.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DigitalOceanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"digitalOcean\", () => ({\n  accessKeyId: String(process.env.DO_SPACES_ACCESS_KEY_ID ?? \"\"),\n  secretAccessKey: String(process.env.DO_SPACES_SECRET_ACCESS_KEY ?? \"\"),\n  protocol: String(process.env.DO_SPACES_PROTOCOL ?? \"https\"),\n  endpoint: String(process.env.DO_SPACES_ENDPOINT ?? \"digitaloceanspaces.com\"),\n  region: String(process.env.DO_SPACES_REGION ?? \"sfo3\"),\n  bucketName: String(process.env.DO_SPACES_BUCKET_NAME ?? \"opengraph-dev\"),\n  cdnCustomDomain: String(process.env.DO_SPACES_SUBDOMAIN ?? \"\"),\n  cdnDisabled: !!process.env.DO_SPACES_CDN_DISABLED,\n}))\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRepo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (owner: string, repo: string) => ({\n  query: `\nquery ($owner: String!, $repo: String!) {\n  repository(\n    owner: $owner\n    name: $repo\n  ) {\n    id\n    name\n    databaseId\n    nameWithOwner\n    owner {\n      id\n      login\n      avatarUrl\n    }\n    languages (first: 100, orderBy: { field: SIZE, direction: DESC }) {\n      edges {\n        node {\n          id\n          color\n          name\n        }\n        size\n      }\n      totalSize\n      totalCount\n    }\n  }\n}`,\n  variables: {\n    owner,\n    repo,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (username: string, dateSince: string) => ({\n  query: `# Missing values\n# organizationVerifiedDomainEmails\n# pinnedItems\n# repositoriesContributedTo\n# starredRepositories\n# anything sponsors\n\nquery ($username: String!, $dateSince: DateTime) {\n  user(login: $username) {\n    id\n    databaseId\n    avatarUrl\n    bio\n    bioHTML\n    company\n    companyHTML\n    createdAt\n    email\n    hasSponsorsListing\n    isBountyHunter\n    isCampusExpert\n    isDeveloperProgramMember\n    isEmployee\n    isGitHubStar\n    isHireable\n    isSiteAdmin\n    location\n    login\n    monthlyEstimatedSponsorsIncomeInCents\n    name\n    url\n    pronouns\n    resourcePath\n    totalSponsorshipAmountAsSponsorInCents\n    websiteUrl\n    twitterUsername\n    organization(login: \"open-sauced\") {\n      id\n      avatarUrl\n      name\n      url\n      updatedAt\n    }\n    organizations(first: 10, orderBy: { field: CREATED_AT, direction: ASC }) {\n      nodes {\n        id\n        avatarUrl\n        name\n        url\n        updatedAt\n      }\n    }\n    socialAccounts(first: 10) {\n      nodes {\n        displayName\n        provider\n        url\n      }\n    }\n    status {\n      id\n      emoji\n      message\n      organization {\n        id\n      }\n    }\n    repositories(first: 100, orderBy: { field: PUSHED_AT, direction: DESC }) {\n      nodes {\n        name\n        primaryLanguage {\n          name\n        }\n        languages(first: 100, orderBy: { field: SIZE, direction: DESC }) {\n          edges {\n            node {\n              id\n              name\n              color\n            }\n            size\n          }\n          totalSize\n          totalCount\n        }\n        pushedAt\n      }\n    }\n    topRepositories(\n      first: 100\n      orderBy: { field: PUSHED_AT, direction: DESC }\n      since: $dateSince\n    ) {\n      nodes {\n        name\n        owner {\n          login\n          avatarUrl\n        }\n        isPrivate\n        primaryLanguage {\n          name\n        }\n        pushedAt\n      }\n    }\n  }\n}`,\n  variables: {\n    username,\n    dateSince,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/config/github.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GitHubConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"github\", () => ({\n  userPat: String(process.env.GITHUB_PAT_USER ?? \"\"),\n  prPat: String(process.env.GITHUB_PAT_PR ?? \"\"),\n  commitPat: String(process.env.GITHUB_PAT_COMMIT ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/highlight-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlightCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  avatarUrl: string,\n  body: string,\n  langs: string,\n  repos: string,\n  reactions: number,\n): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n          \n               🍕 OpenSauced Highlight\n          \n          \n          ${body.length > 108 ? `${body.slice(0, 108)}...` : body}\n          \n        \n        \n          \n        \n      \n\n\n    \n    ${cardFooter(langs, repos, reactions)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/insight-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (pageName: string, contributors: string, repos: string): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n          OpenSauced Insights\n        \n         ${pageName}: Insights \n      \n    \n    ${insightFooter(contributors, repos)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-contributors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightContributors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (contributors: string[]): string => {\n  const repoList = contributors.map(\n    contributor => ``,\n  );\n\n  return `${repoList.slice(0, 5).join(\"\")}${\n    repoList.length > 5\n      ? `+${\n        repoList.length - 5\n      }`\n      : ``\n  }`;\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-footer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (contributors: string, repos: string) => `\n    \n      \n        \n          ${repos}\n        \n        \n           \n        \n      \n\n      \n        \n          ${contributors}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: { repoName: string; avatarUrl: string }[], limit: number): string => {\n  const charLimit = limit === 1 ? 60 : repos.length === 1 ? 60 : 9;\n  const repoList = repos.map(({ repoName, avatarUrl }) =>\n    repoIconWithName(\n      `${repoName.substring(0, charLimit).replace(/\\.+$/, \"\")}${repoName.length > charLimit ? \"...\" : \"\"}`,\n      `${String(avatarUrl)}&size=40`,\n    ));\n\n  return `${repoList.slice(0, limit).join(\"\")}${\n    repoList.length > limit\n      ? `+${repoList.length - limit}`\n      : ``\n  }`;\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/repo-icon-with-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repoIconWithName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string, avatarUrl: string) => `\n  \n    \n      \n      \n        \n          ${name}\n        \n      \n    \n  \n`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/tailwind.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tailwindConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  theme: {\n    extend: {\n      screens: {\n        xs: \"425px\",\n\n        // => @media (min-width: 425px) { ... }\n\n        \"2xl\": \"1440px\",\n\n        // => @media (min-width: 1440px) { ... }\n      },\n      blur: { \"4xl\": \"5rem\" },\n      spacing: {\n        \"6px\": \"6px\",\n        \"8px\": \"8px\",\n        \"12px\": \"12px\",\n        \"16px\": \"16px\",\n        \"32px\": \"32px\",\n        \"48px\": \"48px\",\n        \"58px\": \"58px\",\n        \"96px\": \"96px\",\n        \"134px\": \"134px\",\n        \"627px\": \"627px\",\n        \"1200px\": \"1200px\",\n      },\n      colors: {\n        sauced: { orange: \"hsla(19, 100%, 50%, 1)\" },\n        gradient: {\n          \"dark-two\": \"hsl(26, 54%, 15%)\",\n          \"dark-one\": \"hsl(23, 75%, 5%)\",\n          \"orange-one\": \"\thsl(33, 100%, 50%)\",\n          \"orange-two\": \"\thsl(19, 100%, 50%)\",\n        },\n        light: {\n          slate: {\n            1: \"hsl(206, 30.0%, 98.8%)\",\n            2: \"hsl(210, 16.7%, 97.6%)\",\n            3: \"hsl(209, 13.3%, 95.3%)\",\n            4: \"hsl(209, 12.2%, 93.2%)\",\n            5: \"hsl(208, 11.7%, 91.1%)\",\n            6: \"hsl(208, 11.3%, 88.9%)\",\n            7: \"hsl(207, 11.1%, 85.9%)\",\n            8: \"hsl(205, 10.7%, 78.0%)\",\n            9: \"hsl(206, 6.0%, 56.1%)\",\n            10: \"hsl(206, 5.8%, 52.3%)\",\n            11: \"hsl(206, 6.0%, 43.5%)\",\n            12: \"hsl(206, 24.0%, 9.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(210, 92.6%, 26.5%, 0.016)\",\n            2: \"hsla(210, 87.7%, 16.0%, 0.028)\",\n            3: \"hsla(210, 98.8%, 14.4%, 0.055)\",\n            4: \"hsla(210, 94.1%, 11.1%, 0.075)\",\n            5: \"hsla(216, 91.1%, 10.9%, 0.099)\",\n            6: \"hsla(206, 96.4%, 11.3%, 0.126)\",\n            7: \"hsla(210, 99.1%, 10.1%, 0.157)\",\n            8: \"hsla(205, 96.5%, 10.0%, 0.244)\",\n            9: \"hsla(206, 98.8%, 5.9%, 0.467)\",\n            10: \"hsla(206, 99.6%, 5.4%, 0.506)\",\n            11: \"hsla(206, 97.0%, 4.8%, 0.593)\",\n            12: \"hsla(202, 97.0%, 2.4%, 0.934)\",\n          },\n          orange: {\n            1: \"hsl(24, 70.0%, 99.0%)\",\n            2: \"hsl(24, 83.3%, 97.6%)\",\n            3: \"hsl(24, 100%, 95.3%)\",\n            4: \"hsl(25, 100%, 92.2%)\",\n            5: \"hsl(25, 100%, 88.2%)\",\n            6: \"hsl(25, 100%, 82.8%)\",\n            7: \"hsl(24, 100%, 75.3%)\",\n            8: \"hsl(24, 94.5%, 64.3%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 46.5%)\",\n            11: \"hsl(24, 100%, 37.0%)\",\n            12: \"hsl(15, 60.0%, 17.0%)\",\n          },\n          blue: {\n            1: \"hsl(206, 100%, 99.2%)\",\n            2: \"hsl(210, 100%, 98.0%)\",\n            3: \"hsl(209, 100%, 96.5%)\",\n            4: \"hsl(210, 98.8%, 94.0%)\",\n            5: \"hsl(209, 95.0%, 90.1%)\",\n            6: \"hsl(209, 81.2%, 84.5%)\",\n            7: \"hsl(208, 77.5%, 76.9%)\",\n            8: \"hsl(206, 81.9%, 65.3%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(208, 100%, 47.3%)\",\n            11: \"hsl(211, 100%, 43.2%)\",\n            12: \"hsl(211, 100%, 15.0%)\",\n          },\n          red: {\n            1: \"hsl(359, 100%, 99.4%)\",\n            2: \"hsl(359, 100%, 98.6%)\",\n            3: \"hsl(360, 100%, 96.8%)\",\n            4: \"hsl(360, 97.9%, 94.8%)\",\n            5: \"hsl(360, 90.2%, 91.9%)\",\n            6: \"hsl(360, 81.7%, 87.8%)\",\n            7: \"hsl(359, 74.2%, 81.7%)\",\n            8: \"hsl(359, 69.5%, 74.3%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 69.4%, 55.2%)\",\n            11: \"hsl(358, 65.0%, 48.7%)\",\n            12: \"hsl(354, 50.0%, 14.6%)\",\n          },\n          grass: {\n            1: \"hsl(116, 50.0%, 98.9%)\",\n            2: \"hsl(120, 60.0%, 97.1%)\",\n            3: \"hsl(120, 53.6%, 94.8%)\",\n            4: \"hsl(121, 47.5%, 91.4%)\",\n            5: \"hsl(122, 42.6%, 86.5%)\",\n            6: \"hsl(124, 39.0%, 79.7%)\",\n            7: \"hsl(126, 37.1%, 70.2%)\",\n            8: \"hsl(131, 38.1%, 56.3%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(132, 43.1%, 42.2%)\",\n            11: \"hsl(133, 50.0%, 32.5%)\",\n            12: \"hsl(130, 30.0%, 14.9%)\",\n          },\n        },\n        dark: {\n          slate: {\n            1: \"hsl(200, 7.0%, 8.8%)\",\n            2: \"hsl(195, 7.1%, 11.0%)\",\n            3: \"hsl(197, 6.8%, 13.6%)\",\n            4: \"hsl(198, 6.6%, 15.8%)\",\n            5: \"hsl(199, 6.4%, 17.9%)\",\n            6: \"hsl(201, 6.2%, 20.5%)\",\n            7: \"hsl(203, 6.0%, 24.3%)\",\n            8: \"hsl(207, 5.6%, 31.6%)\",\n            9: \"hsl(206, 6.0%, 43.9%)\",\n            10: \"hsl(206, 5.2%, 49.5%)\",\n            11: \"hsl(206, 6.0%, 63.0%)\",\n            12: \"hsl(210, 6.0%, 93.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(0, 0%, 0%, 0)\",\n            2: \"hsla(181, 98.9%, 91.8%, 0.026)\",\n            3: \"hsla(182, 86.7%, 91.4%, 0.057)\",\n            4: \"hsla(209, 86.7%, 93.9%, 0.083)\",\n            5: \"hsla(200, 90.3%, 93.4%, 0.109)\",\n            6: \"hsla(209, 95.3%, 93.5%, 0.139)\",\n            7: \"hsla(204, 98.5%, 93.9%, 0.182)\",\n            8: \"hsla(209, 94.0%, 94.7%, 0.265)\",\n            9: \"hsla(207, 97.3%, 94.0%, 0.412)\",\n            10: \"hsla(209, 99.4%, 95.2%, 0.472)\",\n            11: \"hsla(208, 98.7%, 96.8%, 0.615)\",\n            12: \"hsla(211, 86.7%, 99.6%, 0.927)\",\n          },\n          orange: {\n            1: \"hsl(30, 70.0%, 7.2%)\",\n            2: \"hsl(28, 100%, 8.4%)\",\n            3: \"hsl(26, 91.1%, 11.6%)\",\n            4: \"hsl(25, 88.3%, 14.1%)\",\n            5: \"hsl(24, 87.6%, 16.6%)\",\n            6: \"hsl(24, 88.6%, 19.8%)\",\n            7: \"hsl(24, 92.4%, 24.0%)\",\n            8: \"hsl(25, 100%, 29.0%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 58.5%)\",\n            11: \"hsl(24, 100%, 62.2%)\",\n            12: \"hsl(24, 97.0%, 93.2%)\",\n          },\n          blue: {\n            1: \"hsl(212, 35.0%, 9.2%)\",\n            2: \"hsl(216, 50.0%, 11.8%)\",\n            3: \"hsl(214, 59.4%, 15.3%)\",\n            4: \"hsl(214, 65.8%, 17.9%)\",\n            5: \"hsl(213, 71.2%, 20.2%)\",\n            6: \"hsl(212, 77.4%, 23.1%)\",\n            7: \"hsl(211, 85.1%, 27.4%)\",\n            8: \"hsl(211, 89.7%, 34.1%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(209, 100%, 60.6%)\",\n            11: \"hsl(210, 100%, 66.1%)\",\n            12: \"hsl(206, 98.0%, 95.8%)\",\n          },\n          red: {\n            1: \"hsl(353, 23.0%, 9.8%)\",\n            2: \"hsl(357, 34.4%, 12.0%)\",\n            3: \"hsl(356, 43.4%, 16.4%)\",\n            4: \"hsl(356, 47.6%, 19.2%)\",\n            5: \"hsl(356, 51.1%, 21.9%)\",\n            6: \"hsl(356, 55.2%, 25.9%)\",\n            7: \"hsl(357, 60.2%, 31.8%)\",\n            8: \"hsl(358, 65.0%, 40.4%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 85.3%, 64.0%)\",\n            11: \"hsl(358, 100%, 69.5%)\",\n            12: \"hsl(351, 89.0%, 96.0%)\",\n          },\n          grass: {\n            1: \"hsl(146, 30.0%, 7.4%)\",\n            2: \"hsl(136, 33.3%, 8.8%)\",\n            3: \"hsl(137, 36.0%, 11.4%)\",\n            4: \"hsl(137, 37.6%, 13.7%)\",\n            5: \"hsl(136, 38.7%, 16.0%)\",\n            6: \"hsl(135, 39.6%, 19.1%)\",\n            7: \"hsl(134, 40.3%, 23.8%)\",\n            8: \"hsl(131, 40.1%, 30.8%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(131, 39.0%, 52.1%)\",\n            11: \"hsl(131, 43.0%, 57.2%)\",\n            12: \"hsl(137, 72.0%, 94.0%)\",\n          },\n        },\n      },\n      boxShadow: {\n        login: \"0px 64px 100px -80px #FF5F13, 0px 16px 56px rgba(181, 107, 72, 0.19)\",\n        superlative: \"0px 22px 24px -8px rgba(0, 0, 0, 0.05), 0px 4px 8px rgba(0, 0, 0, 0.1)\",\n        paginate: \"0px 1px 2px rgba(237, 95, 0, 0.05), 0px 1px 1px rgba(237, 95, 0, 0.05)\",\n        input: \"0px 1px 2px rgba(17, 24, 28, 0.05), 0px 1px 1px rgba(17, 24, 28, 0.05)\",\n      },\n      backgroundImage: { \"gradient-radial\": \"radial-gradient(var(--tw-gradient-stops))\" },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-langs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userLangs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: (Language & { size: number })[], totalCount = 0, joinLiteral = \"\") => {\n  const filteredLangs = langs.filter(({ size }) => size > 0 && (size / totalCount) * 100 >= 0.5);\n\n  return filteredLangs\n    .map(({ color, size }) => {\n      const realPercent = (size / totalCount) * 100;\n\n      return ` 0 ? realPercent : 100 / filteredLangs.length\n      }%\"/>`;\n    })\n    .join(joinLiteral);\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, name: string, langs: string, repos: string): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n          ${name}\n        \n        \n      \n\n\n    \n    ${cardFooter(langs, repos)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: Repository[], limit: number): string => {\n  const charLimit = limit === 1 ? 60 : repos.length === 1 ? 60 : 9;\n  const repoList = repos.map(({ name, owner: { avatarUrl } }) =>\n    repoIconWithName(\n      `${name.substring(0, charLimit).replace(/\\.+$/, \"\")}${name.length > charLimit ? \"...\" : \"\"}`,\n      `${String(avatarUrl)}&size=40`,\n    ));\n\n  return `${repoList.slice(0, limit).join(\"\")}${\n    repoList.length > limit\n      ? `+${repoList.length - limit}`\n      : ``\n  }`;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
