var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,0.842,1,2.122]],["body/modules/AppModule.html",[0,1.252,1,4.21,2,1.422,3,2.175,4,3.117,5,3.117,6,3.56,7,0.031,8,3.56,9,2.722,10,3.56,11,2.368,12,1.82,13,1.54,14,0.329,15,0.329,16,0.351,17,3.721,18,2.632,19,1.104,20,3.721,21,0.632,22,4.842,23,4.509,24,2.423,25,3.153,26,1.315,27,4.057,28,2.72,29,3.721,30,3.721,31,4.842,32,3.721,33,3.721,34,3.721,35,3.539,36,3.721,37,3.153,38,3.117,39,3.153,40,3.117,41,3.117,42,2.632,43,1.711,44,5.382,45,0.962,46,1.041,47,2.423,48,2.588,49,2.588,50,3.721,51,3.721,52,3.721,53,1.724,54,3.721,55,2.72,56,3.721,57,3.117,58,3.721,59,0.691,60,3.721,61,3.721,62,3.721,63,3.721,64,3.721,65,3.721,66,3.721,67,3.721,68,3.721,69,3.721,70,3.721,71,3.721,72,3.721,73,3.721,74,3.721,75,3.721,76,3.721,77,3.721,78,3.721,79,3.117,80,3.721,81,3.721,82,3.721,83,2.423,84,2.72,85,1.422,86,1.989,87,0.374,88,0.632,89,0.022,90,0.022]],["title/interfaces/DbInsight.html",[91,0.412,92,1.741]],["body/interfaces/DbInsight.html",[7,0.03,14,0.377,15,0.377,16,0.278,59,1.113,87,0.429,89,0.024,90,0.024,91,0.668,92,2.823,93,1.631,94,2.281,95,3.119,96,0.66,97,1.261,98,4.012,99,1.593,100,5.022,101,5.022,102,2.118,103,5.022,104,2.932,105,4.382,106,1.46,107,1.003,108,1.96,109,3.355,110,3.904,111,1.471,112,3.575,113,3.575,114,3.119]],["title/interfaces/DbReaction.html",[91,0.412,115,1.914]],["body/interfaces/DbReaction.html",[7,0.03,14,0.436,15,0.436,16,0.322,87,0.496,89,0.026,90,0.026,91,0.624,93,1.886,94,2.637,96,0.763,97,1.376,106,1.429,107,0.892,115,3.386,116,4.134,117,6.293,118,6.293]],["title/interfaces/DbRepo.html",[91,0.412,119,2.382]],["body/interfaces/DbRepo.html",[7,0.03,14,0.343,15,0.343,16,0.253,87,0.39,89,0.023,90,0.023,91,0.491,93,1.484,94,2.075,96,0.601,97,1.188,99,1.498,106,1.449,107,1.022,108,2.047,114,4.235,119,3.638,120,3.253,121,2.159,122,5.793,123,5.793,124,3.404,125,5.793,126,5.793,127,4.854,128,2.603,129,5.793,130,5.793,131,5.793,132,5.793,133,2.833,134,5.793,135,5.793]],["title/interfaces/DbUserHighlight.html",[91,0.412,136,1.914]],["body/interfaces/DbUserHighlight.html",[7,0.031,14,0.373,15,0.373,16,0.275,87,0.424,89,0.024,90,0.024,91,0.533,93,1.612,94,2.254,96,0.653,97,1.252,98,3.888,99,1.544,104,2.92,105,4.364,106,1.489,107,1.007,109,3.05,111,1.554,136,3.081,137,1.18,138,3.534,139,5.97,140,2.282,141,3.508,142,5.97,143,5.97,144,2.92,145,2.363]],["title/interfaces/DbUserInsightRepo.html",[91,0.412,110,2.122]],["body/interfaces/DbUserInsightRepo.html",[7,0.03,14,0.394,15,0.394,16,0.291,59,0.828,87,0.448,89,0.025,90,0.025,91,0.686,92,2.383,93,1.704,94,2.383,95,3.259,96,0.69,97,1.295,98,4.062,99,1.613,100,3.735,101,3.735,102,1.575,103,3.735,104,2.18,105,3.259,106,1.445,107,0.965,108,1.995,109,2.9,110,3.809,111,1.489,112,5.099,113,5.099,114,4.449,121,1.773]],["title/modules/GithubModule.html",[0,0.842,146,1.593]],["body/modules/GithubModule.html",[0,1.455,2,1.81,3,2.528,7,0.03,11,2.751,12,2.316,13,1.96,14,0.418,15,0.418,16,0.309,18,2.316,19,0.955,21,0.804,86,3.007,87,0.476,88,0.804,89,0.026,90,0.026,146,3.179,147,3.967,148,3.967,149,3.967,150,2.181,151,4.735,152,4.714,153,4.735]],["title/injectables/GithubService.html",[150,1.065,154,0.842]],["body/injectables/GithubService.html",[7,0.031,14,0.306,15,0.306,16,0.226,19,1.029,21,0.588,24,2.254,37,3.383,38,2.9,55,2.531,59,0.965,87,0.348,88,0.588,89,0.021,90,0.021,96,0.536,97,1.102,106,1.372,107,0.804,111,1.447,121,1.698,137,1.55,150,1.509,154,1.194,155,1.85,156,2.9,157,1.696,158,5.195,159,2.49,160,1.911,161,1.886,162,4.051,163,4.051,164,6.159,165,1.396,166,3.462,167,4.643,168,2.458,169,4.617,170,2.151,171,4.617,172,2.39,173,3.462,174,2.468,175,2.151,176,2.713,177,4.617,178,3.462,179,2.258,180,1.509,181,3.462,182,1.693,183,1.693,184,1.676,185,4.617,186,3.462,187,3.868,188,2.468,189,2.151,190,1.85,191,4.617,192,3.462,193,3.462,194,3.462,195,3.462,196,2.254,197,3.462,198,3.462,199,3.462,200,1.833,201,2.254,202,1.223,203,2.254,204,2.254,205,2.254,206,2.034,207,3.007,208,3.609,209,3.462,210,1.698,211,4.617,212,1.343,213,3.462,214,2.713,215,3.462,216,1.555,217,3.462,218,3.462,219,3.462]],["title/controllers/HealthController.html",[220,0.778,221,2.122]],["body/controllers/HealthController.html",[7,0.031,14,0.321,15,0.321,16,0.237,19,0.96,21,0.618,23,4.46,24,2.368,28,2.659,79,3.047,83,3.107,84,4.289,85,1.39,87,0.366,88,0.618,89,0.022,90,0.022,96,0.563,111,0.868,157,1.684,160,1.975,161,1.99,165,1.1,168,1.975,175,1.975,176,2.803,212,1.234,220,0.868,221,3.107,222,3.047,223,2.368,224,6.021,225,6.136,226,6.021,227,3.107,228,3.637,229,4.77,230,3.68,231,3.02,232,3.32,233,4.77,234,3.637,235,3.637,236,4.77,237,3.637,238,4.77,239,4.77,240,4.77,241,5.323,242,4.77,243,4.77,244,3.467,245,3.467,246,2.368,247,2.368,248,3.637,249,3.637,250,3.637,251,3.637,252,3.637,253,3.637,254,3.107,255,4.77,256,4.77,257,3.637,258,3.637,259,3.637,260,3.637,261,3.637,262,3.637,263,4.77,264,3.637,265,3.637,266,3.637,267,3.637,268,3.637,269,3.637,270,3.637,271,3.637,272,3.637,273,3.637,274,3.637,275,3.637,276,3.637,277,3.637,278,3.637,279,3.637]],["title/modules/HealthModule.html",[0,0.842,280,2.382]],["body/modules/HealthModule.html",[0,1.49,2,1.886,7,0.03,14,0.436,15,0.436,16,0.322,18,2.413,19,1.037,21,0.838,27,4.829,28,3.607,85,2.203,87,0.496,88,0.838,89,0.026,90,0.026,221,3.977,280,4.214,281,4.934,282,4.934]],["title/controllers/HighlightCardController.html",[220,0.778,283,2.122]],["body/controllers/HighlightCardController.html",[7,0.031,14,0.269,15,0.269,16,0.199,19,0.892,21,0.517,42,3.086,48,3.055,53,1.28,59,0.786,85,1.164,87,0.306,88,0.517,89,0.019,90,0.019,96,0.471,99,1.57,107,0.854,108,1.729,111,0.727,121,1.383,124,3.566,140,2.441,157,0.852,160,1.752,161,1.729,165,0.921,168,1.752,170,1.752,175,1.752,180,1.718,196,1.984,200,1.28,202,1.495,210,1.383,212,1.094,214,2.486,220,0.727,223,1.984,227,2.756,230,3.422,244,2.756,245,3.167,246,1.984,247,1.984,254,2.756,283,2.756,284,1.257,285,1.984,286,2.552,287,4.863,288,5.522,289,3.046,290,4.493,291,4.285,292,2.552,293,4.232,294,3.094,295,3.094,296,2.756,297,3.094,298,3.348,299,2.262,300,2.552,301,3.953,302,2.756,303,3.892,304,2.227,305,3.094,306,3.094,307,2.227,308,2.857,309,2.552,310,4.403,311,2.227,312,3.046,313,3.046,314,2.552,315,2.756,316,3.546,317,3.046,318,2.227,319,3.555,320,2.227,321,2.227,322,3.094,323,2.552,324,2.552,325,3.046,326,2.227,327,2.227,328,2.227,329,4.074,330,3.094,331,4.074,332,3.094,333,3.094,334,3.555,335,3.094,336,2.227,337,2.378,338,1.164,339,3.046,340,3.046,341,1.79,342,2.552,343,2.227,344,2.227,345,2.227,346,3.546,347,3.094,348,1.369,349,3.046,350,3.046,351,2.552,352,3.094,353,3.094,354,3.094,355,2.552,356,1.618,357,1.164,358,1.618,359,1.164,360,3.046,361,3.094,362,3.094,363,2.756,364,2.227,365,1.984,366,2.227,367,1.984,368,2.227,369,2.227]],["title/interfaces/HighlightCardData.html",[91,0.412,370,2.122]],["body/interfaces/HighlightCardData.html",[7,0.031,14,0.204,15,0.204,16,0.271,19,1.046,21,0.392,26,0.816,43,0.816,45,0.896,46,0.646,48,1.851,53,0.698,59,0.643,87,0.232,88,0.392,89,0.016,90,0.016,91,0.292,93,0.883,96,0.357,97,0.827,99,1.075,102,0.816,104,2.773,106,1.334,107,0.877,108,1.796,111,1.103,115,1.357,128,1.868,133,2.033,136,1.357,137,0.969,140,1.892,141,3.053,144,2.541,145,0.956,150,1.359,154,0.896,157,1.508,159,1.556,161,1.572,165,0.698,172,2.231,174,1.234,180,1.359,184,1.257,188,1.234,189,1.912,190,1.234,200,1.961,202,1.469,210,1.917,212,1.394,216,1.556,220,0.551,284,0.597,299,1.234,337,1.129,338,0.883,348,1.038,356,1.589,357,1.589,358,0.883,359,1.986,370,2.707,371,1.038,372,2.335,373,3.61,374,2.88,375,3.166,376,3.692,377,1.129,378,1.129,379,2.033,380,1.694,381,1.129,382,1.129,383,1.129,384,1.129,385,2.707,386,1.504,387,1.129,388,1.359,389,1.038,390,1.129,391,2.035,392,1.129,393,1.434,394,1.129,395,1.504,396,1.935,397,1.129,398,2.256,399,1.935,400,1.935,401,1.434,402,1.504,403,1.504,404,1.935,405,1.129,406,1.694,407,1.688,408,1.935,409,2.902,410,3.483,411,1.935,412,2.902,413,1.935,414,1.935,415,1.935,416,1.935,417,2.035,418,1.935,419,1.935,420,1.935,421,1.935,422,1.935,423,1.935,424,1.935,425,2.259,426,2.902,427,1.935,428,1.935,429,1.357,430,1.357,431,1.935,432,1.935,433,1.504,434,1.935,435,1.935,436,1.935,437,1.694,438,1.694,439,1.694,440,2.902,441,1.694,442,2.902,443,1.935,444,1.038,445,1.038,446,0.883,447,1.038,448,1.129,449,0.883,450,1.129,451,3.483,452,2.033,453,1.129,454,1.129,455,1.129,456,1.935,457,1.129,458,1.935,459,1.357,460,1.935,461,1.688,462,1.694,463,1.694,464,1.935,465,1.434,466,1.129,467,1.038,468,1.129,469,1.129,470,1.129,471,1.556,472,1.694,473,1.694,474,1.324,475,2.033,476,1.935,477,2.222,478,3.483,479,2.256,480,1.935,481,1.935,482,1.688,483,1.935,484,1.935,485,1.935,486,1.935,487,1.935,488,1.935,489,1.935,490,1.935,491,1.935,492,1.129,493,1.129,494,1.129,495,1.129,496,1.129,497,0.956,498,1.129,499,1.129,500,1.129,501,1.129,502,1.038,503,1.935,504,1.129,505,1.129,506,1.694,507,1.935,508,1.129,509,1.935,510,2.902,511,1.935,512,1.935,513,1.129,514,2.902,515,1.935,516,2.035,517,1.935,518,1.129,519,1.129,520,1.129,521,1.504,522,1.504,523,1.357,524,1.357,525,1.129,526,1.129,527,1.038,528,1.935,529,1.129]],["title/modules/HighlightCardModule.html",[0,0.842,6,1.914]],["body/modules/HighlightCardModule.html",[0,1.393,2,1.684,3,2.42,6,3.851,7,0.031,9,2.842,11,2.634,12,2.154,13,1.824,14,0.389,15,0.389,16,0.379,18,2.634,19,1.074,21,0.748,25,3.508,26,1.556,45,1.139,46,1.232,47,2.869,48,3.11,85,2.059,86,2.879,87,0.443,88,0.748,89,0.025,90,0.025,140,2.059,146,3.093,283,3.789,284,1.139,337,3.093,338,1.684,530,3.69,531,3.69,532,4.405,533,3.22,534,3.22,535,3.22]],["title/injectables/HighlightCardService.html",[154,0.842,337,1.593]],["body/injectables/HighlightCardService.html",[7,0.031,14,0.187,15,0.187,16,0.257,19,1.031,21,0.36,26,0.749,43,0.749,45,0.84,46,0.593,48,3.289,53,0.641,59,0.972,87,0.213,88,0.36,89,0.015,90,0.015,91,0.268,96,0.328,97,0.775,99,1.233,102,0.749,104,2.459,106,1.107,107,0.778,108,1.836,111,1.2,115,1.246,121,1.558,128,1.773,133,1.93,136,1.246,137,0.908,140,1.822,141,2.318,144,1.93,145,0.878,150,1.711,154,0.84,155,1.133,157,1.684,159,1.987,160,1.344,161,1.836,165,0.982,168,2.235,170,1.973,172,1.831,174,1.133,175,1.973,176,1.907,180,1.644,182,1.588,183,1.588,184,1.337,188,1.133,189,1.344,190,1.133,200,1.944,202,0.749,210,1.878,212,1.353,216,1.459,220,0.506,284,1.431,299,1.133,337,1.588,338,0.81,348,0.953,356,1.508,357,1.508,358,0.81,359,1.922,370,2.88,371,0.953,372,1.773,373,3.104,374,2.363,375,2.598,376,3.275,377,1.037,378,1.037,379,2.459,380,1.588,381,1.037,382,1.037,383,1.037,384,1.037,385,2.57,386,1.381,387,1.037,388,1.711,389,0.953,390,1.037,391,1.907,392,1.037,393,1.344,394,1.037,395,1.381,396,1.776,397,1.037,398,2.114,399,1.776,400,1.776,401,1.344,402,1.381,403,1.381,404,1.776,405,1.588,406,2.162,407,2.373,408,3.306,409,3.705,410,3.306,411,1.776,412,2.72,413,1.776,414,1.776,415,1.776,416,1.776,417,1.907,418,1.776,419,1.776,420,1.776,421,1.776,422,1.776,423,1.776,424,1.776,425,2.162,426,2.72,427,1.776,428,1.776,429,1.246,430,1.246,431,1.776,432,1.776,433,1.381,434,3.705,435,1.776,436,1.776,437,1.588,438,1.588,439,1.588,440,2.72,441,1.588,442,2.72,443,1.776,444,0.953,445,0.953,446,0.81,447,0.953,448,1.037,449,0.81,450,1.93,451,3.994,452,1.93,453,1.037,454,1.037,455,1.037,456,1.776,457,1.037,458,1.776,459,1.246,460,1.776,461,1.55,462,1.588,463,1.588,464,1.776,465,1.344,466,1.037,467,0.953,468,1.037,469,1.037,470,1.037,471,1.459,472,1.588,473,1.588,474,1.241,475,1.93,476,1.776,477,2.109,478,3.306,479,2.114,480,1.776,481,1.776,482,1.55,483,1.776,484,1.776,485,1.776,486,1.776,487,1.776,488,1.776,489,1.776,490,1.776,491,1.776,492,1.037,493,1.037,494,1.037,495,1.037,496,1.037,497,0.878,498,1.037,499,1.037,500,1.037,501,1.93,502,0.953,503,1.776,504,1.037,505,1.037,506,1.588,507,1.776,508,1.037,509,1.776,510,2.72,511,1.776,512,1.776,513,1.037,514,2.72,515,1.776,516,1.907,517,1.776,518,1.037,519,1.037,520,1.037,521,1.381,522,1.381,523,1.246,524,1.246,525,1.037,526,1.037,527,0.953,528,3.306,529,1.037,536,1.55,537,3.247,538,1.776,539,2.12,540,2.12,541,2.12,542,1.381,543,2.12,544,2.12,545,2.12,546,2.12,547,2.12,548,1.776]],["title/controllers/InsightCardController.html",[220,0.778,549,2.122]],["body/controllers/InsightCardController.html",[7,0.031,14,0.262,15,0.262,16,0.194,19,0.883,21,0.504,42,3.074,49,3.03,53,1.257,59,0.772,85,1.135,87,0.298,88,0.504,89,0.019,90,0.019,96,0.459,99,1.581,107,0.846,108,1.715,111,0.709,121,1.359,124,3.546,144,1.452,157,0.831,160,1.721,161,1.715,165,0.898,168,1.721,170,1.721,175,1.721,180,1.699,184,1.257,196,1.934,200,1.451,202,1.469,210,1.568,212,1.24,214,2.442,220,0.709,223,1.934,227,2.707,230,3.384,244,2.707,245,3.124,246,1.934,247,1.934,254,2.707,284,1.24,285,1.934,290,4.469,291,4.255,292,2.488,294,3.799,295,3.799,296,3.384,297,3.799,298,3.333,299,2.222,300,2.488,301,3.79,302,2.707,303,3.868,304,2.17,305,3.039,306,3.039,307,2.17,308,2.818,309,2.488,310,4.354,311,2.17,314,2.488,315,2.707,318,2.17,319,3.507,320,2.17,321,2.17,322,3.039,323,2.488,324,2.488,326,2.17,327,2.17,328,2.17,329,4.019,330,3.039,331,4.019,332,3.039,333,3.039,334,3.507,335,3.039,336,2.17,338,1.135,341,1.744,342,2.488,343,2.17,344,2.17,345,2.17,346,3.483,347,3.039,351,2.488,352,3.039,353,3.039,354,3.039,355,2.488,356,1.833,357,1.833,358,1.986,359,1.135,361,3.039,362,3.039,363,2.707,364,2.17,365,1.934,366,2.17,367,1.934,368,2.17,369,2.17,549,2.707,550,2.17,551,4.797,552,5.47,553,2.969,554,4.157,555,4.594,556,2.969,557,2.969,558,3.483,559,2.488,560,2.969,561,2.346,562,2.969,563,2.969,564,1.934,565,4.157,566,2.488,567,2.969,568,2.488]],["title/interfaces/InsightCardData.html",[91,0.412,569,2.122]],["body/interfaces/InsightCardData.html",[7,0.031,14,0.24,15,0.24,16,0.298,19,1.051,21,0.461,26,0.959,43,0.959,45,1.009,46,0.759,49,2.085,53,0.821,59,0.927,87,0.273,88,0.461,89,0.018,90,0.018,91,0.343,92,1.45,93,1.037,96,0.42,97,0.931,99,1.181,102,2.088,104,2.89,106,1.277,107,0.852,108,1.51,111,1.192,137,0.759,140,1.037,145,1.123,150,1.492,154,1.009,157,1.479,159,1.752,161,1.51,165,0.821,174,1.45,180,1.492,184,1.51,200,1.973,202,1.613,207,1.767,210,2.006,212,1.291,216,1.752,220,0.648,284,0.702,338,1.037,348,1.219,356,1.745,357,1.745,358,1.037,359,2.104,371,1.219,372,1.752,377,1.327,378,1.327,379,2.233,380,1.907,381,1.327,382,1.327,383,1.327,384,1.327,385,2.973,386,1.767,387,1.327,388,1.492,389,1.219,393,1.615,394,1.327,397,1.327,398,1.767,401,1.615,405,1.327,406,1.327,417,2.682,433,1.767,437,1.907,438,1.907,439,1.907,441,1.907,444,1.219,445,1.219,446,1.037,447,1.219,448,1.327,449,1.037,450,1.327,452,1.907,453,1.327,454,1.327,455,1.327,457,1.327,462,1.907,463,1.907,465,1.615,466,1.327,467,1.219,468,1.327,469,1.327,470,1.327,471,1.752,472,1.907,473,1.907,474,1.491,475,1.907,492,1.327,493,1.327,494,1.327,495,1.327,496,1.327,497,1.123,498,1.327,499,1.327,500,1.327,501,1.327,502,1.219,504,1.327,505,1.327,506,1.907,508,1.327,513,1.327,516,1.594,518,1.327,519,1.327,520,1.327,521,1.767,522,1.767,523,1.594,524,1.594,525,1.327,526,1.327,527,1.219,529,1.327,561,1.327,569,2.973,570,4.242,571,4.024,572,3.9,573,2.274,574,1.767,575,2.274,576,1.767,577,3.268,578,1.767,579,2.274,580,3.268,581,3.268,582,1.767,583,2.274,584,2.274,585,2.274,586,2.274,587,2.274,588,2.274,589,2.274,590,2.274,591,2.274,592,1.984,593,2.274,594,2.274,595,2.274,596,2.274,597,2.274,598,2.274,599,2.274,600,2.274,601,2.851,602,2.274,603,2.274,604,2.274,605,3.825,606,2.274,607,2.274,608,2.274,609,2.274,610,1.327,611,2.274,612,2.274,613,2.274]],["title/modules/InsightCardModule.html",[0,0.842,8,1.914]],["body/modules/InsightCardModule.html",[0,1.394,2,1.687,3,2.423,7,0.031,8,3.852,9,2.843,11,2.637,12,2.158,13,1.827,14,0.39,15,0.39,16,0.38,18,2.637,19,1.075,21,0.749,25,3.511,26,1.559,45,1.141,46,1.234,47,2.873,49,2.882,85,2.061,86,2.882,87,0.444,88,0.749,89,0.025,90,0.025,146,3.095,284,1.141,338,1.687,533,3.225,534,3.225,535,3.225,549,3.792,555,3.941,561,3.095,614,3.697,615,4.412,616,3.697]],["title/injectables/InsightCardService.html",[154,0.842,561,1.593]],["body/injectables/InsightCardService.html",[7,0.031,14,0.217,15,0.217,16,0.281,19,1.032,21,0.416,26,0.866,43,0.866,45,0.937,46,0.686,49,3.276,53,0.741,59,1.07,87,0.246,88,0.416,89,0.017,90,0.017,91,0.31,92,1.31,96,0.379,97,0.865,99,1.312,102,1.877,104,2.598,106,1.047,107,0.785,108,1.819,111,1.268,121,1.659,137,0.686,140,0.937,145,1.015,150,1.796,154,0.937,155,1.31,157,1.612,159,2.137,160,1.499,161,1.819,165,1.095,168,2.199,170,2.101,174,1.31,175,1.969,176,1.44,180,1.736,182,1.199,183,1.199,184,1.535,200,1.953,202,0.866,207,1.596,210,1.966,212,1.23,216,1.627,220,0.585,284,1.421,338,0.937,348,1.101,356,1.646,357,1.646,358,0.937,359,2.031,371,1.101,372,1.627,377,1.199,378,1.199,379,2.598,380,1.771,381,1.199,382,1.199,383,1.199,384,1.199,385,2.805,386,1.596,387,1.199,388,1.796,389,1.101,393,1.499,394,1.199,397,1.199,398,1.596,401,1.499,405,1.771,406,1.199,417,2.53,433,1.596,437,1.771,438,1.771,439,1.771,441,1.771,444,1.101,445,1.101,446,0.937,447,1.101,448,1.199,449,0.937,450,2.106,452,1.771,453,1.199,454,1.199,455,1.199,457,1.199,462,1.771,463,1.771,465,1.499,466,1.199,467,1.101,468,1.199,469,1.199,470,1.199,471,1.627,472,1.771,473,1.771,474,1.384,475,1.771,492,1.199,493,1.199,494,1.199,495,1.199,496,1.199,497,1.015,498,1.199,499,1.199,500,1.199,501,2.106,502,1.101,504,1.199,505,1.199,506,1.771,508,1.199,513,1.199,516,1.44,518,1.199,519,1.199,520,1.199,521,1.596,522,1.596,523,1.44,524,1.44,525,1.199,526,1.199,527,1.101,529,1.199,536,1.792,538,2.054,542,1.596,561,1.771,569,3.098,570,3.71,571,3.148,573,2.054,574,1.596,575,2.054,576,1.596,577,3.034,578,1.596,579,3.609,580,3.986,581,3.034,582,1.596,583,2.054,584,2.054,585,2.054,586,2.054,587,2.054,588,2.054,589,2.054,590,2.054,591,2.054,592,1.792,593,2.054,594,2.054,595,2.054,596,2.054,597,2.054,598,2.054,599,2.054,600,2.054,601,2.647,602,2.054,603,2.054,604,2.054,605,4.252,606,2.054,607,2.054,608,2.054,609,2.054,610,1.199,611,2.054,612,2.054,613,3.609,617,3.622,618,2.451,619,2.451,620,2.451,621,2.451,622,2.451,623,2.451,624,2.451]],["title/interfaces/RequiresUpdateMeta.html",[91,0.412,401,1.349]],["body/interfaces/RequiresUpdateMeta.html",[7,0.031,14,0.233,15,0.233,16,0.293,19,1.025,21,0.448,26,0.932,43,1.35,45,0.988,46,0.738,53,0.797,59,0.915,87,0.452,88,0.448,89,0.017,90,0.017,91,0.483,93,1.008,96,0.408,97,0.912,99,0.988,102,1.74,106,1.291,107,0.762,108,1.155,109,2.913,111,1.176,128,1.716,133,1.868,137,1.257,145,2.039,150,1.468,154,0.988,157,1.462,159,1.716,161,1.489,165,0.797,172,1.091,179,2.665,180,1.468,184,1.648,188,1.409,189,2.039,190,1.409,200,1.945,201,1.717,202,1.74,203,2.487,204,2.487,205,1.717,206,1.549,210,1.948,212,1.161,216,1.716,220,0.629,284,0.682,348,1.185,356,2.149,357,2.149,358,1.998,359,2.278,371,1.185,372,2.018,374,2.794,375,3.202,377,1.289,378,1.289,379,2.197,380,1.868,381,1.289,382,1.289,383,1.289,384,1.289,387,1.289,388,1.468,389,1.185,390,1.289,391,2.244,392,1.289,393,1.581,394,1.289,397,1.289,401,1.859,405,1.289,406,1.289,425,1.289,429,1.549,430,2.639,437,1.868,438,1.868,439,1.868,441,1.868,444,1.185,445,1.185,446,1.008,447,1.185,448,1.289,449,1.008,450,1.289,452,2.197,453,1.289,454,1.289,455,1.289,457,1.289,459,1.549,462,1.868,463,1.868,465,1.581,466,1.289,467,1.185,468,1.289,469,1.289,470,1.289,471,1.716,472,1.868,473,1.868,474,1.46,475,1.868,492,1.289,493,1.289,494,1.289,495,1.289,496,1.289,497,1.091,498,1.289,499,1.289,500,1.289,501,1.289,502,1.185,504,1.289,505,1.289,506,1.868,508,1.289,513,1.289,518,1.289,519,1.289,520,1.289,525,1.289,526,1.289,527,1.185,529,1.289,610,2.197,625,1.549,626,1.927,627,1.289,628,2.244,629,1.927,630,1.927,631,3.6,632,1.185,633,1.927,634,1.549,635,1.927,636,1.927,637,1.927,638,1.927,639,1.927,640,1.927,641,1.927,642,1.927,643,1.927,644,1.927,645,1.927,646,1.927,647,1.927,648,1.927,649,1.927,650,1.927,651,1.927,652,1.927,653,1.927,654,1.927,655,1.927,656,1.927,657,1.927,658,3.283,659,1.927,660,1.927,661,1.927,662,1.927,663,2.792,664,1.927,665,1.927,666,1.717,667,1.717,668,1.927,669,1.927]],["title/modules/S3FileStorageModule.html",[0,0.842,9,1.464]],["body/modules/S3FileStorageModule.html",[0,1.445,2,1.79,3,2.512,7,0.03,9,2.914,11,2.734,12,2.291,13,1.939,14,0.414,15,0.414,16,0.404,18,2.291,19,0.949,21,0.795,45,1.211,46,1.31,86,2.988,87,0.471,88,0.795,89,0.026,90,0.026,152,4.683,388,2.178,389,2.105,670,3.924,671,3.924,672,3.924,673,3.424,674,4.684]],["title/injectables/S3FileStorageService.html",[154,0.842,388,1.065]],["body/injectables/S3FileStorageService.html",[7,0.031,14,0.244,15,0.244,16,0.419,19,0.905,21,0.47,24,1.801,39,1.801,40,2.317,41,2.317,45,1.193,46,1.661,53,0.837,55,2.022,57,3.313,59,0.989,87,0.278,88,0.47,89,0.018,90,0.018,96,0.428,97,0.944,106,1.401,107,0.857,111,1.202,121,1.741,145,2.205,154,1.022,155,1.478,157,1.409,160,1.637,161,1.862,165,1.196,167,4.218,168,2.415,170,2.205,175,2.084,180,1.906,182,1.934,183,1.934,184,1.611,200,1.196,210,1.646,212,1.433,299,2.847,373,1.801,388,1.292,407,3.373,444,2.563,502,2.79,527,1.776,542,1.801,634,2.711,673,4.34,675,2.317,676,4.614,677,4.614,678,5.54,679,4.614,680,4.614,681,4.614,682,4.614,683,2.766,684,2.766,685,2.766,686,2.766,687,2.766,688,2.766,689,2.766,690,2.766,691,2.766,692,5.035,693,5.326,694,2.766,695,4.614,696,2.766,697,2.766,698,2.766,699,5.035,700,3.954,701,2.317,702,2.766,703,2.766,704,2.766,705,2.766,706,2.766,707,2.766,708,2.766,709,2.766,710,2.766,711,2.766,712,2.766,713,2.022,714,2.766,715,2.317,716,2.766,717,2.317,718,2.766,719,2.317,720,2.766,721,2.317,722,2.766,723,4.614,724,5.035,725,4.218,726,5.035,727,5.035,728,4.614,729,6.157,730,4.614,731,4.614,732,4.614,733,4.614,734,3.954,735,2.766,736,2.766,737,2.766,738,2.766]],["title/controllers/UserCardController.html",[220,0.778,739,2.122]],["body/controllers/UserCardController.html",[7,0.031,14,0.267,15,0.267,16,0.197,19,0.89,21,0.514,42,3.083,43,2.015,53,1.274,59,0.782,85,1.156,87,0.304,88,0.514,89,0.019,90,0.019,96,0.468,106,1.255,107,0.852,111,0.722,121,1.377,124,3.437,137,1.695,144,1.479,157,0.846,160,1.743,161,1.725,165,0.915,168,1.743,170,1.743,175,1.743,179,2.861,180,1.712,184,1.274,196,1.97,200,1.666,202,1.488,210,1.584,212,1.253,214,2.474,220,0.722,223,1.97,227,2.742,230,3.412,244,2.742,245,3.155,246,1.97,247,1.97,254,2.742,284,1.253,285,1.97,290,4.486,291,4.277,294,3.83,295,3.83,296,3.412,297,3.83,298,3.344,299,2.251,301,3.81,302,2.742,303,3.714,304,2.211,305,3.078,306,3.078,307,2.211,308,2.846,311,2.211,315,2.742,318,2.211,319,3.542,320,2.211,321,2.211,322,3.078,326,2.211,327,2.211,328,2.211,330,3.078,332,3.078,333,3.078,334,3.542,335,3.078,336,2.211,338,1.156,341,1.777,343,2.211,344,2.211,345,2.211,347,3.078,352,3.078,353,3.078,354,3.078,356,1.852,357,1.852,358,2.002,359,1.156,361,3.078,362,3.078,363,2.742,364,2.211,365,1.97,366,2.211,367,1.97,368,2.211,369,2.211,558,3.528,559,2.534,564,1.97,566,2.534,568,2.534,632,2.177,739,2.742,740,2.534,741,4.845,742,5.508,743,3.025,744,3.025,745,4.211,746,3.025,747,3.025,748,3.025,749,3.025,750,3.025,751,3.025,752,3.025,753,3.025,754,3.025,755,4.211,756,4.211,757,4.211,758,4.211,759,3.025,760,3.025]],["title/interfaces/UserCardData.html",[91,0.412,628,1.914]],["body/interfaces/UserCardData.html",[7,0.031,14,0.231,15,0.231,16,0.291,19,1.023,21,0.444,26,0.923,43,1.341,45,0.981,46,0.731,53,0.79,59,1.041,87,0.449,88,0.444,89,0.017,90,0.017,91,0.48,93,0.999,96,0.404,97,0.906,99,1.347,102,1.981,106,1.326,107,0.806,108,1.483,109,2.028,111,1.171,128,1.705,133,1.856,137,1.25,145,1.571,150,1.461,154,0.981,157,1.457,159,1.705,161,1.483,165,0.79,172,1.082,179,2.657,180,1.461,184,1.643,188,1.396,189,2.249,190,1.396,200,1.943,201,1.701,202,1.341,203,2.471,204,2.471,205,1.701,206,1.535,210,1.944,212,1.155,216,1.705,220,0.624,284,0.676,348,1.174,356,1.874,357,1.874,358,1.45,359,2.143,371,1.174,372,2.441,374,3.07,375,3.44,377,1.278,378,1.278,379,2.185,380,1.856,381,1.278,382,1.278,383,1.278,384,1.278,387,1.278,388,1.461,389,1.174,390,1.278,391,2.229,392,1.278,393,1.571,394,1.278,397,1.278,401,1.571,405,1.278,406,1.278,425,1.278,429,1.535,430,2.625,437,1.856,438,1.856,439,1.856,441,1.856,444,1.174,445,1.174,446,0.999,447,1.174,448,1.278,449,0.999,450,1.278,452,2.185,453,1.278,454,1.278,455,1.278,457,1.278,459,1.535,462,1.856,463,1.856,465,1.571,466,1.278,467,1.174,468,1.278,469,1.278,470,1.278,471,1.705,472,1.856,473,1.856,474,1.45,475,1.856,492,1.278,493,1.278,494,1.278,495,1.278,496,1.278,497,1.082,498,1.278,499,1.278,500,1.278,501,1.278,502,1.174,504,1.278,505,1.278,506,1.856,508,1.278,513,1.278,518,1.278,519,1.278,520,1.278,525,1.278,526,1.278,527,1.174,529,1.278,610,2.185,625,1.535,626,1.91,627,1.278,628,2.625,629,1.91,630,1.91,631,4.098,632,1.174,633,1.91,634,1.535,635,1.91,636,1.91,637,1.91,638,1.91,639,1.91,640,1.91,641,1.91,642,1.91,643,1.91,644,1.91,645,1.91,646,1.91,647,1.91,648,1.91,649,1.91,650,1.91,651,1.91,652,1.91,653,1.91,654,1.91,655,1.91,656,1.91,657,1.91,658,3.266,659,1.91,660,1.91,661,1.91,662,1.91,663,2.774,664,1.91,665,1.91,666,1.701,667,1.701,668,1.91,669,1.91]],["title/modules/UserCardModule.html",[0,0.842,10,1.914]],["body/modules/UserCardModule.html",[0,1.394,2,1.687,3,2.423,7,0.031,9,2.843,10,3.852,11,2.637,12,2.158,13,1.827,14,0.39,15,0.39,16,0.38,18,2.637,19,1.075,21,0.749,25,3.511,26,1.559,43,1.905,45,1.141,46,1.234,47,2.873,85,2.061,86,2.882,87,0.444,88,0.749,89,0.025,90,0.025,137,1.508,146,3.095,284,1.141,338,1.687,533,3.225,534,3.225,535,3.225,632,2.843,739,3.792,761,3.697,762,4.412,763,3.697]],["title/injectables/UserCardService.html",[154,0.842,632,1.464]],["body/injectables/UserCardService.html",[7,0.031,14,0.211,15,0.211,16,0.277,19,1.004,21,0.406,26,0.845,43,2.156,45,0.92,46,0.669,53,0.724,59,1.063,87,0.427,88,0.406,89,0.016,90,0.016,91,0.45,96,0.37,97,0.849,99,0.92,102,1.661,106,1.354,107,0.777,108,1.076,109,1.901,111,1.257,121,1.642,128,1.598,133,1.74,137,1.188,145,1.473,150,1.782,154,0.92,155,1.279,157,1.601,159,2.112,160,1.473,161,1.81,165,1.076,168,2.18,170,2.08,172,0.991,175,1.946,176,1.406,179,2.849,180,1.721,182,1.17,183,1.17,184,1.649,188,1.279,189,1.946,190,1.279,200,1.922,201,1.558,202,1.257,203,2.316,204,2.316,205,1.558,206,1.406,210,1.904,212,1.098,216,1.598,220,0.571,284,1.41,348,1.075,356,1.797,357,1.797,358,1.36,359,2.084,371,1.075,372,1.908,374,2.685,375,3.094,377,1.17,378,1.17,379,2.575,380,1.74,381,1.17,382,1.17,383,1.17,384,1.17,387,1.17,388,1.782,389,1.075,390,1.17,391,2.09,392,1.17,393,1.473,394,1.17,397,1.17,401,1.473,405,1.74,406,1.17,425,1.17,429,1.406,430,2.494,437,1.74,438,1.74,439,1.74,441,1.74,444,1.075,445,1.075,446,0.914,447,1.075,448,1.17,449,0.914,450,2.076,452,2.076,453,1.17,454,1.17,455,1.17,457,1.17,459,1.406,462,1.74,463,1.74,465,1.473,466,1.17,467,1.075,468,1.17,469,1.17,470,1.17,471,1.598,472,1.74,473,1.74,474,1.36,475,1.74,492,1.17,493,1.17,494,1.17,495,1.17,496,1.17,497,0.991,498,1.17,499,1.17,500,1.17,501,2.076,502,1.075,504,1.17,505,1.17,506,1.74,508,1.17,513,1.17,518,1.17,519,1.17,520,1.17,525,1.17,526,1.17,527,1.075,529,1.17,536,1.749,542,1.558,548,2.98,610,2.076,625,1.406,626,1.749,627,1.17,628,2.762,629,1.749,630,1.749,631,3.436,632,1.598,633,3.104,634,1.406,635,1.749,636,1.749,637,1.749,638,1.749,639,1.749,640,1.749,641,1.749,642,1.749,643,1.749,644,1.749,645,1.749,646,1.749,647,1.749,648,1.749,649,1.749,650,1.749,651,1.749,652,1.749,653,1.749,654,1.749,655,1.749,656,1.749,657,1.749,658,3.673,659,1.749,660,1.749,661,1.749,662,1.749,663,2.6,664,1.749,665,1.749,666,1.558,667,1.558,668,1.749,669,3.104,764,2.393,765,2.393,766,2.393,767,2.393,768,2.393,769,2.393,770,2.393,771,2.393]],["title/changelog.html",[772,1.776,773,1.994,774,2.285]],["body/changelog.html",[0,0.672,3,1.475,7,0.03,16,0.247,42,2.179,45,1.152,59,0.827,83,1.042,89,0.012,90,0.012,99,0.672,102,0.918,107,0.247,127,3.733,128,1.699,137,1.246,140,1.445,141,0.94,144,1.271,172,1.845,179,2.392,183,0.782,184,0.484,187,2.751,206,0.94,212,0.849,231,1.389,286,2.178,296,1.693,298,2.843,301,2.901,302,1.693,308,0.94,341,2.758,363,1.042,376,1.042,446,1.589,449,0.993,471,0.719,474,0.611,477,2.703,479,1.693,516,0.94,550,1.9,582,2.138,601,1.169,610,1.271,627,1.271,666,1.693,667,1.693,713,1.9,725,2.178,772,1.693,774,2.178,775,1.6,776,2.599,777,3.78,778,2.178,779,2.599,780,2.178,781,3.733,782,5.414,783,3.484,784,2.599,785,4.237,786,4.892,787,1.6,788,1.6,789,2.599,790,1.6,791,1.6,792,1.34,793,1.6,794,5.319,795,3.283,796,1.6,797,6.053,798,6.053,799,5.424,800,1.6,801,1.6,802,1.6,803,2.599,804,4.158,805,3.167,806,5.94,807,4.69,808,2.178,809,2.599,810,2.599,811,2.599,812,3.283,813,2.599,814,2.599,815,2.178,816,2.178,817,2.599,818,2.599,819,4.158,820,3.283,821,2.599,822,2.599,823,4.455,824,3.283,825,2.599,826,4.455,827,2.599,828,2.599,829,2.599,830,2.599,831,5.198,832,2.599,833,2.599,834,3.257,835,2.599,836,3.167,837,2.178,838,2.599,839,2.599,840,1.6,841,1.6,842,2.599,843,5.057,844,6.343,845,2.599,846,2.599,847,2.599,848,2.599,849,2.178,850,2.599,851,4.695,852,4.455,853,2.599,854,2.599,855,3.167,856,2.599,857,2.599,858,2.599,859,2.599,860,2.599,861,2.599,862,3.78,863,2.599,864,2.599,865,2.599,866,3.933,867,2.599,868,2.599,869,2.599,870,2.599,871,2.599,872,3.78,873,2.599,874,2.599,875,2.599,876,2.599,877,2.599,878,2.599,879,2.599,880,2.599,881,6.327,882,3.283,883,1.6,884,1.6,885,3.283,886,3.283,887,2.599,888,2.599,889,5.198,890,2.599,891,2.599,892,3.04,893,2.599,894,3.78,895,3.484,896,2.599,897,2.178,898,2.599,899,2.599,900,2.599,901,3.78,902,3.78,903,3.167,904,3.167,905,2.178,906,2.599,907,2.751,908,2.599,909,2.178,910,3.78,911,2.599,912,2.599,913,2.599,914,2.178,915,2.599,916,2.599,917,2.764,918,2.599,919,2.751,920,3.78,921,2.178,922,2.599,923,3.733,924,3.733,925,3.167,926,2.599,927,2.178,928,2.178,929,2.751,930,2.599,931,2.599,932,4.158,933,3.283,934,2.599,935,2.599,936,2.599,937,2.599,938,2.599,939,2.599,940,2.599,941,2.178,942,2.599,943,3.78,944,2.599,945,2.599,946,2.599,947,1.9,948,2.178,949,2.599,950,2.599,951,2.599,952,2.599,953,2.599,954,2.178,955,2.599,956,2.599,957,3.78,958,3.167,959,2.599,960,2.599,961,2.178,962,2.599,963,2.599,964,2.178,965,2.599,966,2.599,967,2.599,968,3.78,969,2.599,970,2.599,971,2.599,972,2.599,973,2.599,974,2.599,975,1.9,976,2.599,977,2.599,978,2.599,979,2.178,980,3.283,981,3.283,982,2.599,983,2.599,984,2.599,985,2.178,986,2.599,987,5.198,988,1.6,989,1.6,990,1.6,991,1.6,992,1.6,993,1.6,994,2.599,995,2.599,996,1.6,997,1.6,998,1.34,999,1.6,1000,1.6,1001,1.6,1002,2.599,1003,1.6,1004,1.6,1005,1.34,1006,2.751,1007,1.6,1008,1.6,1009,1.6,1010,1.6,1011,1.6,1012,1.6,1013,1.6,1014,1.34,1015,1.6,1016,1.6,1017,1.6,1018,1.6,1019,3.283,1020,1.6,1021,1.6,1022,1.6,1023,1.6,1024,1.6,1025,1.6,1026,2.599,1027,1.6,1028,1.6,1029,1.6,1030,1.6,1031,1.6,1032,1.6,1033,1.6,1034,1.6,1035,1.6,1036,1.6,1037,2.599,1038,1.6,1039,1.6,1040,1.169,1041,1.6,1042,1.6,1043,1.6,1044,1.6,1045,1.6,1046,2.599,1047,1.6,1048,1.6,1049,1.6,1050,1.6,1051,1.6,1052,1.6,1053,1.6,1054,1.6,1055,1.6,1056,1.34,1057,1.6,1058,1.6,1059,1.6,1060,1.34,1061,1.34,1062,1.6,1063,1.6,1064,1.6,1065,2.751,1066,1.6,1067,1.6,1068,1.6,1069,1.6,1070,1.6,1071,2.599,1072,1.6,1073,2.751,1074,1.6,1075,1.169,1076,1.6,1077,1.6,1078,1.6,1079,1.34,1080,1.6,1081,1.6,1082,2.178,1083,1.34,1084,1.6,1085,1.6,1086,1.169,1087,1.6,1088,1.6,1089,1.6,1090,1.6,1091,1.34,1092,1.6,1093,1.6,1094,1.6,1095,1.6,1096,1.34,1097,1.6,1098,1.6]],["title/coverage.html",[1099,3.713]],["body/coverage.html",[7,0.031,16,0.32,35,2.264,37,2.017,39,2.017,43,2.121,46,0.866,48,3.071,49,3.071,89,0.02,90,0.02,91,0.77,92,1.655,94,2.969,95,3.129,107,0.479,110,2.017,115,1.82,116,2.595,119,2.264,120,2.595,136,1.82,137,0.866,138,2.595,150,1.012,154,1.436,156,2.595,162,2.264,163,2.264,184,0.937,220,1.263,221,2.017,222,2.595,283,2.017,284,1.7,285,3.195,337,1.515,370,2.017,371,2.646,388,1.012,390,1.515,392,1.515,393,1.282,395,2.017,401,1.282,402,2.017,403,2.017,425,3.294,474,1.184,549,2.017,561,1.515,569,2.017,574,2.017,576,2.017,578,2.017,625,1.82,627,1.515,628,1.82,632,1.392,673,2.264,675,2.595,739,2.017,834,2.264,975,2.264,1099,2.595,1100,3.097,1101,3.097,1102,2.595,1103,5.497,1104,6.603,1105,2.595,1106,2.595,1107,2.595,1108,4.281,1109,3.097,1110,5.555,1111,3.097,1112,3.097,1113,4.906,1114,3.587,1115,2.595,1116,2.595,1117,2.595,1118,5.292,1119,2.595,1120,4.281,1121,4.281,1122,2.595,1123,4.11,1124,2.595,1125,4.11,1126,4.11,1127,2.595,1128,2.595,1129,2.595,1130,2.595,1131,4.11,1132,2.595,1133,2.595,1134,3.587,1135,2.595,1136,2.595,1137,2.595,1138,3.587,1139,2.595,1140,2.595,1141,2.595,1142,3.097,1143,4.305,1144,2.595,1145,2.595,1146,2.595,1147,2.595,1148,2.595,1149,3.097,1150,2.595,1151,3.097,1152,3.097]],["title/miscellaneous/functions.html",[1040,2.862,1153,1.776]],["body/miscellaneous/functions.html",[7,0.029,59,1.122,89,0.026,90,0.026,96,0.743,106,1.42,107,0.965,121,1.974,170,2.501,402,3.696,403,3.696,477,3.033,1040,3.513,1117,4.026,1119,5.06,1143,3.513,1144,4.755,1153,3.13,1154,4.806,1155,5.06,1156,4.806,1157,4.806,1158,4.806,1159,4.806,1160,4.806]],["title/index.html",[96,0.422,772,1.776,773,1.994]],["body/index.html",[7,0.029,13,1.27,15,0.271,16,0.2,42,2.08,45,0.793,53,0.928,59,0.57,83,1.998,84,3.568,89,0.019,90,0.019,91,0.388,121,1.003,137,1.19,140,1.173,157,0.858,172,1.27,182,2.08,189,1.761,208,3.605,231,3.061,232,3.097,298,1.64,308,1.802,315,1.998,341,3.365,445,1.378,446,2.015,447,2.368,449,1.626,477,2.609,482,2.243,524,1.802,555,2.243,564,1.998,592,2.243,627,1.5,701,2.57,740,2.57,778,3.563,785,4.09,807,3.563,815,4.09,836,3.563,837,3.563,855,2.57,892,2.243,897,2.57,903,2.57,904,4.416,905,2.57,907,3.563,909,2.57,914,2.57,917,4.187,919,2.57,921,2.57,923,2.57,924,2.57,925,2.57,927,2.57,928,4.09,929,2.57,941,3.563,948,2.57,958,2.57,964,3.563,979,2.57,985,4.638,998,2.57,1014,2.57,1056,2.57,1079,4.09,1082,4.09,1083,2.57,1091,4.09,1096,3.563,1103,2.57,1161,3.109,1162,2.57,1163,4.416,1164,3.068,1165,3.068,1166,4.253,1167,3.068,1168,4.253,1169,3.068,1170,3.068,1171,3.068,1172,4.881,1173,6.358,1174,4.253,1175,4.638,1176,2.57,1177,3.068,1178,3.068,1179,3.068,1180,3.068,1181,3.068,1182,3.068,1183,3.068,1184,6.155,1185,3.068,1186,3.068,1187,2.57,1188,2.57,1189,2.57,1190,3.068,1191,4.416,1192,3.068,1193,2.57,1194,3.068,1195,3.068,1196,3.068,1197,3.068,1198,3.068,1199,3.068,1200,3.068,1201,3.068,1202,3.068,1203,3.068,1204,4.253,1205,3.068,1206,3.068,1207,3.068,1208,3.068,1209,3.068,1210,3.068,1211,3.068,1212,3.068,1213,3.068,1214,3.068,1215,3.068,1216,3.068,1217,3.068,1218,3.068,1219,3.068,1220,3.068,1221,3.068,1222,3.068,1223,3.068,1224,3.068,1225,3.068,1226,3.068,1227,3.068,1228,3.068,1229,3.068,1230,3.068,1231,3.068,1232,3.068,1233,3.068,1234,3.068,1235,3.068,1236,3.068,1237,4.253,1238,3.068,1239,4.253,1240,3.068,1241,4.253,1242,3.068,1243,3.563,1244,3.068,1245,3.068,1246,3.068,1247,3.068,1248,3.068,1249,3.068,1250,3.068,1251,3.068,1252,3.068,1253,3.068,1254,3.068,1255,3.068,1256,3.068,1257,3.068,1258,3.068,1259,3.068,1260,4.253,1261,3.068,1262,4.881,1263,3.068,1264,3.068,1265,3.068,1266,3.068,1267,3.068,1268,3.068,1269,3.068,1270,3.068,1271,3.068,1272,3.068,1273,3.563,1274,3.068,1275,3.068,1276,4.253,1277,4.253,1278,3.068,1279,3.068,1280,2.57,1281,4.253,1282,3.068,1283,3.068,1284,3.068,1285,3.068,1286,3.068,1287,3.068,1288,3.068,1289,3.068,1290,3.068,1291,3.068,1292,3.068,1293,3.068,1294,3.068,1295,3.068,1296,4.253,1297,3.068,1298,3.068,1299,3.068,1300,3.068,1301,3.068,1302,3.068,1303,3.068,1304,3.068,1305,3.068,1306,1.998,1307,2.243]],["title/license.html",[772,1.776,773,1.994,1306,1.776]],["body/license.html",[7,0.025,13,1.833,89,0.025,90,0.025,231,2.366,232,2.601,316,3.709,449,2.065,782,3.709,834,3.236,849,3.709,1175,3.709,1176,5.463,1187,4.527,1193,4.886,1280,4.527,1306,2.883,1307,3.236,1308,5.831,1309,4.427,1310,5.403,1311,4.427,1312,4.427,1313,4.427,1314,4.427,1315,4.427,1316,4.427,1317,4.427,1318,4.427,1319,4.427,1320,4.427,1321,4.427,1322,4.427,1323,4.427,1324,4.427,1325,4.427,1326,4.427,1327,4.427,1328,4.427,1329,5.403,1330,4.427,1331,4.427,1332,4.427,1333,4.427,1334,4.427,1335,4.427,1336,5.403,1337,5.403,1338,4.427,1339,4.427,1340,4.427,1341,4.427,1342,4.427,1343,4.427,1344,4.427,1345,4.427,1346,4.427,1347,4.427,1348,4.427,1349,4.427,1350,3.709,1351,4.427,1352,4.427,1353,4.427,1354,4.427,1355,4.427,1356,4.427,1357,4.427,1358,4.427,1359,4.427,1360,4.427,1361,4.427,1362,4.427,1363,4.427,1364,4.427,1365,4.427,1366,4.427]],["title/modules.html",[2,1.694]],["body/modules.html",[1,3.201,2,1.879,6,2.888,7,0.026,8,2.888,9,2.209,10,2.888,89,0.026,90,0.026,146,2.404,280,3.593,465,2.685,808,5.435,1367,6.487,1368,6.546,1369,4.915,1370,4.915]],["title/overview.html",[1371,3.713]],["body/overview.html",[1,4.239,2,1.61,3,2.354,4,3.528,5,3.528,6,3.799,7,0.031,8,3.799,9,2.905,10,3.799,11,2.562,12,2.059,13,1.743,85,1.61,89,0.024,90,0.024,93,1.61,146,3.136,147,3.528,148,3.528,149,3.528,150,2.074,155,2.251,337,2.789,388,2.074,497,1.743,530,3.528,531,3.528,561,2.789,614,3.528,616,3.528,632,2.562,670,3.528,671,3.528,672,3.528,761,3.528,763,3.528,947,3.078,1075,3.078,1371,3.528,1372,3.528]],["title/properties.html",[97,0.935,1006,2.285]],["body/properties.html",[7,0.03,42,2.39,89,0.026,90,0.026,97,1.167,124,2.871,189,2.023,231,2.612,232,2.871,298,2.612,780,4.095,781,4.095,1086,3.573,1161,3.573,1162,4.095,1306,3.183,1307,3.573,1350,4.095,1373,4.887,1374,4.887,1375,4.887,1376,4.887,1377,5.732,1378,4.887,1379,4.887,1380,4.887,1381,4.887,1382,4.887,1383,4.887,1384,4.887,1385,4.887,1386,4.887]],["title/miscellaneous/variables.html",[208,2.549,1153,1.776]],["body/miscellaneous/variables.html",[7,0.031,14,0.095,35,1.366,37,1.217,39,1.217,59,0.961,89,0.009,90,0.009,96,0.167,98,0.703,99,1.119,102,1.687,106,1.326,107,0.382,108,1.006,128,0.485,133,2.198,140,0.413,141,1.73,144,1.44,162,1.366,163,1.366,172,1.219,174,2.209,179,1.44,182,2.719,183,2.719,189,0.774,200,1.182,207,1.917,208,1.609,212,0.86,214,2.428,231,0.577,232,1.098,284,1.235,303,0.703,365,0.703,367,0.703,372,2.086,373,1.217,374,1.778,376,2.544,390,0.914,392,0.914,393,0.774,395,1.217,417,1.098,425,2.392,446,0.413,461,3.49,465,0.447,467,0.84,474,0.714,477,1.32,479,1.609,497,2.069,523,0.635,550,1.366,564,1.217,570,2.152,571,1.366,574,1.217,576,1.217,578,1.217,582,3.422,610,2.335,625,1.098,627,0.914,634,0.635,713,0.79,715,0.905,717,4.569,719,0.905,721,0.905,783,4.266,792,0.905,805,2.466,816,2.466,866,0.905,892,0.79,895,4,917,0.79,947,3.49,954,2.07,961,0.905,975,1.366,1005,0.905,1060,0.905,1061,0.905,1065,0.905,1073,1.566,1075,3.722,1086,0.79,1102,0.905,1105,0.905,1106,1.566,1107,0.905,1114,1.566,1115,1.566,1116,1.566,1122,0.905,1123,3.051,1124,0.905,1125,1.566,1126,2.787,1127,1.566,1128,1.566,1129,1.566,1130,2.787,1131,2.07,1132,1.566,1133,1.566,1134,2.466,1135,0.905,1136,1.566,1137,2.466,1138,1.566,1139,1.566,1140,0.905,1141,0.905,1143,0.79,1145,1.566,1146,1.566,1147,1.566,1148,5.047,1150,1.566,1153,0.703,1155,2.466,1161,1.366,1163,0.905,1188,0.905,1189,0.905,1191,0.905,1243,0.905,1273,0.905,1372,4.338,1387,1.08,1388,2.47,1389,1.08,1390,1.869,1391,1.08,1392,1.08,1393,2.944,1394,1.08,1395,1.08,1396,2.47,1397,1.08,1398,1.08,1399,1.08,1400,1.08,1401,1.08,1402,1.08,1403,1.08,1404,1.08,1405,1.08,1406,1.08,1407,1.08,1408,1.08,1409,1.08,1410,1.08,1411,1.08,1412,1.08,1413,3.907,1414,1.08,1415,1.08,1416,1.08,1417,1.08,1418,1.08,1419,1.08,1420,1.08,1421,1.08,1422,1.869,1423,1.08,1424,1.08,1425,2.47,1426,1.08,1427,1.08,1428,1.08,1429,1.08,1430,1.08,1431,1.08,1432,1.08,1433,1.869,1434,1.869,1435,1.08,1436,1.08,1437,1.08,1438,1.08,1439,1.08,1440,1.08,1441,1.08,1442,1.08,1443,1.08,1444,1.08,1445,1.08,1446,1.08,1447,1.08,1448,1.869,1449,1.08,1450,1.08,1451,1.08,1452,3.642,1453,1.869,1454,1.08,1455,1.869,1456,1.08,1457,1.869,1458,1.08,1459,1.08,1460,1.869,1461,1.08,1462,1.869,1463,1.08,1464,1.08,1465,1.869,1466,1.08,1467,1.869,1468,1.08,1469,1.08,1470,1.08,1471,1.08,1472,1.08,1473,1.08,1474,1.08,1475,1.08,1476,1.08,1477,1.869,1478,1.08,1479,1.08,1480,1.08,1481,1.08,1482,1.08,1483,1.08,1484,1.08,1485,1.08,1486,1.08,1487,1.08,1488,1.08,1489,1.08,1490,1.08,1491,1.08,1492,1.08,1493,1.08,1494,1.869,1495,1.08,1496,1.08,1497,1.869,1498,1.08,1499,1.08,1500,1.869,1501,1.08,1502,1.08,1503,1.869,1504,1.08,1505,1.08,1506,1.869,1507,1.08,1508,1.869,1509,1.08,1510,1.869,1511,1.08,1512,1.08,1513,1.869,1514,1.08,1515,1.869,1516,1.08,1517,1.08,1518,1.869,1519,1.08,1520,1.869,1521,1.08,1522,1.08,1523,1.08,1524,1.08,1525,1.08,1526,1.08,1527,1.08,1528,1.08,1529,1.08,1530,1.08,1531,1.869,1532,1.08,1533,1.08,1534,1.08,1535,1.08,1536,1.869,1537,1.08,1538,1.08,1539,1.869,1540,1.08,1541,1.869,1542,1.08,1543,1.08,1544,1.08,1545,1.08,1546,1.08,1547,1.08,1548,1.08,1549,1.08,1550,1.08,1551,1.08,1552,1.08,1553,1.08,1554,1.08,1555,1.08,1556,1.08,1557,1.08,1558,1.08,1559,1.08,1560,1.08,1561,1.08,1562,1.08,1563,1.08,1564,1.869,1565,1.08,1566,1.869,1567,3.326,1568,3.326,1569,3.326,1570,2.944,1571,1.869,1572,2.47,1573,1.869,1574,3.326,1575,2.944,1576,1.08,1577,1.08,1578,1.08,1579,1.08,1580,1.08,1581,1.08,1582,1.08,1583,1.08,1584,1.08,1585,1.08,1586,1.08,1587,1.08,1588,1.08,1589,1.08,1590,1.08,1591,1.08,1592,1.08,1593,1.08,1594,1.08,1595,1.08,1596,1.08,1597,1.08,1598,1.08,1599,1.08,1600,1.08,1601,1.08,1602,1.08,1603,1.08,1604,1.08,1605,1.08,1606,1.869,1607,1.08,1608,1.08,1609,2.944,1610,1.08,1611,1.08,1612,1.08,1613,1.08,1614,1.08,1615,1.08,1616,1.869,1617,1.869,1618,1.08,1619,1.869,1620,1.08,1621,1.08,1622,1.08,1623,1.08,1624,1.08,1625,1.08,1626,1.08,1627,1.08,1628,1.08,1629,1.869,1630,1.08,1631,1.869,1632,1.08,1633,1.869,1634,1.08,1635,2.47,1636,1.08,1637,1.08,1638,2.47,1639,1.08,1640,3.642,1641,2.944,1642,1.869,1643,1.869,1644,1.08,1645,1.869,1646,1.08,1647,1.869,1648,1.869,1649,1.08,1650,1.08,1651,1.08,1652,1.08,1653,1.869,1654,1.869,1655,1.869,1656,1.08,1657,1.869,1658,1.08,1659,1.08,1660,1.08,1661,1.08,1662,1.869,1663,2.944,1664,1.869,1665,2.47,1666,1.869,1667,1.869,1668,1.869,1669,1.869,1670,1.869,1671,1.869,1672,1.869,1673,3.326,1674,1.08,1675,2.47,1676,2.47,1677,1.869,1678,1.869,1679,1.08,1680,1.08,1681,1.08,1682,1.08,1683,1.08,1684,1.08,1685,1.08,1686,2.944,1687,4.892,1688,2.47,1689,2.944,1690,3.326,1691,1.08,1692,1.869,1693,3.642,1694,1.08,1695,2.47,1696,1.08,1697,1.869,1698,2.944,1699,1.08,1700,2.47,1701,4.775,1702,1.869,1703,1.08,1704,1.869,1705,1.869,1706,1.08,1707,4.775,1708,1.08,1709,1.08,1710,1.08,1711,3.642,1712,1.08,1713,1.08,1714,1.08,1715,1.08,1716,1.869,1717,1.08,1718,1.869,1719,3.326,1720,1.08,1721,1.08,1722,1.08,1723,1.08,1724,1.869,1725,1.08,1726,1.08,1727,1.08,1728,1.08,1729,1.08,1730,1.08,1731,1.08,1732,1.08,1733,2.944,1734,1.08,1735,1.08,1736,1.08,1737,1.08,1738,1.08,1739,1.08,1740,1.869,1741,1.08,1742,1.08,1743,1.08,1744,1.08,1745,1.869,1746,1.08,1747,1.08,1748,2.47,1749,1.08,1750,1.08,1751,1.08,1752,1.08,1753,1.08,1754,5.091,1755,1.869,1756,1.08,1757,1.08,1758,3.326,1759,1.08,1760,1.08,1761,1.08,1762,1.08,1763,1.08,1764,1.08,1765,3.642,1766,4.132,1767,2.47,1768,1.08,1769,1.08,1770,1.869,1771,1.08,1772,1.869,1773,1.08,1774,1.869,1775,1.08,1776,1.08,1777,1.08,1778,1.08,1779,1.08,1780,1.08,1781,1.08,1782,1.08,1783,1.08,1784,2.944,1785,1.08,1786,1.08,1787,1.869,1788,2.944,1789,1.869,1790,1.08,1791,2.944,1792,1.869,1793,1.08,1794,1.869,1795,1.08,1796,1.08,1797,1.869,1798,1.08,1799,1.08,1800,1.869,1801,1.08,1802,3.907,1803,1.869,1804,1.869,1805,1.08,1806,1.869,1807,1.869,1808,1.08,1809,1.08,1810,1.08,1811,1.869,1812,1.08,1813,1.869,1814,1.869,1815,1.08,1816,1.08,1817,1.08,1818,1.08,1819,1.869,1820,1.08,1821,1.08,1822,1.08,1823,1.08,1824,1.869,1825,1.08,1826,1.08,1827,1.08,1828,1.08,1829,3.642,1830,1.08,1831,1.08,1832,1.869,1833,1.08,1834,1.08,1835,1.08,1836,1.08,1837,1.08,1838,1.08,1839,1.08,1840,1.08,1841,1.08,1842,1.869,1843,1.08,1844,1.08,1845,1.08,1846,1.08,1847,1.08,1848,1.08,1849,1.08,1850,1.08,1851,1.08,1852,1.08,1853,1.08,1854,1.869,1855,1.08,1856,1.08,1857,1.08,1858,1.08,1859,1.08,1860,1.08,1861,1.08,1862,1.08,1863,1.08,1864,1.08,1865,1.08,1866,1.08,1867,1.08,1868,1.08,1869,1.08,1870,1.08,1871,1.08,1872,2.47,1873,1.08,1874,2.944,1875,1.869,1876,1.08,1877,1.08,1878,1.08,1879,1.08,1880,1.08,1881,1.08,1882,1.08,1883,1.08,1884,1.08,1885,1.08,1886,1.08,1887,1.08,1888,1.08,1889,1.08,1890,1.08,1891,1.08,1892,1.08,1893,1.08,1894,1.08,1895,1.08,1896,1.08,1897,1.08,1898,1.08,1899,1.08,1900,1.08,1901,1.08,1902,1.08,1903,1.08,1904,1.08,1905,1.08,1906,1.08,1907,1.08,1908,1.08,1909,1.08,1910,1.08,1911,1.08,1912,1.08,1913,1.869,1914,1.08,1915,1.08,1916,1.08,1917,1.08,1918,1.869,1919,1.08,1920,1.08,1921,1.08,1922,1.08,1923,1.08,1924,1.08,1925,1.08,1926,1.08,1927,1.08,1928,1.08,1929,1.08,1930,1.08,1931,1.08,1932,1.08,1933,1.08,1934,1.08,1935,1.08,1936,1.08,1937,1.869,1938,1.08,1939,1.08,1940,2.944,1941,1.08,1942,1.08,1943,1.08,1944,1.08,1945,1.08,1946,1.08,1947,1.08,1948,1.08,1949,1.08,1950,1.08,1951,1.08,1952,1.08,1953,1.08,1954,1.08,1955,1.08,1956,1.08,1957,1.08,1958,1.869,1959,1.08,1960,2.47,1961,1.08,1962,1.08,1963,1.08,1964,1.08,1965,1.08,1966,1.08,1967,1.08,1968,1.08,1969,1.08,1970,1.08,1971,1.08,1972,1.08,1973,1.08,1974,1.08,1975,1.08,1976,1.08,1977,1.08,1978,1.08,1979,4.132,1980,1.08,1981,1.08,1982,1.08,1983,1.08,1984,1.08,1985,1.08,1986,1.08,1987,1.08,1988,1.08,1989,1.08,1990,1.08,1991,1.869,1992,3.326,1993,1.08,1994,1.08,1995,1.08,1996,3.642,1997,1.869,1998,1.869,1999,1.869,2000,1.08,2001,1.869,2002,1.869,2003,1.08,2004,1.869,2005,1.08,2006,1.08,2007,1.08,2008,1.08,2009,1.869,2010,1.08,2011,1.08,2012,1.869,2013,1.08,2014,1.08,2015,1.08,2016,1.08]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":425,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0.0",{"_index":1405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.016",{"_index":1722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.026",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.028",{"_index":1725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.05",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.055",{"_index":1727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.057",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.075",{"_index":1729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.083",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.099",{"_index":1732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.1",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.109",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.126",{"_index":1735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.139",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.157",{"_index":1738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.182",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.19",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.244",{"_index":1742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.265",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.412",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.467",{"_index":1744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.472",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5",{"_index":961,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["0.506",{"_index":1747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.593",{"_index":1750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.615",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.7",{"_index":1419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.927",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.934",{"_index":1753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0/1",{"_index":1104,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1108,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1112,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1111,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1110,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1121,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1109,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1113,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1142,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1120,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["076ace0",{"_index":888,"title":{},"body":{"changelog.html":{}}}],["077e473",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["08cead1",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["0b6b7fc",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1",{"_index":717,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["1.0.4",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["1.1.2",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["1.2.0",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":1149,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":582,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0",{"_index":1741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0004",{"_index":1463,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.1",{"_index":1737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7",{"_index":1709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.7965",{"_index":1516,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9",{"_index":1731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.9029",{"_index":1466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":1148,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["100px",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1024",{"_index":1413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["108",{"_index":1631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11",{"_index":895,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["11.0",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1",{"_index":1705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.1922",{"_index":1468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.2885",{"_index":1544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3",{"_index":1702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.3906",{"_index":1543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.4",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.5582",{"_index":1471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6209",{"_index":1508,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6223",{"_index":1473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.6557",{"_index":1519,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.7",{"_index":1699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.8652",{"_index":1476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.9269",{"_index":1521,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12",{"_index":783,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["12.0",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2",{"_index":1696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.2378",{"_index":1479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3228",{"_index":1540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3318",{"_index":1455,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.3438",{"_index":1481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.6543",{"_index":1484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7115",{"_index":1537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.7344",{"_index":1525,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12.8078",{"_index":1486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":468,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["1200px",{"_index":1672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12b86a7",{"_index":1074,"title":{},"body":{"changelog.html":{}}}],["12px",{"_index":1664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.1192",{"_index":1499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.2035",{"_index":1526,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.3",{"_index":1694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.4627",{"_index":1535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.5078",{"_index":1488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.6",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.7",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.9996",{"_index":1489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["134px",{"_index":1670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["138a847",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["14.1",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4",{"_index":1726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.4738",{"_index":1510,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.6",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["14.9",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1440px",{"_index":1657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1454cbb",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["14a5e28",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":1680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.0",{"_index":1786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.3",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.393",{"_index":1528,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.5735",{"_index":1457,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15.8",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1555a25",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["16.0",{"_index":1724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.2945",{"_index":1491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.4",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c19.1764",{"_index":1530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6342c8.60701",{"_index":1512,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.6388",{"_index":1529,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16.7",{"_index":1691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16d3101",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["16px",{"_index":1665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["17.0",{"_index":1771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.2635",{"_index":1497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6112",{"_index":1492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.6948",{"_index":1513,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c20.1986",{"_index":1493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.7763c7.70549",{"_index":1459,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17.9",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["18.5479",{"_index":1515,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18.8973",{"_index":1460,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18a3e23",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["19.1",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c11.2656",{"_index":1517,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.1364c14.1434",{"_index":1527,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.2",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.3425",{"_index":1533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.4301",{"_index":1518,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.6567",{"_index":1520,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.7929",{"_index":1462,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091c12.3443",{"_index":1524,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.8091l12",{"_index":1522,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19.85l12.0731",{"_index":1523,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19043fc",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":461,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["2.0.14",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["2.2.1",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["2.4",{"_index":1752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.4.0",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["2.4.1",{"_index":780,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["2.5",{"_index":1452,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c14.9702",{"_index":1498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5c3.82903",{"_index":1451,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.5zm6.73649",{"_index":1504,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["20.171",{"_index":1496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.2",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c10.4922",{"_index":1464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.4077c14.9816",{"_index":1490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.5",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.7157",{"_index":1465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.9544",{"_index":1467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200",{"_index":1412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2023",{"_index":782,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["21.1169c11.4093",{"_index":1469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.1169c13.0971",{"_index":1487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2031",{"_index":1485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2388",{"_index":1470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.2886",{"_index":1483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.318",{"_index":1472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3516c11.7407",{"_index":1474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.3693c12.5003",{"_index":1482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4132",{"_index":1475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4238",{"_index":1480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527",{"_index":1477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.4527c12.1193",{"_index":1478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.5",{"_index":1531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21.9",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["22px",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23",{"_index":1494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.0",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.1",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.8",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["230",{"_index":496,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["235",{"_index":495,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["24",{"_index":805,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["24.0",{"_index":1716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24.3",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24bfb15",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25.9",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["26",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["26.5",{"_index":1721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27.4",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["28",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["29.0",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2c94638",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["2e6cb05",{"_index":1070,"title":{},"body":{"changelog.html":{}}}],["2px",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2xl",{"_index":1656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":610,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["3.1.2",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["3.72621",{"_index":1500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.80141",{"_index":1456,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30",{"_index":206,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["30.0",{"_index":1688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["30.8",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3000",{"_index":1416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3001",{"_index":1189,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["3047cec",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["31.6",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31.8",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32.5",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":1666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33.3",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["34.1",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["34.4",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35.0",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["36",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["36.0",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.0",{"_index":1768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.1",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["37.6",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["38.1",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38.7",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["39.0",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["39.6",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3b146a3",{"_index":1067,"title":{},"body":{"changelog.html":{}}}],["3b5d838",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["3dc1a0a",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["3e35dc9",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":1372,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.8",{"_index":1749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.8236",{"_index":1509,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.1",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.3",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["40.4",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400",{"_index":438,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["41",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["41.0",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["42.2",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["42.6",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["425px",{"_index":1653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.0",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.1",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.2",{"_index":1785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.4",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.5",{"_index":1715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["43.9",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["46.5",{"_index":1767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.3",{"_index":1783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.5",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["47.6",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4748b98",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["48.7",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["48px",{"_index":1667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["49",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["49.5",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4a434e6",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["4c15.1581",{"_index":1534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c4.65746",{"_index":1505,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4c7d29a",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["4px",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4xl",{"_index":1659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4z",{"_index":1547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5",{"_index":1075,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5).join",{"_index":1639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.052",{"_index":1453,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.38899",{"_index":1536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.4",{"_index":1746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.6",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.60482c10.8808",{"_index":1501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.8",{"_index":1713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.88043",{"_index":1506,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.9",{"_index":1743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":1675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50.0",{"_index":1766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":441,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["51",{"_index":832,"title":{},"body":{"changelog.html":{}}}],["51.1",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["52.1",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52.3",{"_index":1714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["52b97ed",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["53",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["53.6",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54",{"_index":1679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["54e3ec0",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["55.2",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.1",{"_index":1712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56.3",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["56px",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["57.2",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5797c54",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["58.5",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5846c42",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["58px",{"_index":1668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.0",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59.4",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5ae3704",{"_index":1087,"title":{},"body":{"changelog.html":{}}}],["5b088e9",{"_index":1084,"title":{},"body":{"changelog.html":{}}}],["5rem",{"_index":1660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6",{"_index":1701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.0",{"_index":1711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.2",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.38882",{"_index":1458,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.4",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.73649",{"_index":1503,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.8",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60",{"_index":816,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["60.0",{"_index":1770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.2",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60.6",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["62.2",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["627",{"_index":470,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["627px",{"_index":1671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["63",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["63.0",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.0",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64.3",{"_index":1764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["64372f4",{"_index":1076,"title":{},"body":{"changelog.html":{}}}],["64px",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.0",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.3",{"_index":1782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["65.8",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66.1",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6893d90",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["68d0202",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["69",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["69.4",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69.5",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6a46be1",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["6efe0e6",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["6px",{"_index":1662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":947,"title":{},"body":{"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["7.0",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.1",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.36118",{"_index":1511,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.4",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c10.5373",{"_index":1545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.64258c12.6094",{"_index":1538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.94883",{"_index":1539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.0",{"_index":1755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70.2",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71.2",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["715e349",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["72",{"_index":792,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["72.0",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.2",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["74.3",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":1682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.0",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75.3",{"_index":1762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["76.9",{"_index":1780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["765696a",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["77.4",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["77.5",{"_index":1779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["778ad4e",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["78.0",{"_index":1710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["79.7",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["792992e",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["7c6f199",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["7d82c0d",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":1707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541",{"_index":1541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.15541c11.6772",{"_index":1542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.4",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c1",{"_index":1454,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c2.5",{"_index":1507,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c21.5",{"_index":1532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.51351c23",{"_index":1495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.8",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.84185",{"_index":1546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["80px",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.2",{"_index":1777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.7",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81.9",{"_index":1781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82.8",{"_index":1761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["82c0a3a",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["83.3",{"_index":1757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["84.5",{"_index":1778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.1",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.3",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["85.9",{"_index":1706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8594508",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["86.5",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["86.7",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.6",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.7",{"_index":1723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["87.8",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8757519",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["88.2",{"_index":1760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.3",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.6",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88.9",{"_index":1703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.0",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["89.7",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8a82a48",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["8b48513",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["8px",{"_index":1663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9",{"_index":497,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["9.0",{"_index":1717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.01844",{"_index":1461,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.02981",{"_index":1502,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.2",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.8",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9.85656",{"_index":1514,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.1",{"_index":1776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.2",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.3",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.1",{"_index":1700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.4",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.8",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["91.9",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.2",{"_index":1759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.4",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["92.6",{"_index":1720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.0",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.2",{"_index":1697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.4",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.5",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["93.9",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.0",{"_index":1765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.1",{"_index":1728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.5",{"_index":1763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.7",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["94.8",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.0",{"_index":1775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.2",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.3",{"_index":1695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["95.8",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.0",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.4",{"_index":1734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.5",{"_index":1740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96.8",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["96px",{"_index":1669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.0",{"_index":1748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.1",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.3",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.6",{"_index":1692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["97.9",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["977df75",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["9790d30",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["98.0",{"_index":1774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.5",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.6",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.7",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.8",{"_index":1689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["98.9",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.0",{"_index":1756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.1",{"_index":1736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.2",{"_index":1773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.4",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["99.6",{"_index":1745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_color.svg",{"_index":1435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_flat.svg",{"_index":1437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a.size",{"_index":650,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["a0e6d3f",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["a4a71e3",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["a58ec19",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1335,"title":{},"body":{"license.html":{}}}],["acbe81a",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":423,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["access",{"_index":1220,"title":{},"body":{"index.html":{}}}],["accesskeyid",{"_index":719,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["acl",{"_index":737,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["action",{"_index":1360,"title":{},"body":{"license.html":{}}}],["actions",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":807,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["added",{"_index":1275,"title":{},"body":{"index.html":{}}}],["adding",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["adjust",{"_index":1272,"title":{},"body":{"index.html":{}}}],["adjustments",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["advised",{"_index":1237,"title":{},"body":{"index.html":{}}}],["ago",{"_index":668,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["ahmed",{"_index":1384,"title":{},"body":{"properties.html":{}}}],["amz",{"_index":362,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["and/or",{"_index":1327,"title":{},"body":{"license.html":{}}}],["anything",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":1246,"title":{},"body":{"index.html":{}}}],["api_domain=opengraph.opensauced.pizza",{"_index":1255,"title":{},"body":{"index.html":{}}}],["api_host=0.0.0.0",{"_index":1253,"title":{},"body":{"index.html":{}}}],["api_port=3005",{"_index":1254,"title":{},"body":{"index.html":{}}}],["apibadrequestresponse",{"_index":331,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["apiconfig",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiforbiddenresponse",{"_index":332,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinocontentresponse",{"_index":333,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apinotfoundresponse",{"_index":334,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiokresponse",{"_index":244,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apioperation",{"_index":245,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apiresponse",{"_index":335,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apis",{"_index":1145,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apitags",{"_index":246,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["apitags(\"health",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags(\"highlight",{"_index":340,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["apitags(\"insight",{"_index":563,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["apitags(\"user",{"_index":753,"title":{},"body":{"controllers/UserCardController.html":{}}}],["app",{"_index":948,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appear",{"_index":1250,"title":{},"body":{"index.html":{}}}],["application",{"_index":1079,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["architecture",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["argument",{"_index":487,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["arising",{"_index":1364,"title":{},"body":{"license.html":{}}}],["array",{"_index":1199,"title":{},"body":{"index.html":{}}}],["array.from(object.values(langs)).sort((a",{"_index":647,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["asc",{"_index":1608,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assets",{"_index":1014,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["associated",{"_index":1317,"title":{},"body":{"license.html":{}}}],["async",{"_index":161,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["atwa",{"_index":1386,"title":{},"body":{"properties.html":{}}}],["author",{"_index":1383,"title":{},"body":{"properties.html":{}}}],["author_login",{"_index":599,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["authorization",{"_index":197,"title":{},"body":{"injectables/GithubService.html":{}}}],["authors",{"_index":1353,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":1370,"title":{},"body":{"modules.html":{}}}],["avatarurl",{"_index":372,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["avoid",{"_index":1238,"title":{},"body":{"index.html":{}}}],["await",{"_index":210,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["awaits",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["aware",{"_index":297,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["aws",{"_index":701,"title":{},"body":{"injectables/S3FileStorageService.html":{},"index.html":{}}}],["axios",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":648,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b.size",{"_index":649,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["b1f870c",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["b62c129",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["b6abefa",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":493,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["backgroundimage",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["bee0e6e",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1266,"title":{},"body":{"index.html":{}}}],["being",{"_index":998,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["below",{"_index":1297,"title":{},"body":{"index.html":{}}}],["beta",{"_index":1168,"title":{},"body":{"index.html":{}}}],["beta.1",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["beta.10",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["beta.2",{"_index":781,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["beta.3",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["beta.4",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["beta.5",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["beta.6",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["beta.7",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["beta.8",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["beta.9",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["beta.opengraph.opensauced",{"_index":1170,"title":{},"body":{"index.html":{}}}],["beta@digital",{"_index":1169,"title":{},"body":{"index.html":{}}}],["binaries",{"_index":1177,"title":{},"body":{"index.html":{}}}],["bio",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["biohtml",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blobmoji",{"_index":1428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":1772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":373,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["body.length",{"_index":1630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body.slice(0",{"_index":1632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boilerplate",{"_index":919,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["boolean",{"_index":109,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["bootstrap",{"_index":1119,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boxshadow",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["branch",{"_index":1304,"title":{},"body":{"index.html":{}}}],["break",{"_index":1264,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1368,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1367,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":725,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{}}}],["bucketname",{"_index":1558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buffer",{"_index":407,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"injectables/S3FileStorageService.html":{}}}],["buffers",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["bugs",{"_index":1379,"title":{},"body":{"properties.html":{}}}],["build",{"_index":785,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bump",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1309,"title":{},"body":{"license.html":{}}}],["c12099a",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["c2cc28c",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["c5a5fec",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["cache",{"_index":296,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["cached",{"_index":1240,"title":{},"body":{"index.html":{}}}],["caching",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["calculation",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["card",{"_index":298,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["card.controller",{"_index":535,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.controller.ts",{"_index":285,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"coverage.html":{}}}],["card.controller.ts:31",{"_index":751,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:33",{"_index":325,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.controller.ts:41",{"_index":560,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["card.controller.ts:51",{"_index":312,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["card.controller.ts:55",{"_index":747,"title":{},"body":{"controllers/UserCardController.html":{}}}],["card.controller.ts:65",{"_index":556,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["card.module",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["card.module.ts",{"_index":533,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["card.service",{"_index":338,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{}}}],["card.service.ts",{"_index":371,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["card.service.ts:120",{"_index":618,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:131",{"_index":765,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:147",{"_index":539,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:150",{"_index":622,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:159",{"_index":769,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:183",{"_index":545,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:26",{"_index":617,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:34",{"_index":624,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:35",{"_index":548,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/UserCardService.html":{}}}],["card.service.ts:36",{"_index":537,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:43",{"_index":771,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:44",{"_index":547,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:82",{"_index":620,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["card.service.ts:84",{"_index":543,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.service.ts:89",{"_index":767,"title":{},"body":{"injectables/UserCardService.html":{}}}],["card.service.ts:96",{"_index":541,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["card.template",{"_index":397,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["card.template.ts",{"_index":1123,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/highlight",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["card/insight",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["card/templates/highlight",{"_index":1122,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/insight",{"_index":1124,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/card",{"_index":1125,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/insight",{"_index":1131,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/repo",{"_index":1135,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/shared/user",{"_index":1138,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/tailwind.config.ts",{"_index":1140,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/templates/user",{"_index":1141,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["card/user",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["cardfooter",{"_index":1127,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cardfooter(langs",{"_index":1633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cards",{"_index":341,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{}}}],["cardstylesetup",{"_index":1130,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["catch",{"_index":728,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["catching",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["cba7521",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["ccc8a96",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["cdn",{"_index":928,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cdn.opensauced.pizzaother",{"_index":1245,"title":{},"body":{"index.html":{}}}],["cdncustomdomain",{"_index":1560,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdndisabled",{"_index":1562,"title":{},"body":{"miscellaneous/variables.html":{}}}],["change",{"_index":1248,"title":{},"body":{"index.html":{}}}],["changed",{"_index":897,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changelog",{"_index":774,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["channel",{"_index":1295,"title":{},"body":{"index.html":{}}}],["char",{"_index":1157,"title":{},"body":{"miscellaneous/functions.html":{}}}],["charge",{"_index":1314,"title":{},"body":{"license.html":{}}}],["charlimit",{"_index":1641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["charlimit).replace",{"_index":1645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"index.html":{}}}],["checkhighlightsocialcard",{"_index":287,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkhighlightsocialcard(id",{"_index":289,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["checkin",{"_index":1278,"title":{},"body":{"index.html":{}}}],["checkinsightsocialcard",{"_index":551,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["checkinsightsocialcard(id",{"_index":553,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["checkrequiresupdate",{"_index":501,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["checkrequiresupdate(id",{"_index":538,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{}}}],["checkrequiresupdate(username",{"_index":764,"title":{},"body":{"injectables/UserCardService.html":{}}}],["checkusersocialcard",{"_index":741,"title":{},"body":{"controllers/UserCardController.html":{}}}],["checkusersocialcard(username",{"_index":743,"title":{},"body":{"controllers/UserCardController.html":{}}}],["churntotalcount",{"_index":122,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["cito",{"_index":1185,"title":{},"body":{"index.html":{}}}],["claim",{"_index":1356,"title":{},"body":{"license.html":{}}}],["class",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["classes",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["clc",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.green(`{msg",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["clc.yellow(`[{context",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["client",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["clip",{"_index":1449,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closed_prs_count",{"_index":123,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["closes",{"_index":889,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_githubmodule",{"_index":147,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_exports",{"_index":148,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_githubmodule_providers",{"_index":149,"title":{},"body":{"modules/GithubModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule",{"_index":530,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_highlightcardmodule_imports",{"_index":532,"title":{},"body":{"modules/HighlightCardModule.html":{}}}],["cluster_highlightcardmodule_providers",{"_index":531,"title":{},"body":{"modules/HighlightCardModule.html":{},"overview.html":{}}}],["cluster_insightcardmodule",{"_index":614,"title":{},"body":{"modules/InsightCardModule.html":{},"overview.html":{}}}],["cluster_insightcardmodule_imports",{"_index":615,"title":{},"body":{"modules/InsightCardModule.html":{}}}],["cluster_insightcardmodule_providers",{"_index":616,"title":{},"body":{"modules/InsightCardModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule",{"_index":670,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_exports",{"_index":671,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_s3filestoragemodule_providers",{"_index":672,"title":{},"body":{"modules/S3FileStorageModule.html":{},"overview.html":{}}}],["cluster_usercardmodule",{"_index":761,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["cluster_usercardmodule_imports",{"_index":762,"title":{},"body":{"modules/UserCardModule.html":{}}}],["cluster_usercardmodule_providers",{"_index":763,"title":{},"body":{"modules/UserCardModule.html":{},"overview.html":{}}}],["code",{"_index":477,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["code.tolowercase",{"_index":1425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["codename",{"_index":1398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["color",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["colorize",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["colors",{"_index":1005,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["colors.util",{"_index":34,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":1262,"title":{},"body":{"index.html":{}}}],["commitpat",{"_index":1627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commits",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["committing",{"_index":1267,"title":{},"body":{"index.html":{}}}],["community",{"_index":1288,"title":{},"body":{"index.html":{}}}],["company",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["companyhtml",{"_index":1588,"title":{},"body":{"miscellaneous/variables.html":{}}}],["complete",{"_index":1279,"title":{},"body":{"index.html":{}}}],["component",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["concatenation",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["concept",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":1334,"title":{},"body":{"license.html":{}}}],["config",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config.accesskeyid",{"_index":720,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.get(\"api.logging",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["config.protocol}://${config.region}.${config.endpoint",{"_index":714,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config.secretaccesskey",{"_index":722,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["config/api.config",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["config/digital",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["config/github.config",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{}}}],["configmodule",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["configs",{"_index":1216,"title":{},"body":{"index.html":{}}}],["configservice",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["configtype",{"_index":167,"title":{},"body":{"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["configuration",{"_index":929,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["configured",{"_index":1251,"title":{},"body":{"index.html":{}}}],["connected",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":1365,"title":{},"body":{"license.html":{}}}],["const",{"_index":200,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":165,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["constructor(config",{"_index":683,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["constructor(githubconfig",{"_index":166,"title":{},"body":{"injectables/GithubService.html":{}}}],["constructor(httpservice",{"_index":536,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/UserCardService.html":{}}}],["container",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["content",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["contenttype",{"_index":693,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["context",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["continuous",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["contract",{"_index":1361,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1283,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":1281,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":979,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["contributor",{"_index":1637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributors",{"_index":570,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["contributors.map",{"_index":1636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contributors.ts",{"_index":1132,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contributorsreq",{"_index":593,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsreq.data.data",{"_index":597,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsres",{"_index":596,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["contributorsres.map",{"_index":598,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["controller",{"_index":220,"title":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["controller(\"health",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller(\"highlights",{"_index":339,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["controller(\"insights",{"_index":562,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["controller(\"users",{"_index":752,"title":{},"body":{"controllers/UserCardController.html":{}}}],["controllers",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["conversation",{"_index":1290,"title":{},"body":{"index.html":{}}}],["copies",{"_index":1329,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1187,"title":{},"body":{"index.html":{},"license.html":{}}}],["copyright",{"_index":1308,"title":{},"body":{"license.html":{}}}],["correct",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["correctly",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["cost",{"_index":215,"title":{},"body":{"injectables/GithubService.html":{}}}],["count",{"_index":516,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{}}}],["couple",{"_index":1271,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":1099,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created_at",{"_index":98,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"miscellaneous/variables.html":{}}}],["createdat",{"_index":1589,"title":{},"body":{"miscellaneous/variables.html":{}}}],["credentials",{"_index":718,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["curr",{"_index":422,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["custom",{"_index":927,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["customprops",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["d4f854d",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["d84015b",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["d='m6.73649",{"_index":1450,"title":{},"body":{"miscellaneous/variables.html":{}}}],["damages",{"_index":1357,"title":{},"body":{"license.html":{}}}],["dark",{"_index":954,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":472,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["data:image/svg+xml,%3csvg",{"_index":1441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data:image/svg+xml;base64,${btoa(await",{"_index":488,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["database",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{}}}],["databaseid",{"_index":1564,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":202,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date((new",{"_index":204,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(string(repo?.pushedat",{"_index":638,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date(updated_at",{"_index":433,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["date).getdate",{"_index":665,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate((new",{"_index":664,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["date).setdate(today.getdate",{"_index":205,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["datesince",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datetime",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["days",{"_index":667,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["dbinsight",{"_index":92,"title":{"interfaces/DbInsight.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["dbreaction",{"_index":115,"title":{"interfaces/DbReaction.html":{}},"body":{"interfaces/DbReaction.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["dbrepo",{"_index":119,"title":{"interfaces/DbRepo.html":{}},"body":{"interfaces/DbRepo.html":{},"coverage.html":{}}}],["dbuserhighlight",{"_index":136,"title":{"interfaces/DbUserHighlight.html":{}},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["dbuserinsightrepo",{"_index":110,"title":{"interfaces/DbUserInsightRepo.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["dc9f3a4",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["dd096ca",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":1319,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1366,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":227,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["defauls",{"_index":1232,"title":{},"body":{"index.html":{}}}],["default",{"_index":182,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1247,"title":{},"body":{"index.html":{}}}],["defined",{"_index":168,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["deleted_at",{"_index":139,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["dependencies",{"_index":3,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{},"overview.html":{}}}],["deploy",{"_index":1083,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deployment",{"_index":907,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["deps",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":124,"title":{},"body":{"interfaces/DbRepo.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"properties.html":{}}}],["design",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["dev",{"_index":1191,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dev/usercards.ts",{"_index":1202,"title":{},"body":{"index.html":{}}}],["developing",{"_index":1197,"title":{},"body":{"index.html":{}}}],["development",{"_index":917,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["devit",{"_index":1236,"title":{},"body":{"index.html":{}}}],["differently",{"_index":1252,"title":{},"body":{"index.html":{}}}],["digital",{"_index":923,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["digitalocean",{"_index":1223,"title":{},"body":{"index.html":{}}}],["digitaloceanconfig",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["digitaloceanspaces.com",{"_index":1555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["direct",{"_index":448,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["direction",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":481,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["discord.find",{"_index":1291,"title":{},"body":{"index.html":{}}}],["disk",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["disk_percentage",{"_index":1417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_percentage=0.7",{"_index":1258,"title":{},"body":{"index.html":{}}}],["disk_size",{"_index":1420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disk_size=100",{"_index":1259,"title":{},"body":{"index.html":{}}}],["diskhealthindicator",{"_index":243,"title":{},"body":{"controllers/HealthController.html":{}}}],["display",{"_index":892,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["displayed",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["displayname",{"_index":1611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/local",{"_index":1204,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":1325,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["div",{"_index":1060,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["do_spaces_",{"_index":1229,"title":{},"body":{"index.html":{}}}],["do_spaces_access_key_id",{"_index":1225,"title":{},"body":{"index.html":{}}}],["do_spaces_bucket_name=opengraph",{"_index":1235,"title":{},"body":{"index.html":{}}}],["do_spaces_cdn_disabled=trueif",{"_index":1242,"title":{},"body":{"index.html":{}}}],["do_spaces_endpoint=digitaloceanspaces.com",{"_index":1233,"title":{},"body":{"index.html":{}}}],["do_spaces_region=sfo3",{"_index":1234,"title":{},"body":{"index.html":{}}}],["do_spaces_secret_access_key=*******************************************ping",{"_index":1226,"title":{},"body":{"index.html":{}}}],["do_spaces_subdomain=beta.opengraph",{"_index":1244,"title":{},"body":{"index.html":{}}}],["docker",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["docker>=20.10.23",{"_index":1182,"title":{},"body":{"index.html":{}}}],["document",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":834,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documented",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":1243,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["dot",{"_index":1373,"title":{},"body":{"properties.html":{}}}],["double",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["downgrade",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["draft_prs_count",{"_index":125,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["dry",{"_index":1274,"title":{},"body":{"index.html":{}}}],["during",{"_index":1241,"title":{},"body":{"index.html":{}}}],["dynamic",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["e152d09",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["e81f5c1",{"_index":1059,"title":{},"body":{"changelog.html":{}}}],["e91c43f",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["earlier",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["east",{"_index":716,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["edge",{"_index":428,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["edge.node",{"_index":429,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge.size",{"_index":430,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edge?.node.id",{"_index":641,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["edges",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["email",{"_index":1590,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emoji",{"_index":479,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["emoji_id",{"_index":117,"title":{},"body":{"interfaces/DbReaction.html":{}}}],["emojicache",{"_index":1146,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["encourage",{"_index":1282,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":713,"title":{},"body":{"injectables/S3FileStorageService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoints'})@healthcheck()@apiokresponse",{"_index":233,"title":{},"body":{"controllers/HealthController.html":{}}}],["engineer",{"_index":1214,"title":{},"body":{"index.html":{}}}],["engines",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["env.example",{"_index":1212,"title":{},"body":{"index.html":{}}}],["environment",{"_index":964,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["environments",{"_index":914,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["error",{"_index":729,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["error.name",{"_index":731,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["errors",{"_index":941,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eslint",{"_index":480,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["eslint/no",{"_index":485,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["etl",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":1352,"title":{},"body":{"license.html":{}}}],["exceeded",{"_index":345,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["exceeded'})@apibadrequestresponse({description",{"_index":323,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["exceeded'})@redirect",{"_index":750,"title":{},"body":{"controllers/UserCardController.html":{}}}],["except",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["exclude",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["exists",{"_index":519,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["explanation",{"_index":1218,"title":{},"body":{"index.html":{}}}],["export",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["exports",{"_index":152,"title":{},"body":{"modules/GithubModule.html":{},"modules/S3FileStorageModule.html":{}}}],["express",{"_index":1343,"title":{},"body":{"license.html":{}}}],["extend",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extraneous",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["extrenaous",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["f1f5947",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["f761ac8",{"_index":1098,"title":{},"body":{"changelog.html":{}}}],["f7db713",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":527,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fastify",{"_index":336,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["fastifyreply",{"_index":291,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["fc9211c",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["fe44711",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":1066,"title":{},"body":{"changelog.html":{}}}],["few",{"_index":1192,"title":{},"body":{"index.html":{}}}],["ff5f13",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["field",{"_index":1568,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["filecontent",{"_index":695,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists",{"_index":679,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["fileexists(hash",{"_index":685,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["files",{"_index":1318,"title":{},"body":{"license.html":{}}}],["fileurl",{"_index":356,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fill",{"_index":1447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='%2324292f'/%3e%3c/svg%3e",{"_index":1548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill='none",{"_index":1445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter(boolean",{"_index":655,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["filter(repo",{"_index":652,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["filteredlangs",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filteredlangs.length",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1211,"title":{},"body":{"index.html":{}}}],["first",{"_index":1566,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firstvaluefrom",{"_index":385,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["fitness",{"_index":1348,"title":{},"body":{"license.html":{}}}],["fix",{"_index":855,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["fixes",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["flex",{"_index":1061,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["fluent",{"_index":1432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fluentflat",{"_index":1436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":1209,"title":{},"body":{"index.html":{}}}],["following",{"_index":1175,"title":{},"body":{"index.html":{},"license.html":{}}}],["font",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["fonts",{"_index":406,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["footer.ts",{"_index":1126,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forbiddenexception",{"_index":377,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["forcepathstyle",{"_index":712,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["formatit",{"_index":1265,"title":{},"body":{"index.html":{}}}],["formattedname",{"_index":631,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["found",{"_index":308,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{}}}],["found'})@apiforbiddenresponse({description",{"_index":321,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["free",{"_index":1313,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["fs",{"_index":383,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["fs.readfile(\"node_modules/@fontsource/inter/files/inter",{"_index":437,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["full",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["full_name",{"_index":114,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["function",{"_index":1118,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1040,"title":{"miscellaneous/functions.html":{}},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["furnished",{"_index":1332,"title":{},"body":{"license.html":{}}}],["gaps",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":1374,"title":{},"body":{"properties.html":{}}}],["generate",{"_index":1056,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generatecardbuffer",{"_index":450,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["generatecardbuffer(highlightid",{"_index":540,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["generatecardbuffer(insightid",{"_index":619,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["generatecardbuffer(username",{"_index":766,"title":{},"body":{"injectables/UserCardService.html":{}}}],["generated",{"_index":1300,"title":{},"body":{"index.html":{}}}],["generatehighlightsocialcard",{"_index":288,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generatehighlightsocialcard(id",{"_index":313,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["generateinsightsocialcard",{"_index":552,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["generateinsightsocialcard(id",{"_index":557,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["generates",{"_index":315,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{}}}],["generateusersocialcard",{"_index":742,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generateusersocialcard(username",{"_index":748,"title":{},"body":{"controllers/UserCardController.html":{}}}],["generating",{"_index":815,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["generation",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["generator",{"_index":1162,"title":{},"body":{"index.html":{},"properties.html":{}}}],["get(\"/:id",{"_index":342,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get(\"/:id/metadata",{"_index":351,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get(\"/:username",{"_index":754,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/:username/metadata",{"_index":760,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get(\"/service",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["get(\"/web",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/:id')@apioperation({operationid",{"_index":314,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get('/:id/metadata')@apioperation({operationid",{"_index":292,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["get('/:username')@apioperation({operationid",{"_index":749,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/:username/metadata')@apioperation({operationid",{"_index":744,"title":{},"body":{"controllers/UserCardController.html":{}}}],["get('/service')@apioperation({operationid",{"_index":228,"title":{},"body":{"controllers/HealthController.html":{}}}],["get('/web')@apioperation({operationid",{"_index":235,"title":{},"body":{"controllers/HealthController.html":{}}}],["getcdnendpoint",{"_index":676,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified",{"_index":680,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilelastmodified(hash",{"_index":687,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta",{"_index":681,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfilemeta(hash",{"_index":689,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getfonts",{"_index":434,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["getgetinsightcard",{"_index":613,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["getgetinsightcard(id",{"_index":621,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["gethighlightcard",{"_index":528,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightcard(id",{"_index":544,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightdata",{"_index":408,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["gethighlightdata(highlightid",{"_index":546,"title":{},"body":{"injectables/HighlightCardService.html":{}}}],["gethighlightsocialcardmetadata",{"_index":293,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["geticoncode",{"_index":402,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["geticoncode(char",{"_index":1156,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geticoncode(segment",{"_index":490,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["getinsightdata",{"_index":579,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["getinsightdata(insightid",{"_index":623,"title":{},"body":{"injectables/InsightCardService.html":{}}}],["getinsightsocialcardmetadata",{"_index":554,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["getoriginendpoint",{"_index":677,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["getrepo",{"_index":162,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getrepo(owner",{"_index":171,"title":{},"body":{"injectables/GithubService.html":{}}}],["gets",{"_index":294,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["getting",{"_index":772,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["getuser",{"_index":163,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getuser(username",{"_index":177,"title":{},"body":{"injectables/GithubService.html":{}}}],["getusercard",{"_index":669,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getusercard(username",{"_index":768,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getuserdata",{"_index":633,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["getuserdata(username",{"_index":770,"title":{},"body":{"injectables/UserCardService.html":{}}}],["getusersocialcardmetadata",{"_index":745,"title":{},"body":{"controllers/UserCardController.html":{}}}],["gfonts",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["git+https://github.com/open",{"_index":1381,"title":{},"body":{"properties.html":{}}}],["github",{"_index":905,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github.service",{"_index":153,"title":{},"body":{"modules/GithubModule.html":{}}}],["github/entities/db",{"_index":398,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["github/github.module",{"_index":534,"title":{},"body":{"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["github/github.service",{"_index":387,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["github_pat_user=ghp_",{"_index":1222,"title":{},"body":{"index.html":{}}}],["githubconfig",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubconfig.userpat",{"_index":199,"title":{},"body":{"injectables/GithubService.html":{}}}],["githubmodule",{"_index":146,"title":{"modules/GithubModule.html":{}},"body":{"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["githubservice",{"_index":150,"title":{"injectables/GithubService.html":{}},"body":{"modules/GithubModule.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["global",{"_index":1062,"title":{},"body":{"changelog.html":{}}}],["go",{"_index":1196,"title":{},"body":{"index.html":{}}}],["goes",{"_index":1205,"title":{},"body":{"index.html":{}}}],["gql/get",{"_index":191,"title":{},"body":{"injectables/GithubService.html":{}}}],["gradient",{"_index":1676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient(var",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grammar",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["granted",{"_index":1312,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1369,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":187,"title":{},"body":{"injectables/GithubService.html":{},"changelog.html":{}}}],["graphql.defaults",{"_index":195,"title":{},"body":{"injectables/GithubService.html":{}}}],["graphqlwithauth",{"_index":158,"title":{},"body":{"injectables/GithubService.html":{}}}],["grass",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guide",{"_index":1285,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":1286,"title":{},"body":{"index.html":{}}}],["handler",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["handling",{"_index":1089,"title":{},"body":{"changelog.html":{}}}],["hasfile",{"_index":357,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hash",{"_index":502,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["hassponsorslisting",{"_index":1591,"title":{},"body":{"miscellaneous/variables.html":{}}}],["having",{"_index":1194,"title":{},"body":{"index.html":{}}}],["head",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["header",{"_index":326,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["header(\"content",{"_index":343,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["headers",{"_index":196,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["headobjectcommand",{"_index":699,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["health",{"_index":224,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":282,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":241,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":238,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":221,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":280,"title":{"modules/HealthModule.html":{}},"body":{"modules/HealthModule.html":{},"modules.html":{}}}],["healthstatusservice",{"_index":229,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthstatusweb",{"_index":236,"title":{},"body":{"controllers/HealthController.html":{}}}],["hearticondata",{"_index":1128,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":469,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["height='24",{"_index":1443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["here",{"_index":1231,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":1311,"title":{},"body":{"license.html":{}}}],["highlight",{"_index":140,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["highlight.data",{"_index":416,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlight.entity",{"_index":399,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlight.entity.ts",{"_index":138,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"coverage.html":{}}}],["highlightcardcontroller",{"_index":283,"title":{"controllers/HighlightCardController.html":{}},"body":{"controllers/HighlightCardController.html":{},"modules/HighlightCardModule.html":{},"coverage.html":{}}}],["highlightcarddata",{"_index":370,"title":{"interfaces/HighlightCardData.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{}}}],["highlightcardmodule",{"_index":6,"title":{"modules/HighlightCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules.html":{},"overview.html":{}}}],["highlightcardservice",{"_index":337,"title":{"injectables/HighlightCardService.html":{}},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"overview.html":{}}}],["highlightcardtemplate",{"_index":395,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["highlightcardtemplate(avatarurl",{"_index":458,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightdata",{"_index":451,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightid",{"_index":409,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreactions",{"_index":414,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreactions.data.reduce((acc",{"_index":421,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlightreq",{"_index":410,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["highlights",{"_index":286,"title":{},"body":{"controllers/HighlightCardController.html":{},"changelog.html":{}}}],["highlights/${string(id)}.png",{"_index":503,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["higlight",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1354,"title":{},"body":{"license.html":{}}}],["homepage",{"_index":1376,"title":{},"body":{"properties.html":{}}}],["host",{"_index":1403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host_id",{"_index":126,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["hsl(116",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(120",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(121",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(122",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(124",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(126",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(130",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(131",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(132",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(133",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(134",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(135",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(136",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(137",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(146",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(15",{"_index":1769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(19",{"_index":1684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(195",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(197",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(198",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(199",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(200",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(201",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(203",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(205",{"_index":1708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(206",{"_index":1687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(207",{"_index":1704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(208",{"_index":1698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(209",{"_index":1693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(210",{"_index":1690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(211",{"_index":1784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(212",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(213",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(214",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(216",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(23",{"_index":1681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(24",{"_index":1754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(25",{"_index":1758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(26",{"_index":1678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(28",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(30",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(33",{"_index":1683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(351",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(353",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(354",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(356",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(357",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(358",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(359",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsl(360",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(0",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(181",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(182",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(19",{"_index":1674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(200",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(202",{"_index":1751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(204",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(205",{"_index":1739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(206",{"_index":1733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(207",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(208",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(209",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(210",{"_index":1719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(211",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hsla(216",{"_index":1730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["html",{"_index":452,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["html(insightcardtemplate(pagename",{"_index":607,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["http",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{}}}],["httphealthindicator",{"_index":239,"title":{},"body":{"controllers/HealthController.html":{}}}],["httpmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["https",{"_index":1065,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/gh/shuding/fluentui",{"_index":1433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/gh/svgmoji/svgmoji/packages/svgmoji__noto/svg",{"_index":1431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/npm/@svgmoji/blob@2.0.0/svg",{"_index":1429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cdn.jsdelivr.net/npm/@svgmoji/openmoji@2.0.0/svg",{"_index":1427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://cdnjs.cloudflare.com/ajax/libs/twemoji/14.0.2/svg",{"_index":1424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://github.com/${login}.png?size=150",{"_index":431,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["https://github.com/open",{"_index":1377,"title":{},"body":{"properties.html":{}}}],["https://unpkg.com/twemoji@13.1.0/dist/twemoji.esm.js",{"_index":1439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.github.com/${author_login}.png?size=50",{"_index":600,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["https://www.github.com/${owner}.png?size=50",{"_index":604,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["httpservice",{"_index":379,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["httpstatus",{"_index":327,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.bad_request",{"_index":355,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["httpstatus.no_content",{"_index":352,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_found",{"_index":354,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["httpstatus.not_modified",{"_index":353,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["icon",{"_index":975,"title":{},"body":{"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":99,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["id'})@apinocontentresponse({description",{"_index":300,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["id'})@header('content",{"_index":317,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["id'})@redirect",{"_index":324,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["identifier",{"_index":1100,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["image",{"_index":301,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["image'})@apinotfoundresponse({description",{"_index":320,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png",{"_index":344,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["image/png')@apiokresponse({type",{"_index":318,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["images",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["img",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["implement",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1344,"title":{},"body":{"license.html":{}}}],["import",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori",{"_index":453,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["import(\"satori\")).default",{"_index":455,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["imports",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["improve",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1338,"title":{},"body":{"license.html":{}}}],["including",{"_index":1280,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":96,"title":{"index.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"injectables/S3FileStorageService.html":{}}}],["inject(digitaloceanconfig.key",{"_index":710,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["inject(githubconfig.key",{"_index":193,"title":{},"body":{"injectables/GithubService.html":{}}}],["injectable",{"_index":154,"title":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["injectables",{"_index":155,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"overview.html":{}}}],["input",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insertion",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":1200,"title":{},"body":{"index.html":{}}}],["insight",{"_index":555,"title":{},"body":{"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"index.html":{}}}],["insight.entity",{"_index":573,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insight.entity.ts",{"_index":95,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["insight_id",{"_index":112,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["insightcardcontroller",{"_index":549,"title":{"controllers/InsightCardController.html":{}},"body":{"controllers/InsightCardController.html":{},"modules/InsightCardModule.html":{},"coverage.html":{}}}],["insightcarddata",{"_index":569,"title":{"interfaces/InsightCardData.html":{}},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{}}}],["insightcardmodule",{"_index":8,"title":{"modules/InsightCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/InsightCardModule.html":{},"modules.html":{},"overview.html":{}}}],["insightcardservice",{"_index":561,"title":{"injectables/InsightCardService.html":{}},"body":{"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"overview.html":{}}}],["insightcardtemplate",{"_index":574,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightcontributors",{"_index":578,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightcontributors(contributors",{"_index":608,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightdata",{"_index":605,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightfooter",{"_index":1133,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightfooter(contributors",{"_index":1634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["insightid",{"_index":580,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightpagereq",{"_index":583,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightpagereq.data",{"_index":585,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insightrepos",{"_index":576,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["insightrepos(repos",{"_index":609,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["insights",{"_index":550,"title":{},"body":{"controllers/InsightCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["insights/${string(id)}.png",{"_index":611,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["install",{"_index":1183,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1178,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":730,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["instead",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":471,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["interarraybuffer",{"_index":462,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["interarraybuffermedium",{"_index":463,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["interarraybuffermediumreq",{"_index":440,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["interarraybufferreq",{"_index":436,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["interface",{"_index":91,"title":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"interfaces/InsightCardData.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":93,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"interfaces/InsightCardData.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"overview.html":{}}}],["invalid",{"_index":310,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["is_favorite",{"_index":100,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["is_public",{"_index":101,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["isbountyhunter",{"_index":1592,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iscampusexpert",{"_index":1593,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isdeveloperprogrammember",{"_index":1594,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemployee",{"_index":1595,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isgithubstar",{"_index":1596,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["ishireable",{"_index":1597,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isprivate",{"_index":1621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issiteadmin",{"_index":1598,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issue",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":127,"title":{},"body":{"interfaces/DbRepo.html":{},"changelog.html":{}}}],["join",{"_index":592,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"index.html":{}}}],["join(joinliteral",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joinliteral",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":382,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["json.stringify(ratelimit",{"_index":219,"title":{},"body":{"injectables/GithubService.html":{}}}],["key",{"_index":727,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["keys",{"_index":1228,"title":{},"body":{"index.html":{}}}],["keywords",{"_index":1375,"title":{},"body":{"properties.html":{}}}],["kind",{"_index":1342,"title":{},"body":{"license.html":{}}}],["langlist",{"_index":426,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["langrepos",{"_index":636,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langrepos.map(repo",{"_index":639,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs",{"_index":374,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["langs.filter",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["langs.ts",{"_index":1139,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["langs[edge.node.id",{"_index":643,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langs[edge.node.id].size",{"_index":644,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["langtotal",{"_index":375,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["language",{"_index":128,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages",{"_index":866,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["languages(first",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":364,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["lastmodified",{"_index":359,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified.toisostring",{"_index":520,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["lastmodified?.toisostring",{"_index":366,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["lastmodifiedreq",{"_index":507,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["latest",{"_index":295,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["layout",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["less",{"_index":666,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{}}}],["level",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["levelfirst",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["liability",{"_index":1358,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1355,"title":{},"body":{"license.html":{}}}],["license",{"_index":1306,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["light",{"_index":1685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limit",{"_index":214,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["limit).join",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["limitation",{"_index":1321,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1345,"title":{},"body":{"license.html":{}}}],["line",{"_index":483,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["link",{"_index":558,"title":{},"body":{"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["lins",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["linting",{"_index":1260,"title":{},"body":{"index.html":{}}}],["lintthis",{"_index":1263,"title":{},"body":{"index.html":{}}}],["literal",{"_index":572,"title":{},"body":{"interfaces/InsightCardData.html":{}}}],["little",{"_index":1217,"title":{},"body":{"index.html":{}}}],["live",{"_index":903,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["load",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["loadadditionalasset",{"_index":476,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["loademoji",{"_index":403,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["loademoji(\"twemoji",{"_index":489,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["loademoji(type",{"_index":1158,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loading",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["local",{"_index":446,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["locally",{"_index":837,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["location",{"_index":367,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":159,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["logger(githubservice.name",{"_index":185,"title":{},"body":{"injectables/GithubService.html":{}}}],["logger(this.constructor.name",{"_index":405,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["loggermodule",{"_index":29,"title":{},"body":{"modules/AppModule.html":{}}}],["loggermodule.forrootasync",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":1400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":141,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["logo",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["lowercase",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["machines",{"_index":1179,"title":{},"body":{"index.html":{}}}],["main",{"_index":1164,"title":{},"body":{"index.html":{}}}],["make",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["manual",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(repo",{"_index":590,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["matching",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxrepoqueryidslenght",{"_index":581,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["media",{"_index":1654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{}}}],["memory_heap",{"_index":1410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_heap=200",{"_index":1256,"title":{},"body":{"index.html":{}}}],["memory_rss",{"_index":1414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory_rss=3000",{"_index":1257,"title":{},"body":{"index.html":{}}}],["memoryhealthindicator",{"_index":242,"title":{},"body":{"controllers/HealthController.html":{}}}],["merchantability",{"_index":1347,"title":{},"body":{"license.html":{}}}],["merge",{"_index":849,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["merged_prs_count",{"_index":129,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["message",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["messageformat",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":363,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["metadata",{"_index":299,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{}}}],["metadata?.[\"reactions",{"_index":515,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["metadatareq",{"_index":510,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["method",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":160,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["min",{"_index":1655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1153,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1273,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1307,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["modified",{"_index":365,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1323,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"changelog.html":{}}}],["moduleresolution",{"_index":1092,"title":{},"body":{"changelog.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HealthModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["mohamed",{"_index":1385,"title":{},"body":{"properties.html":{}}}],["monthlyestimatedsponsorsincomeincents",{"_index":1599,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mostly",{"_index":1219,"title":{},"body":{"index.html":{}}}],["move",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["name.length",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.substring(0",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["name.ts",{"_index":1136,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["named",{"_index":1215,"title":{},"body":{"index.html":{}}}],["namewithowner",{"_index":1565,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":1174,"title":{},"body":{"index.html":{}}}],["needs",{"_index":305,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["needsupdate",{"_index":358,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["nestjs",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/axios",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{}}}],["nestjs/common/utils/cli",{"_index":33,"title":{},"body":{"modules/AppModule.html":{}}}],["nestjs/config",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/S3FileStorageService.html":{}}}],["nestjs/swagger",{"_index":247,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["nestjs/terminus",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{}}}],["new",{"_index":184,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{}}}],["newer",{"_index":521,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["next",{"_index":482,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"index.html":{}}}],["nextjs",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["node",{"_index":1073,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["node16",{"_index":1093,"title":{},"body":{"changelog.html":{}}}],["node:fs/promises",{"_index":384,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["node:stream",{"_index":703,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["node>=18.15.0",{"_index":1180,"title":{},"body":{"index.html":{}}}],["nodes",{"_index":1609,"title":{},"body":{"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":1351,"title":{},"body":{"license.html":{}}}],["normal",{"_index":475,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["normal.woff",{"_index":439,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notable",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["notfound",{"_index":732,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["notfoundexception",{"_index":378,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["notice",{"_index":1336,"title":{},"body":{"license.html":{}}}],["noto",{"_index":1430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":1184,"title":{},"body":{"index.html":{}}}],["npm>=9.6.3",{"_index":1181,"title":{},"body":{"index.html":{}}}],["null",{"_index":145,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["number",{"_index":108,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["number(curr.reaction_count",{"_index":424,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["number(parsefloat(process.env.disk_percengate",{"_index":1418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.disk_size",{"_index":1421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_heap",{"_index":1411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(parseint(process.env.memory_rss",{"_index":1415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":1422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.keys(langs).includes(edge.node.id",{"_index":642,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["obtaining",{"_index":1316,"title":{},"body":{"license.html":{}}}],["ocean",{"_index":924,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ocean.app",{"_index":1166,"title":{},"body":{"index.html":{}}}],["ocean.config",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/S3FileStorageService.html":{}}}],["ocean.config.ts",{"_index":1106,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["octo",{"_index":1301,"title":{},"body":{"index.html":{}}}],["octokit",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["octokit/graphql",{"_index":188,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["one",{"_index":564,"title":{},"body":{"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["one'})@header('content",{"_index":559,"title":{},"body":{"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["opacity",{"_index":1718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":231,"title":{},"body":{"controllers/HealthController.html":{},"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["open_prs_count",{"_index":130,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["opengraph",{"_index":1161,"title":{},"body":{"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["opengraph.opensauced",{"_index":1167,"title":{},"body":{"index.html":{}}}],["opengraph.opensauced.pizza",{"_index":1408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opengraph@digital",{"_index":1165,"title":{},"body":{"index.html":{}}}],["opening",{"_index":1268,"title":{},"body":{"index.html":{}}}],["openmoji",{"_index":1426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opensauced",{"_index":1629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["operationid",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["optimize",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":121,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["options",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["orange",{"_index":1673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1172,"title":{},"body":{"index.html":{}}}],["orderby",{"_index":1567,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organization(login",{"_index":1605,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizations(first",{"_index":1607,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organizationverifieddomainemails",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["os.${string(config.get(\"api.codename\")).tolowercase",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["otherwise",{"_index":1363,"title":{},"body":{"license.html":{}}}],["out",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1208,"title":{},"body":{"index.html":{}}}],["outputs",{"_index":1203,"title":{},"body":{"index.html":{}}}],["overflowing",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1371,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overviews",{"_index":1293,"title":{},"body":{"index.html":{}}}],["owner",{"_index":174,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":1006,"title":{"properties.html":{}},"body":{"changelog.html":{}}}],["package.json",{"_index":1276,"title":{},"body":{"index.html":{}}}],["pagename",{"_index":571,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["paginate",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":328,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["param(\"id",{"_index":346,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["param(\"username",{"_index":755,"title":{},"body":{"controllers/UserCardController.html":{}}}],["parameters",{"_index":170,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{}}}],["parseintpipe",{"_index":329,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["partial",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":1349,"title":{},"body":{"license.html":{}}}],["passthrough",{"_index":347,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["path",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"changelog.html":{},"index.html":{}}}],["performance",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1310,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1330,"title":{},"body":{"license.html":{}}}],["person",{"_index":1315,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1331,"title":{},"body":{"license.html":{}}}],["pid,hostname,context",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["pinned",{"_index":142,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["pinneditems",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pino",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["pinohttp",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["please",{"_index":1284,"title":{},"body":{"index.html":{}}}],["png",{"_index":348,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata",{"_index":498,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["pngdata.aspng",{"_index":500,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["port",{"_index":1188,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1340,"title":{},"body":{"license.html":{}}}],["pr's",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["pr_active_count",{"_index":131,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["pr_velocity_count",{"_index":132,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["prefix",{"_index":223,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["prerequisites",{"_index":1171,"title":{},"body":{"index.html":{}}}],["pretty",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["primarylanguage",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":157,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["proceed",{"_index":1287,"title":{},"body":{"index.html":{}}}],["process.env.api_base_url!}/v2/contributors/search?${string(query",{"_index":595,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["process.env.ci",{"_index":1409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.do_spaces_cdn_disabled",{"_index":1563,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":1401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1163,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["profile",{"_index":627,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":778,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["promise",{"_index":180,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["promise.all([highlightreq",{"_index":415,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["promise.all([interarraybufferreq",{"_index":443,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["promise.all([lastmodifiedreq",{"_index":512,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["pronouns",{"_index":1600,"title":{},"body":{"miscellaneous/variables.html":{}}}],["proof",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":97,"title":{"properties.html":{}},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"properties.html":{}}}],["protocol",{"_index":1552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":316,"title":{},"body":{"controllers/HighlightCardController.html":{},"license.html":{}}}],["provider",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{}}}],["prpat",{"_index":1625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":444,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["publish",{"_index":1324,"title":{},"body":{"license.html":{}}}],["pull",{"_index":1269,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1350,"title":{},"body":{"license.html":{},"properties.html":{}}}],["pushed_at",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pushedat",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["putobjectcommand",{"_index":700,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["quality",{"_index":1261,"title":{},"body":{"index.html":{}}}],["query",{"_index":207,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["query.set",{"_index":587,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["questions",{"_index":1289,"title":{},"body":{"index.html":{}}}],["radial",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rate",{"_index":322,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["ratelimit",{"_index":164,"title":{},"body":{"injectables/GithubService.html":{}}}],["reaction",{"_index":523,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["reaction.entity",{"_index":400,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["reaction.entity.ts",{"_index":116,"title":{},"body":{"interfaces/DbReaction.html":{},"coverage.html":{}}}],["reaction_count",{"_index":118,"title":{},"body":{"interfaces/DbReaction.html":{}}}],["reactions",{"_index":376,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["reactionsreq",{"_index":412,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["read",{"_index":738,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readable",{"_index":692,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["readme",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["readonly",{"_index":111,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["realpercent",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["record",{"_index":634,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["red",{"_index":1787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":330,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["redirecting",{"_index":525,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["refactoring",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["regeneration",{"_index":306,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["region",{"_index":715,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["registeras(\"api",{"_index":1397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"digitalocean",{"_index":1549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registeras(\"github",{"_index":1622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["release",{"_index":904,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["remaining",{"_index":216,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["remove",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["repalce",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["repo",{"_index":172,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["repo.full_name.split",{"_index":603,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repo.languages?.edges?.flatmap(edge",{"_index":427,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.languages?.edges?.map(edge",{"_index":640,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo.languages?.totalsize",{"_index":432,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["repo.repo_id",{"_index":591,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repo.ts",{"_index":1115,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repo?.isprivate",{"_index":653,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo?.owner.login",{"_index":654,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["repo_id",{"_index":113,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["repoiconwithname",{"_index":1137,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repoids",{"_index":588,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repolist",{"_index":1635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.length",{"_index":1640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repolist.slice(0",{"_index":1638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponame",{"_index":417,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"miscellaneous/variables.html":{}}}],["reponame.length",{"_index":1646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reponame.substring(0",{"_index":1644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos",{"_index":102,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["repos.entity.ts",{"_index":120,"title":{},"body":{"interfaces/DbRepo.html":{},"coverage.html":{}}}],["repos.length",{"_index":1642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.map",{"_index":1643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repos.map(repo",{"_index":602,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["repos.ts",{"_index":1134,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["repositories",{"_index":601,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"changelog.html":{}}}],["repositories(first",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositoriescontributedto",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":189,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["representation",{"_index":1299,"title":{},"body":{"index.html":{}}}],["request",{"_index":1270,"title":{},"body":{"index.html":{}}}],["requestmethod",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":1082,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["requiresupdatemeta",{"_index":401,"title":{"interfaces/RequiresUpdateMeta.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["res",{"_index":290,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(fileurl",{"_index":566,"title":{},"body":{"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.found).redirect(url",{"_index":568,"title":{},"body":{"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["res.status(httpstatus.ok).send(png",{"_index":350,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["reset",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}],["resetat",{"_index":217,"title":{},"body":{"injectables/GithubService.html":{}}}],["resourcepath",{"_index":1601,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":734,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.lastmodified",{"_index":735,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["response.metadata",{"_index":736,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["restriction",{"_index":1320,"title":{},"body":{"license.html":{}}}],["results",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["resvg",{"_index":380,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg(svg",{"_index":492,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg.render",{"_index":499,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["resvg/resvg",{"_index":381,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["return",{"_index":212,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":175,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"injectables/UserCardService.html":{}}}],["returnval",{"_index":506,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.lastmodified",{"_index":513,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["returnval.needsupdate",{"_index":526,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["reverse",{"_index":1213,"title":{},"body":{"index.html":{}}}],["rewrite",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["rewrites",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["rgba(0",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(17",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(181",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(237",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgba(238",{"_index":494,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["rights",{"_index":1322,"title":{},"body":{"license.html":{}}}],["roboto",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["rolled",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["rule='evenodd",{"_index":1448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1173,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":386,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["s3",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{}}}],["s3client",{"_index":678,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["s3filestoragemodule",{"_index":9,"title":{"modules/S3FileStorageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["s3filestorageservice",{"_index":388,"title":{"injectables/S3FileStorageService.html":{}},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["same",{"_index":524,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"index.html":{}}}],["sanitizedusername",{"_index":756,"title":{},"body":{"controllers/UserCardController.html":{}}}],["satori",{"_index":454,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["satori(template",{"_index":466,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["sauced",{"_index":232,"title":{},"body":{"controllers/HealthController.html":{},"index.html":{},"license.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["sauced/maintainers",{"_index":1227,"title":{},"body":{"index.html":{}}}],["sauced/opengraph",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["sauced/opengraph.opensauced.pizza#readme",{"_index":1378,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza.git",{"_index":1382,"title":{},"body":{"properties.html":{}}}],["sauced/opengraph.opensauced.pizza/issues",{"_index":1380,"title":{},"body":{"properties.html":{}}}],["savedreactions",{"_index":514,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["schema",{"_index":190,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["screens",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scripts",{"_index":447,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["sdk",{"_index":921,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sdk/client",{"_index":702,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["secretaccesskey",{"_index":721,"title":{},"body":{"injectables/S3FileStorageService.html":{},"miscellaneous/variables.html":{}}}],["segment",{"_index":478,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["sell",{"_index":1328,"title":{},"body":{"license.html":{}}}],["send",{"_index":369,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["sensibly",{"_index":1230,"title":{},"body":{"index.html":{}}}],["server",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":225,"title":{},"body":{"controllers/HealthController.html":{}}}],["set",{"_index":1091,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["setup.ts",{"_index":1129,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sfo3",{"_index":1557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":1337,"title":{},"body":{"license.html":{}}}],["short_code",{"_index":103,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["singleline",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["size",{"_index":133,"title":{},"body":{"interfaces/DbRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["sizing",{"_index":966,"title":{},"body":{"changelog.html":{}}}],["slate",{"_index":1686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice(0",{"_index":589,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["social",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["socialaccounts(first",{"_index":1610,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":1176,"title":{},"body":{"index.html":{},"license.html":{}}}],["sometimes",{"_index":1249,"title":{},"body":{"index.html":{}}}],["source",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"modules/GithubModule.html":{},"injectables/GithubService.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["spaces",{"_index":925,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["spacing",{"_index":1661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spam_prs_count",{"_index":134,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["spec",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["split",{"_index":419,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["splitting",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["sponsors",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api.config.ts",{"_index":1387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../card",{"_index":1388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../digital",{"_index":1389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":1390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.config.ts",{"_index":1391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../highlight",{"_index":1392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../insight",{"_index":1393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1154,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repo",{"_index":1394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../tailwind.config.ts",{"_index":1395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../twemoji.ts",{"_index":1155,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":1396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":17,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/api.config.ts",{"_index":1102,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/digital",{"_index":1105,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/github.config.ts",{"_index":1107,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/github/entities/db",{"_index":94,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"coverage.html":{}}}],["src/github/github.module.ts",{"_index":151,"title":{},"body":{"modules/GithubModule.html":{}}}],["src/github/github.service.ts",{"_index":156,"title":{},"body":{"injectables/GithubService.html":{},"coverage.html":{}}}],["src/github/github.service.ts:12",{"_index":186,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:13",{"_index":169,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:22",{"_index":178,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:33",{"_index":173,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/github.service.ts:41",{"_index":181,"title":{},"body":{"injectables/GithubService.html":{}}}],["src/github/gql/get",{"_index":1114,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/health/health.controller.ts",{"_index":222,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/health/health.controller.ts:32",{"_index":234,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.controller.ts:55",{"_index":237,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/health/health.module.ts",{"_index":281,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/main.ts",{"_index":1117,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/s3",{"_index":673,"title":{},"body":{"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["src/social",{"_index":284,"title":{},"body":{"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/twemoji.ts",{"_index":1143,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["starredrepositories",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stars",{"_index":135,"title":{},"body":{"interfaces/DbRepo.html":{}}}],["start",{"_index":1186,"title":{},"body":{"index.html":{}}}],["start:devlocal",{"_index":1190,"title":{},"body":{"index.html":{}}}],["started",{"_index":773,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":1101,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":958,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["status",{"_index":303,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"miscellaneous/variables.html":{}}}],["status(hasfile",{"_index":368,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["stops",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["storage",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["storage.module",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/UserCardModule.html":{}}}],["storage.module.ts",{"_index":674,"title":{},"body":{"modules/S3FileStorageModule.html":{}}}],["storage.service",{"_index":389,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["storage.service.ts",{"_index":675,"title":{},"body":{"injectables/S3FileStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":698,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:13",{"_index":697,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:15",{"_index":696,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:17",{"_index":684,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:34",{"_index":686,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:54",{"_index":688,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:75",{"_index":690,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage.service.ts:96",{"_index":694,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["storage/s3",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"interfaces/HighlightCardData.html":{},"modules/HighlightCardModule.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"modules/InsightCardModule.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"modules/S3FileStorageModule.html":{},"injectables/S3FileStorageService.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["strategy",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["streamablefile",{"_index":319,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["string",{"_index":106,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string(avatarurl)}&size=40",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_codename",{"_index":1399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_domain",{"_index":1407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_host",{"_index":1404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.api_port",{"_index":1406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_access_key_id",{"_index":1550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_bucket_name",{"_index":1559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_endpoint",{"_index":1554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_protocol",{"_index":1553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_region",{"_index":1556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_secret_access_key",{"_index":1551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.do_spaces_subdomain",{"_index":1561,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_commit",{"_index":1628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_pr",{"_index":1626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(process.env.github_pat_user",{"_index":1624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string(reactions",{"_index":517,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["string(user.avatarurl)}&size=150",{"_index":656,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["string.fromcharcode(8205",{"_index":1438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["style",{"_index":474,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":909,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["styling",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1333,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1326,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1339,"title":{},"body":{"license.html":{}}}],["suite",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["summary",{"_index":230,"title":{},"body":{"controllers/HealthController.html":{},"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["superlative",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":808,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":465,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["switch",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["system",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["table",{"_index":1152,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1151,"title":{},"body":{"coverage.html":{}}}],["tailwind",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["tailwindconfig",{"_index":393,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["target",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["template",{"_index":457,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["templates/highlight",{"_index":396,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["templates/insight",{"_index":575,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["templates/shared/insight",{"_index":577,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["templates/shared/user",{"_index":391,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/tailwind.config",{"_index":394,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["templates/user",{"_index":626,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["terminusmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{}}}],["test",{"_index":1096,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["test/local",{"_index":1201,"title":{},"body":{"index.html":{}}}],["test:local:highlight",{"_index":1207,"title":{},"body":{"index.html":{}}}],["test:local:insight",{"_index":1206,"title":{},"body":{"index.html":{}}}],["test:local:user",{"_index":1198,"title":{},"body":{"index.html":{}}}],["testing",{"_index":836,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tests",{"_index":1095,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":491,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["theme",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.config.bucketname",{"_index":726,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.bucketname}.${this.config.region}.cdn.${this.config.endpoint",{"_index":709,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdncustomdomain",{"_index":708,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.cdndisabled",{"_index":705,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.bucketname}.${this.config.region}.${this.config.endpoint",{"_index":704,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.config.protocol}://${this.config.cdncustomdomain",{"_index":707,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.configservice.get(\"disk_percentage",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"disk_size",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.admin",{"_index":279,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.app",{"_index":271,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.docs",{"_index":275,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.explore",{"_index":277,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.hot",{"_index":273,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"endpoint.landing",{"_index":269,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_heap",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.configservice.get(\"memory_rss",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.database.pingcheck(\"db",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.storage",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.disk.checkstorage(\"disk.usage",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.fonts",{"_index":442,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.fonts.length",{"_index":435,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.getfonts",{"_index":464,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.gethighlightdata(highlightid",{"_index":456,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.gethighlightdata(id",{"_index":509,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.getinsightdata(id",{"_index":612,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.getinsightdata(insightid",{"_index":606,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.getoriginendpoint",{"_index":706,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.getuserdata(username",{"_index":659,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.getrepo(owner",{"_index":420,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.githubservice.getuser(username",{"_index":635,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.githubservice.ratelimit",{"_index":529,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.graphqlwithauth",{"_index":194,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(`query",{"_index":213,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.graphqlwithauth(query",{"_index":211,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.health.check",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.highlightcardservice.checkrequiresupdate(id",{"_index":360,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.highlightcardservice.gethighlightcard(id",{"_index":349,"title":{},"body":{"controllers/HighlightCardController.html":{}}}],["this.http.pingcheck(\"admin.opensauced",{"_index":278,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"app.opensauced",{"_index":270,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"docs.opensauced",{"_index":274,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"explore.opensauced",{"_index":276,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"hot.opensauced",{"_index":272,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.http.pingcheck(\"opensauced.pizza",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.httpservice.get",{"_index":594,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.httpservice.get(`${process.env.api_base_url!}/v2/highlights/${highlightid}/reactions",{"_index":413,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.httpservice.get(`${process.env.api_base_url!}/v2/insights/${insightid",{"_index":584,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["this.httpservice.get(`${process.env.api_base_url!}/v2/user/highlights/${highlightid",{"_index":411,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.insightcardservice.checkrequiresupdate(id",{"_index":565,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["this.insightcardservice.getgetinsightcard(id",{"_index":567,"title":{},"body":{"controllers/InsightCardController.html":{}}}],["this.logger.debug",{"_index":518,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.logger.debug(`rate",{"_index":218,"title":{},"body":{"injectables/GithubService.html":{}}}],["this.memory.checkheap(\"memory.heap",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.memory.checkrss(\"memory.rss",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.s3client",{"_index":711,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3client.send",{"_index":724,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["this.s3filestorageservice.fileexists(hash",{"_index":505,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getcdnendpoint()}${hash",{"_index":504,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilelastmodified(hash",{"_index":508,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["this.s3filestorageservice.getfilemeta(hash",{"_index":511,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["this.usercardservice.checkrequiresupdate(sanitizedusername",{"_index":758,"title":{},"body":{"controllers/UserCardController.html":{}}}],["this.usercardservice.getusercard(sanitizedusername",{"_index":759,"title":{},"body":{"controllers/UserCardController.html":{}}}],["thresholdpercent",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["through",{"_index":1224,"title":{},"body":{"index.html":{}}}],["throw",{"_index":733,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["title",{"_index":143,"title":{},"body":{"interfaces/DbUserHighlight.html":{}}}],["tocodepoint",{"_index":1144,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["tocodepoint(unicodesurrogates",{"_index":1159,"title":{},"body":{"miscellaneous/functions.html":{}}}],["today",{"_index":201,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago",{"_index":203,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["today30daysago.toisostring",{"_index":209,"title":{},"body":{"injectables/GithubService.html":{}}}],["today3daysago",{"_index":663,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["token",{"_index":198,"title":{},"body":{"injectables/GithubService.html":{}}}],["tokens",{"_index":1221,"title":{},"body":{"index.html":{}}}],["tooling",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["toprepositories",{"_index":1620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tort",{"_index":1362,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsize",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["totalsponsorshipamountassponsorincents",{"_index":1602,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatetime",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["transpilation",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["transport",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["true",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["try",{"_index":723,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["ts5",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["tw",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twemoji",{"_index":1423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["twitterusername",{"_index":1604,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":1677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["type",{"_index":107,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbReaction.html":{},"interfaces/DbRepo.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"injectables/GithubService.html":{},"controllers/HighlightCardController.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"injectables/S3FileStorageService.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":192,"title":{},"body":{"injectables/GithubService.html":{}}}],["typeormhealthindicator",{"_index":240,"title":{},"body":{"controllers/HealthController.html":{}}}],["types",{"_index":985,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["types:auto",{"_index":1277,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":484,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["u200d",{"_index":1147,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ufe0f/g",{"_index":1440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ufe0fg",{"_index":1150,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["undefined",{"_index":311,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apibadrequestresponse({description",{"_index":309,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{}}}],["undefined})@apinotfoundresponse({description",{"_index":307,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["undefined})@apiresponse({description",{"_index":304,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["unexisting",{"_index":1088,"title":{},"body":{"changelog.html":{}}}],["unicode/assets",{"_index":1434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unicodesurrogates",{"_index":1160,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unknown",{"_index":176,"title":{},"body":{"injectables/GithubService.html":{},"controllers/HealthController.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/UserCardService.html":{}}}],["unsafe",{"_index":486,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["up",{"_index":302,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{}}}],["update",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1303,"title":{},"body":{"index.html":{}}}],["updated_at",{"_index":104,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["updated_at.toisostring",{"_index":522,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["updatedat",{"_index":1606,"title":{},"body":{"miscellaneous/variables.html":{}}}],["upload",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["uploadfile",{"_index":682,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["uploadfile(filecontent",{"_index":691,"title":{},"body":{"injectables/S3FileStorageService.html":{}}}],["url",{"_index":144,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["url.replace(\"https://github.com",{"_index":418,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["urlsearchparams",{"_index":586,"title":{},"body":{"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{}}}],["usage",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":449,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":445,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"index.html":{}}}],["usefactory",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":137,"title":{},"body":{"interfaces/DbUserHighlight.html":{},"injectables/GithubService.html":{},"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["user(login",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user.databaseid",{"_index":645,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.login",{"_index":657,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.name",{"_index":646,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.repositories.nodes?.filter",{"_index":637,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.toprepositories.nodes",{"_index":651,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user.ts",{"_index":1116,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user[\"databaseid",{"_index":629,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user[\"name",{"_index":630,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["user_id",{"_index":105,"title":{},"body":{"interfaces/DbInsight.html":{},"interfaces/DbUserHighlight.html":{},"interfaces/DbUserInsightRepo.html":{}}}],["usercardcontroller",{"_index":739,"title":{"controllers/UserCardController.html":{}},"body":{"controllers/UserCardController.html":{},"modules/UserCardModule.html":{},"coverage.html":{}}}],["usercarddata",{"_index":628,"title":{"interfaces/UserCardData.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{}}}],["usercardmodule",{"_index":10,"title":{"modules/UserCardModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserCardModule.html":{},"modules.html":{},"overview.html":{}}}],["usercardservice",{"_index":632,"title":{"injectables/UserCardService.html":{}},"body":{"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"modules/UserCardModule.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"overview.html":{}}}],["userdata",{"_index":658,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["userlangs",{"_index":390,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userlangs(langs",{"_index":459,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["username",{"_index":179,"title":{},"body":{"injectables/GithubService.html":{},"interfaces/RequiresUpdateMeta.html":{},"controllers/UserCardController.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["username'})@apinocontentresponse({description",{"_index":746,"title":{},"body":{"controllers/UserCardController.html":{}}}],["username.tolowercase",{"_index":757,"title":{},"body":{"controllers/UserCardController.html":{}}}],["userpat",{"_index":1623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userprofilecardtemplate",{"_index":625,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilecardtemplate(avatarurl",{"_index":660,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["userprofilerepos",{"_index":392,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userprofilerepos([repo",{"_index":460,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["userprofilerepos(repos",{"_index":661,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["users",{"_index":740,"title":{},"body":{"controllers/UserCardController.html":{},"index.html":{}}}],["users/${string(username)}.png",{"_index":662,"title":{},"body":{"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["using",{"_index":1239,"title":{},"body":{"index.html":{}}}],["utc:hh:mm:ss.l",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["utilities",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["utils/twemoji",{"_index":404,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{}}}],["value",{"_index":183,"title":{},"body":{"injectables/GithubService.html":{},"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":1103,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["variables",{"_index":208,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/GithubService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["version",{"_index":1086,"title":{},"body":{"changelog.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["versions",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["videos",{"_index":1292,"title":{},"body":{"index.html":{}}}],["viewbox='0",{"_index":1444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visual",{"_index":1298,"title":{},"body":{"index.html":{}}}],["visualization",{"_index":1296,"title":{},"body":{"index.html":{}}}],["visualizer",{"_index":1302,"title":{},"body":{"index.html":{}}}],["warranties",{"_index":1346,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1341,"title":{},"body":{"license.html":{}}}],["way",{"_index":1195,"title":{},"body":{"index.html":{}}}],["web",{"_index":226,"title":{},"body":{"controllers/HealthController.html":{}}}],["websiteurl",{"_index":1603,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":473,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{}}}],["well",{"_index":1210,"title":{},"body":{"index.html":{}}}],["whether",{"_index":1359,"title":{},"body":{"license.html":{}}}],["width",{"_index":467,"title":{},"body":{"interfaces/HighlightCardData.html":{},"injectables/HighlightCardService.html":{},"interfaces/InsightCardData.html":{},"injectables/InsightCardService.html":{},"interfaces/RequiresUpdateMeta.html":{},"interfaces/UserCardData.html":{},"injectables/UserCardService.html":{},"miscellaneous/variables.html":{}}}],["width='24",{"_index":1442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1193,"title":{},"body":{"index.html":{},"license.html":{}}}],["workflow",{"_index":1305,"title":{},"body":{"index.html":{}}}],["x",{"_index":361,"title":{},"body":{"controllers/HighlightCardController.html":{},"controllers/InsightCardController.html":{},"controllers/UserCardController.html":{}}}],["xmlns='http://www.w3.org/2000/svg'%3e%3cpath",{"_index":1446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xs",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yes",{"_index":542,"title":{},"body":{"injectables/HighlightCardService.html":{},"injectables/InsightCardService.html":{},"injectables/S3FileStorageService.html":{},"injectables/UserCardService.html":{}}}],["yoga",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["youtube",{"_index":1294,"title":{},"body":{"index.html":{}}}],["zero",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":11,"title":{},"body":{"modules/AppModule.html":{},"modules/GithubModule.html":{},"modules/HighlightCardModule.html":{},"modules/InsightCardModule.html":{},"modules/S3FileStorageModule.html":{},"modules/UserCardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nAppModule -->\n\nInsightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HighlightCardModule\n                        \n                        \n                            InsightCardModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                        \n                            UserCardModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, RequestMethod } from \"@nestjs/common\";\nimport { ConfigModule, ConfigService } from \"@nestjs/config\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { LoggerModule } from \"nestjs-pino\";\nimport { clc } from \"@nestjs/common/utils/cli-colors.util\";\n\nimport ApiConfig from \"./config/api.config\";\nimport GitHubConfig from \"./config/github.config\";\nimport DigitalOceanConfig from \"./config/digital-ocean.config\";\nimport { UserCardModule } from \"./social-card/user-card/user-card.module\";\nimport { S3FileStorageModule } from \"./s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardModule } from \"./social-card/highlight-card/highlight-card.module\";\nimport { InsightCardModule } from \"./social-card/insight-card/insight-card.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      load: [ApiConfig, GitHubConfig, DigitalOceanConfig],\n      isGlobal: true,\n    }),\n    LoggerModule.forRootAsync({\n      imports: [ConfigModule],\n      inject: [ConfigService],\n      useFactory: (config: ConfigService) => ({\n        pinoHttp: {\n          name: `os.${String(config.get(\"api.codename\")).toLowerCase()}`,\n          level: config.get(\"api.logging\"),\n          transport: {\n            target: \"pino-pretty\",\n            options: {\n              colorize: true,\n              levelFirst: true,\n              translateTime: \"UTC:hh:MM:ss.l\",\n              singleLine: true,\n              messageFormat: `${clc.yellow(`[{context}]`)} ${clc.green(`{msg}`)}`,\n              ignore: \"pid,hostname,context\",\n            },\n          },\n          customProps: () => ({ context: \"HTTP\" }),\n        },\n        exclude: [{ method: RequestMethod.ALL, path: \"check\" }],\n      }),\n    }),\n    TerminusModule,\n    HttpModule,\n    S3FileStorageModule,\n    UserCardModule,\n    HighlightCardModule,\n    InsightCardModule,\n  ],\n  controllers: [],\n  providers: [],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbInsight.html":{"url":"interfaces/DbInsight.html","title":"interface - DbInsight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbInsight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-insight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_favorite\n                                        \n                                \n                                \n                                        \n                                            is_public\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                                \n                                        \n                                            short_code\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_favorite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_favorite:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_public\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_public:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:         DbUserInsightRepo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DbUserInsightRepo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        short_code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        short_code:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbInsight {\n  id: number;\n  user_id: number;\n  name: string;\n  is_public: boolean;\n  is_favorite: boolean;\n  short_code: string;\n  created_at: string;\n  updated_at: string;\n  repos: DbUserInsightRepo[];\n}\n\ninterface DbUserInsightRepo {\n  readonly id: number;\n  readonly insight_id: number;\n  readonly repo_id: number;\n  readonly full_name: string;\n  readonly created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbReaction.html":{"url":"interfaces/DbReaction.html","title":"interface - DbReaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbReaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-reaction.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            emoji_id\n                                        \n                                \n                                \n                                        \n                                            reaction_count\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emoji_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emoji_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reaction_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reaction_count:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbReaction {\n  emoji_id: string;\n  reaction_count: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbRepo.html":{"url":"interfaces/DbRepo.html","title":"interface - DbRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-repos.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            churnTotalCount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            closed_prs_count\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            draft_prs_count\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            host_id\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            issues\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            merged_prs_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            open_prs_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pr_active_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pr_velocity_count\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spam_prs_count\n                                        \n                                \n                                \n                                        \n                                            stars\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        churnTotalCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        churnTotalCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        closed_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closed_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draft_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        draft_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        host_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        host_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issues:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        merged_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        merged_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        open_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        open_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pr_active_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pr_active_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pr_velocity_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pr_velocity_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spam_prs_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spam_prs_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stars\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stars:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbRepo {\n  id: string;\n  host_id: string;\n  size: number;\n  stars: number;\n  issues: number;\n  full_name: string;\n  pr_active_count?: number;\n  open_prs_count?: number;\n  merged_prs_count?: number;\n  closed_prs_count?: number;\n  draft_prs_count?: number;\n  spam_prs_count?: number;\n  pr_velocity_count?: number;\n  churnTotalCount?: number;\n  language: string;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbUserHighlight.html":{"url":"interfaces/DbUserHighlight.html","title":"interface - DbUserHighlight","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbUserHighlight\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-user-highlight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            deleted_at\n                                        \n                                \n                                \n                                        \n                                            highlight\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            pinned\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleted_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        deleted_at:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlight\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlight:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pinned\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pinned:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbUserHighlight {\n  readonly id: string;\n  readonly user_id: string;\n  readonly url: string;\n  readonly title: string;\n  readonly highlight: string;\n  readonly pinned: boolean;\n  readonly created_at: string;\n  readonly updated_at: string;\n  readonly deleted_at: string | null;\n  readonly login: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DbUserInsightRepo.html":{"url":"interfaces/DbUserInsightRepo.html","title":"interface - DbUserInsightRepo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DbUserInsightRepo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/entities/db-insight.entity.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            full_name\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            insight_id\n                                        \n                                \n                                \n                                        \n                                            repo_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        full_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        full_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insight_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        insight_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repo_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repo_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface DbInsight {\n  id: number;\n  user_id: number;\n  name: string;\n  is_public: boolean;\n  is_favorite: boolean;\n  short_code: string;\n  created_at: string;\n  updated_at: string;\n  repos: DbUserInsightRepo[];\n}\n\ninterface DbUserInsightRepo {\n  readonly id: number;\n  readonly insight_id: number;\n  readonly repo_id: number;\n  readonly full_name: string;\n  readonly created_at?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GithubModule.html":{"url":"modules/GithubModule.html","title":"module - GithubModule","body":"\n                   \n\n\n\n\n    Modules\n    GithubModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/github/github.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GithubService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            GithubService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { GithubService } from \"./github.service\";\n\n@Module({\n  imports: [],\n  providers: [GithubService],\n  exports: [GithubService],\n})\nexport class GithubModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubService.html":{"url":"injectables/GithubService.html","title":"injectable - GithubService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/github/github.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                graphqlWithAuth\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getRepo\n                            \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                rateLimit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(githubConfig: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/github/github.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        githubConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getRepo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRepo(owner: string, repo: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    owner\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repo\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        rateLimit\n                        \n                    \n                \n            \n            \n                \n                    \n                    rateLimit()\n                \n            \n\n\n            \n                \n                    Defined in src/github/github.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        graphqlWithAuth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/github/github.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(GithubService.name)\n                    \n                \n                    \n                        \n                                Defined in src/github/github.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { graphql } from \"@octokit/graphql\";\nimport { RateLimit, Repository, User } from \"@octokit/graphql-schema\";\n\nimport GithubConfig from \"../config/github.config\";\nimport getRepo from \"./gql/get-repo\";\nimport getUser from \"./gql/get-user\";\n\n@Injectable()\nexport class GithubService {\n  private readonly logger = new Logger(GithubService.name);\n  private readonly graphqlWithAuth: typeof graphql;\n\n  constructor (\n    @Inject(GithubConfig.KEY)\n    private readonly githubConfig: ConfigType,\n  ) {\n    this.graphqlWithAuth = graphql.defaults({ headers: { authorization: `token ${githubConfig.userPat}` } });\n  }\n\n  async getUser (username: string): Promise {\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n\n    const { query, variables } = getUser(username, today30daysAgo.toISOString());\n\n    const { user } = await this.graphqlWithAuth(query, variables);\n\n    return user;\n  }\n\n  async getRepo (owner: string, repo: string) {\n    const { query, variables } = getRepo(owner, repo);\n\n    const { repository } = await this.graphqlWithAuth(query, variables);\n\n    return repository;\n  }\n\n  async rateLimit () {\n    const { rateLimit } = await this.graphqlWithAuth(`query {\n      rateLimit {\n        limit,\n        cost,\n        remaining,\n        resetAt\n      }\n    }`);\n\n    this.logger.debug(`Rate limit: ${JSON.stringify(rateLimit)}`);\n\n    return rateLimit;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                service\n                            \n                            \n                                    Async\n                                web\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        service\n                        \n                    \n                \n            \n            \n                \n                    \n                    service()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/service')@ApiOperation({operationId: 'healthStatusService', summary: 'Check the health of Open Sauced service endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        web\n                        \n                    \n                \n            \n            \n                \n                    \n                    web()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/web')@ApiOperation({operationId: 'healthStatusWeb', summary: 'Check the health of Open Sauced web endpoints'})@HealthCheck()@ApiOkResponse()\n                \n            \n\n            \n                \n                    Defined in src/health/health.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport {\n  HealthCheckService,\n  HttpHealthIndicator,\n  TypeOrmHealthIndicator,\n  HealthCheck,\n  MemoryHealthIndicator,\n  DiskHealthIndicator,\n} from \"@nestjs/terminus\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApiOkResponse, ApiOperation, ApiTags } from \"@nestjs/swagger\";\n\n@Controller(\"health\")\n@ApiTags(\"Health check service\")\nexport class HealthController {\n  constructor (\n    private health: HealthCheckService,\n    private http: HttpHealthIndicator,\n    private database: TypeOrmHealthIndicator,\n    private memory: MemoryHealthIndicator,\n    private disk: DiskHealthIndicator,\n    private readonly configService: ConfigService,\n  ) {}\n\n  @Get(\"/service\")\n  @ApiOperation({\n    operationId: \"healthStatusService\",\n    summary: \"Check the health of Open Sauced service endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async service () {\n    return this.health.check([\n      async () => this.database.pingCheck(\"db\"),\n      async () => this.memory.checkHeap(\"memory.heap\", this.configService.get(\"memory_heap\")!),\n      async () => this.memory.checkRSS(\"memory.rss\", this.configService.get(\"memory_rss\")!),\n      async () => this.disk.checkStorage(\"disk.usage\", {\n        thresholdPercent: this.configService.get(\"disk_percentage\")!,\n        path: \"/\",\n      }),\n      async () => this.disk.checkStorage(\"disk.storage\", {\n        thresholdPercent: this.configService.get(\"disk_size\")!,\n        path: \"/\",\n      }),\n    ]);\n  }\n\n  @Get(\"/web\")\n  @ApiOperation({\n    operationId: \"healthStatusWeb\",\n    summary: \"Check the health of Open Sauced web endpoints\",\n  })\n  @HealthCheck()\n  @ApiOkResponse()\n  async web () {\n    return this.health.check([\n      async () => this.http.pingCheck(\"opensauced.pizza\", this.configService.get(\"endpoint.landing\")!),\n      async () => this.http.pingCheck(\"app.opensauced\", this.configService.get(\"endpoint.app\")!),\n      async () => this.http.pingCheck(\"hot.opensauced\", this.configService.get(\"endpoint.hot\")!),\n      async () => this.http.pingCheck(\"docs.opensauced\", this.configService.get(\"endpoint.docs\")!),\n      async () => this.http.pingCheck(\"explore.opensauced\", this.configService.get(\"endpoint.explore\")!),\n      async () => this.http.pingCheck(\"admin.opensauced\", this.configService.get(\"endpoint.admin\")!),\n    ]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/health/health.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { TerminusModule } from \"@nestjs/terminus\";\nimport { HealthController } from \"./health.controller\";\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HighlightCardController.html":{"url":"controllers/HighlightCardController.html","title":"controller - HighlightCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HighlightCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                highlights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkHighlightSocialCard\n                            \n                            \n                                    Async\n                                generateHighlightSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/metadata')@ApiOperation({operationId: 'getHighlightSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :id'})@ApiNoContentResponse({description: 'Highlight social card image is up to date', status: undefined})@ApiResponse({description: 'Highlight social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'Highlight social card image not found', status: undefined})@ApiBadRequestResponse({description: 'Invalid highlight id', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateHighlightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateHighlightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'generateHighlightSocialCard', summary: 'Generates the social card image for the provided highlight ID'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'Highlight not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@ApiBadRequestResponse({description: 'Invalid highlight id'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, ParseIntPipe, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\nimport { HighlightCardService } from \"./highlight-card.service\";\n\n\n@Controller(\"highlights\")\n@ApiTags(\"Highlight social cards\")\nexport class HighlightCardController {\n  constructor (\n    private readonly highlightCardService: HighlightCardService,\n  ) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"generateHighlightSocialCard\",\n    summary: \"Generates the social card image for the provided highlight ID\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"Highlight not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\" })\n  @Redirect()\n  async generateHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const png = await this.highlightCardService.getHighlightCard(id);\n\n    return res.status(HttpStatus.OK).send(png);\n  }\n\n  @Get(\"/:id/metadata\")\n  @ApiOperation({\n    operationId: \"getHighlightSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :id\",\n  })\n  @ApiNoContentResponse({ description: \"Highlight social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"Highlight social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"Highlight social card image not found\", status: HttpStatus.NOT_FOUND })\n  @ApiBadRequestResponse({ description: \"Invalid highlight id\", status: HttpStatus.BAD_REQUEST })\n  async checkHighlightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.highlightCardService.checkRequiresUpdate(id);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HighlightCardData.html":{"url":"interfaces/HighlightCardData.html","title":"interface - HighlightCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  HighlightCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            body\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            login\n                                        \n                                \n                                \n                                        \n                                            reactions\n                                        \n                                \n                                \n                                        \n                                            repo\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        body\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        body:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        login\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        login:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reactions\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reactions:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repo:     Repository\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport { DbUserHighlight } from \"../../github/entities/db-user-highlight.entity\";\nimport { DbReaction } from \"../../github/entities/db-reaction.entity\";\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { getIconCode, loadEmoji } from \"../../utils/twemoji\";\n\ninterface HighlightCardData {\n  login: string;\n  body: string;\n  reactions: number;\n  avatarUrl: string;\n  repo: Repository;\n  langTotal: number;\n  langs: (Language & {\n    size: number;\n  })[];\n  updated_at: Date;\n  url: string;\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n  private fonts: Buffer[] = [];\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) { }\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/user/highlights/${highlightId}`),\n    );\n\n    const reactionsReq = firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/highlights/${highlightId}/reactions`),\n    );\n\n    const [highlight, highlightReactions] = await Promise.all([highlightReq, reactionsReq]);\n\n    const { login, updated_at, url, highlight: body } = highlight.data;\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const reactions = highlightReactions.data.reduce((acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      body,\n      login,\n      reactions,\n      avatarUrl: `https://github.com/${login}.png?size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  private async getFonts () {\n    if (this.fonts.length === 0) {\n      const interArrayBufferReq = fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n      const interArrayBufferMediumReq = fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n      this.fonts = await Promise.all([interArrayBufferReq, interArrayBufferMediumReq]);\n    }\n\n    return this.fonts;\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { reactions, body, avatarUrl, repo, langs, langTotal } = highlightData\n      ? highlightData\n      : await this.getHighlightData(highlightId);\n\n    const template = html(\n      highlightCardTemplate(avatarUrl, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions),\n    );\n\n    const [interArrayBuffer, interArrayBufferMedium] = await this.getFonts();\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n      loadAdditionalAsset: async (code: string, segment: string) => {\n        if (code === \"emoji\") {\n          // if segment is an emoji\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          return `data:image/svg+xml;base64,${btoa(await loadEmoji(\"twemoji\", getIconCode(segment)))}`;\n        }\n\n        // if segment is normal text\n        return code;\n      },\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModifiedReq = this.s3FileStorageService.getFileLastModified(hash);\n      const highlightReq = this.getHighlightData(id);\n      const metadataReq = this.s3FileStorageService.getFileMeta(hash);\n\n      const [lastModified, highlight, metadata] = await Promise.all([lastModifiedReq, highlightReq, metadataReq]);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = highlight;\n\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HighlightCardModule.html":{"url":"modules/HighlightCardModule.html","title":"module - HighlightCardModule","body":"\n                   \n\n\n\n\n    Modules\n    HighlightCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\ncluster_HighlightCardModule_imports\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HighlightCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HighlightCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\nimport { HighlightCardService } from \"../highlight-card/highlight-card.service\";\nimport { HighlightCardController } from \"./highlight-card.controller\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [HighlightCardService],\n  controllers: [HighlightCardController],\n})\nexport class HighlightCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HighlightCardService.html":{"url":"injectables/HighlightCardService.html","title":"injectable - HighlightCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HighlightCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/highlight-card/highlight-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fonts\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Private\n                                    Async\n                                getFonts\n                            \n                            \n                                    Async\n                                getHighlightCard\n                            \n                            \n                                    Private\n                                    Async\n                                getHighlightData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:147\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(highlightId: number, highlightData?: HighlightCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    highlightData\n                                    \n                                                HighlightCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getFonts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFonts()\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getHighlightCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getHighlightData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHighlightData(highlightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/highlight-card/highlight-card.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    highlightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fonts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Buffer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/highlight-card/highlight-card.service.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport highlightCardTemplate from \"../templates/highlight-card.template\";\nimport { DbUserHighlight } from \"../../github/entities/db-user-highlight.entity\";\nimport { DbReaction } from \"../../github/entities/db-reaction.entity\";\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { getIconCode, loadEmoji } from \"../../utils/twemoji\";\n\ninterface HighlightCardData {\n  login: string;\n  body: string;\n  reactions: number;\n  avatarUrl: string;\n  repo: Repository;\n  langTotal: number;\n  langs: (Language & {\n    size: number;\n  })[];\n  updated_at: Date;\n  url: string;\n}\n\n@Injectable()\nexport class HighlightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n  private fonts: Buffer[] = [];\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) { }\n\n  private async getHighlightData (highlightId: number): Promise {\n    const highlightReq = firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/user/highlights/${highlightId}`),\n    );\n\n    const reactionsReq = firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/highlights/${highlightId}/reactions`),\n    );\n\n    const [highlight, highlightReactions] = await Promise.all([highlightReq, reactionsReq]);\n\n    const { login, updated_at, url, highlight: body } = highlight.data;\n    const [owner, repoName] = url.replace(\"https://github.com/\", \"\").split(\"/\");\n\n    const repo = await this.githubService.getRepo(owner, repoName);\n\n    const reactions = highlightReactions.data.reduce((acc, curr) => acc + Number(curr.reaction_count), 0);\n\n    const langList = repo.languages?.edges?.flatMap(edge => {\n      if (edge) {\n        return {\n          ...edge.node,\n          size: edge.size,\n        };\n      }\n    }) as (Language & { size: number })[];\n\n    return {\n      body,\n      login,\n      reactions,\n      avatarUrl: `https://github.com/${login}.png?size=150`,\n      langs: langList,\n      langTotal: repo.languages?.totalSize ?? 0,\n      repo,\n      updated_at: new Date(updated_at),\n      url,\n    };\n  }\n\n  private async getFonts () {\n    if (this.fonts.length === 0) {\n      const interArrayBufferReq = fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n      const interArrayBufferMediumReq = fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n      this.fonts = await Promise.all([interArrayBufferReq, interArrayBufferMediumReq]);\n    }\n\n    return this.fonts;\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (highlightId: number, highlightData?: HighlightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { reactions, body, avatarUrl, repo, langs, langTotal } = highlightData\n      ? highlightData\n      : await this.getHighlightData(highlightId);\n\n    const template = html(\n      highlightCardTemplate(avatarUrl, body, userLangs(langs, langTotal), userProfileRepos([repo], 2), reactions),\n    );\n\n    const [interArrayBuffer, interArrayBufferMedium] = await this.getFonts();\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n      loadAdditionalAsset: async (code: string, segment: string) => {\n        if (code === \"emoji\") {\n          // if segment is an emoji\n          // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n          return `data:image/svg+xml;base64,${btoa(await loadEmoji(\"twemoji\", getIconCode(segment)))}`;\n        }\n\n        // if segment is normal text\n        return code;\n      },\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `highlights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModifiedReq = this.s3FileStorageService.getFileLastModified(hash);\n      const highlightReq = this.getHighlightData(id);\n      const metadataReq = this.s3FileStorageService.getFileMeta(hash);\n\n      const [lastModified, highlight, metadata] = await Promise.all([lastModifiedReq, highlightReq, metadataReq]);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at, reactions } = highlight;\n\n      const savedReactions = metadata?.[\"reactions-count\"] ?? \"0\";\n\n      if (lastModified && lastModified > updated_at && savedReactions === String(reactions)) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getHighlightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/InsightCardController.html":{"url":"controllers/InsightCardController.html","title":"controller - InsightCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  InsightCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                insights\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkInsightSocialCard\n                            \n                            \n                                    Async\n                                generateInsightSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkInsightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkInsightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/metadata')@ApiOperation({operationId: 'getInsightSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :id'})@ApiNoContentResponse({description: 'Insight social card image is up to date', status: undefined})@ApiResponse({description: 'Insight social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'Insight social card image not found', status: undefined})@ApiBadRequestResponse({description: 'Invalid insight id', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.controller.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateInsightSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateInsightSocialCard(id: number, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiOperation({operationId: 'generateInsightSocialCard', summary: 'Gets latest cache aware social card link for :id or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'Insight not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@ApiBadRequestResponse({description: 'Invalid insight id'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Header,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Redirect,\n  Res,\n  StreamableFile,\n} from \"@nestjs/common\";\nimport {\n  ApiBadRequestResponse,\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\nimport { InsightCardService } from \"./insight-card.service\";\n\n@Controller(\"insights\")\n@ApiTags(\"Insight social cards\")\nexport class InsightCardController {\n  constructor (private readonly insightCardService: InsightCardService) {}\n\n  @Get(\"/:id\")\n  @ApiOperation({\n    operationId: \"generateInsightSocialCard\",\n    summary: \"Gets latest cache aware social card link for :id or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"Insight not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @ApiBadRequestResponse({ description: \"Invalid insight id\" })\n  @Redirect()\n  async generateInsightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate } = await this.insightCardService.checkRequiresUpdate(id);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.insightCardService.getgetInsightCard(id);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:id/metadata\")\n  @ApiOperation({\n    operationId: \"getInsightSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :id\",\n  })\n  @ApiNoContentResponse({ description: \"Insight social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"Insight social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"Insight social card image not found\", status: HttpStatus.NOT_FOUND })\n  @ApiBadRequestResponse({ description: \"Invalid insight id\", status: HttpStatus.BAD_REQUEST })\n  async checkInsightSocialCard (\n    @Param(\"id\", ParseIntPipe) id: number,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.insightCardService.checkRequiresUpdate(id);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? (needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT) : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InsightCardData.html":{"url":"interfaces/InsightCardData.html","title":"interface - InsightCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InsightCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            contributors\n                                        \n                                \n                                \n                                        \n                                            pageName\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contributors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        contributors:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport fs from \"node:fs/promises\";\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\n\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { DbInsight } from \"../../github/entities/db-insight.entity\";\nimport insightCardTemplate from \"../templates/insight-card.template\";\nimport insightRepos from \"../templates/shared/insight-repos\";\nimport insightContributors from \"../templates/shared/insight-contributors\";\n\ninterface InsightCardData {\n  pageName: string;\n  repos: { repoName: string; avatarUrl: string }[];\n  contributors: string[];\n  updated_at: Date;\n}\n\n@Injectable()\nexport class InsightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) { }\n\n  private async getInsightData (insightId: number): Promise {\n    const maxRepoQueryIdsLenght = 10;\n\n    const insightPageReq = await firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/insights/${insightId}`),\n    );\n\n    const { repos, name, updated_at } = insightPageReq.data;\n\n    const query = (new URLSearchParams);\n\n    query.set(\n      \"repoIds\",\n      repos\n        .slice(0, maxRepoQueryIdsLenght)\n        .map(repo => repo.repo_id)\n        .join(\",\"),\n    );\n\n    const contributorsReq = await firstValueFrom(\n      this.httpService.get(\n        `${process.env.API_BASE_URL!}/v2/contributors/search?${String(query)}`,\n      ),\n    );\n\n    const contributorsRes = contributorsReq.data.data;\n    const contributors = contributorsRes.map(\n      ({ author_login }) => `https://www.github.com/${author_login}.png?size=50`,\n    );\n\n    const repositories = repos.map(repo => {\n      const [owner, repoName] = repo.full_name.split(\"/\");\n\n      return {\n        repoName,\n        avatarUrl: `https://www.github.com/${owner}.png?size=50`,\n      };\n    });\n\n    return {\n      pageName: name,\n      repos: repositories,\n      contributors,\n      updated_at: new Date(updated_at),\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (insightId: number, insightData?: InsightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { pageName, repos, contributors } = insightData ? insightData : await this.getInsightData(insightId);\n\n    const template = html(insightCardTemplate(pageName, insightContributors(contributors), insightRepos(repos, 3)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `insights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at } = await this.getInsightData(id);\n\n      if (lastModified && lastModified > updated_at) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getgetInsightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InsightCardModule.html":{"url":"modules/InsightCardModule.html","title":"module - InsightCardModule","body":"\n                   \n\n\n\n\n    Modules\n    InsightCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InsightCardModule\n\n\n\ncluster_InsightCardModule_imports\n\n\n\ncluster_InsightCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nInsightCardModule -->\n\nGithubModule->InsightCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nInsightCardModule -->\n\nS3FileStorageModule->InsightCardModule\n\n\n\n\n\nInsightCardService\n\nInsightCardService\n\nInsightCardModule -->\n\nInsightCardService->InsightCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            InsightCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            InsightCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\n\nimport { InsightCardService } from \"./insight-card.service\";\nimport { InsightCardController } from \"./insight-card.controller\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [InsightCardService],\n  controllers: [InsightCardController],\n})\nexport class InsightCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InsightCardService.html":{"url":"injectables/InsightCardService.html","title":"injectable - InsightCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  InsightCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/insight-card/insight-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getgetInsightCard\n                            \n                            \n                                    Private\n                                    Async\n                                getInsightData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/insight-card/insight-card.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(insightId: number, insightData?: InsightCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    insightData\n                                    \n                                                InsightCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getgetInsightCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getgetInsightCard(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getInsightData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInsightData(insightId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/insight-card/insight-card.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    insightId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/insight-card/insight-card.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport fs from \"node:fs/promises\";\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\n\nimport tailwindConfig from \"../templates/tailwind.config\";\nimport { firstValueFrom } from \"rxjs\";\n\nimport { RequiresUpdateMeta } from \"../user-card/user-card.service\";\nimport { DbInsight } from \"../../github/entities/db-insight.entity\";\nimport insightCardTemplate from \"../templates/insight-card.template\";\nimport insightRepos from \"../templates/shared/insight-repos\";\nimport insightContributors from \"../templates/shared/insight-contributors\";\n\ninterface InsightCardData {\n  pageName: string;\n  repos: { repoName: string; avatarUrl: string }[];\n  contributors: string[];\n  updated_at: Date;\n}\n\n@Injectable()\nexport class InsightCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) { }\n\n  private async getInsightData (insightId: number): Promise {\n    const maxRepoQueryIdsLenght = 10;\n\n    const insightPageReq = await firstValueFrom(\n      this.httpService.get(`${process.env.API_BASE_URL!}/v2/insights/${insightId}`),\n    );\n\n    const { repos, name, updated_at } = insightPageReq.data;\n\n    const query = (new URLSearchParams);\n\n    query.set(\n      \"repoIds\",\n      repos\n        .slice(0, maxRepoQueryIdsLenght)\n        .map(repo => repo.repo_id)\n        .join(\",\"),\n    );\n\n    const contributorsReq = await firstValueFrom(\n      this.httpService.get(\n        `${process.env.API_BASE_URL!}/v2/contributors/search?${String(query)}`,\n      ),\n    );\n\n    const contributorsRes = contributorsReq.data.data;\n    const contributors = contributorsRes.map(\n      ({ author_login }) => `https://www.github.com/${author_login}.png?size=50`,\n    );\n\n    const repositories = repos.map(repo => {\n      const [owner, repoName] = repo.full_name.split(\"/\");\n\n      return {\n        repoName,\n        avatarUrl: `https://www.github.com/${owner}.png?size=50`,\n      };\n    });\n\n    return {\n      pageName: name,\n      repos: repositories,\n      contributors,\n      updated_at: new Date(updated_at),\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (insightId: number, insightData?: InsightCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { pageName, repos, contributors } = insightData ? insightData : await this.getInsightData(insightId);\n\n    const template = html(insightCardTemplate(pageName, insightContributors(contributors), insightRepos(repos, 3)));\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (id: number): Promise {\n    const hash = `insights/${String(id)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      const { updated_at } = await this.getInsightData(id);\n\n      if (lastModified && lastModified > updated_at) {\n        this.logger.debug(\n          `Highlight ${id} exists in S3 with lastModified: ${lastModified.toISOString()} newer than updated_at: ${updated_at.toISOString()}, and reaction count is the same, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getgetInsightCard (id: number): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequiresUpdateMeta.html":{"url":"interfaces/RequiresUpdateMeta.html","title":"interface - RequiresUpdateMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RequiresUpdateMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fileUrl\n                                        \n                                \n                                \n                                        \n                                            hasFile\n                                        \n                                \n                                \n                                        \n                                            lastModified\n                                        \n                                \n                                \n                                        \n                                            needsUpdate\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fileUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fileUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasFile\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasFile:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastModified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastModified:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        needsUpdate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        needsUpdate:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes\n        ?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username)\n        .filter(Boolean) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/S3FileStorageModule.html":{"url":"modules/S3FileStorageModule.html","title":"module - S3FileStorageModule","body":"\n                   \n\n\n\n\n    Modules\n    S3FileStorageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            S3FileStorageService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\n\nimport { S3FileStorageService } from \"./s3-file-storage.service\";\n\n@Module({\n  imports: [],\n  providers: [S3FileStorageService],\n  exports: [S3FileStorageService],\n})\nexport class S3FileStorageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/S3FileStorageService.html":{"url":"injectables/S3FileStorageService.html","title":"injectable - S3FileStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  S3FileStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/s3-file-storage/s3-file-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getCdnEndpoint\n                            \n                            \n                                    Public\n                                getOriginEndpoint\n                            \n                            \n                                    Private\n                                    Readonly\n                                s3Client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fileExists\n                            \n                            \n                                    Async\n                                getFileLastModified\n                            \n                            \n                                    Async\n                                getFileMeta\n                            \n                            \n                                    Async\n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fileExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    fileExists(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileLastModified\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileLastModified(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getFileMeta\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileMeta(hash: string)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(fileContent: Buffer | Readable, hash: string, contentType: string, metadata?: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/s3-file-storage/s3-file-storage.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fileContent\n                                    \n                                            Buffer | Readable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    contentType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    metadata\n                                    \n                                            Record\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getCdnEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getOriginEndpoint\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        s3Client\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3Client\n\n                    \n                \n                    \n                        \n                                Defined in src/s3-file-storage/s3-file-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from \"@nestjs/common\";\nimport { ConfigType } from \"@nestjs/config\";\nimport { S3, HeadObjectCommand, PutObjectCommand, S3Client } from \"@aws-sdk/client-s3\";\nimport { Readable } from \"node:stream\";\n\nimport DigitalOceanConfig from \"../config/digital-ocean.config\";\n\n\n@Injectable()\nexport class S3FileStorageService {\n  private readonly s3Client: S3Client;\n\n  public getOriginEndpoint = (): string => `${this.config.protocol}://${this.config.bucketName}.${this.config.region}.${this.config.endpoint}/`;\n\n  public getCdnEndpoint = (): string => (this.config.cdnDisabled\n    ? this.getOriginEndpoint()\n    : `${this.config.protocol}://${this.config.cdnCustomDomain !== \"\" ? this.config.cdnCustomDomain : `${this.config.bucketName}.${this.config.region}.cdn.${this.config.endpoint}`}/`);\n\n  constructor (\n    @Inject(DigitalOceanConfig.KEY)\n    private readonly config: ConfigType,\n  ) {\n    this.s3Client = new S3({\n      forcePathStyle: false,\n      endpoint: `${config.protocol}://${config.region}.${config.endpoint}`,\n      region: `us-east-1`,\n      credentials: {\n        accessKeyId: config.accessKeyId,\n        secretAccessKey: config.secretAccessKey,\n      },\n    });\n  }\n\n  async fileExists (hash: string): Promise {\n    try {\n      await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n      return true;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return false;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileLastModified (hash: string): Promise {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.LastModified ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async getFileMeta (hash: string): Promise | null> {\n    try {\n      const response = await this.s3Client.send(\n        new HeadObjectCommand({\n          Bucket: this.config.bucketName,\n          Key: hash,\n        }),\n      );\n\n      return response.Metadata ?? null;\n    } catch (error) {\n      if (error instanceof Error) {\n        if (error.name === \"NotFound\") {\n          return null;\n        }\n      }\n\n      throw error;\n    }\n  }\n\n  async uploadFile (\n    fileContent: Buffer | Readable,\n    hash: string,\n    contentType: string,\n    metadata?: Record,\n  ): Promise {\n    await this.s3Client.send(\n      new PutObjectCommand({\n        Bucket: this.config.bucketName,\n        Key: hash,\n        Body: fileContent,\n        ContentType: contentType,\n        ACL: \"public-read\",\n        Metadata: metadata,\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserCardController.html":{"url":"controllers/UserCardController.html","title":"controller - UserCardController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserCardController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUserSocialCard\n                            \n                            \n                                    Async\n                                generateUserSocialCard\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username/metadata')@ApiOperation({operationId: 'getUserSocialCardMetadata', summary: 'Gets latest cache aware social card metadata for :username'})@ApiNoContentResponse({description: 'User social card image is up to date', status: undefined})@ApiResponse({description: 'User social card image needs regeneration', status: undefined})@ApiNotFoundResponse({description: 'User social card image not found', status: undefined})\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateUserSocialCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUserSocialCard(username: string, res: FastifyReply)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:username')@ApiOperation({operationId: 'generateUserSocialCard', summary: 'Gets latest cache aware social card link for :username or generates a new one'})@Header('Content-Type', 'image/png')@ApiOkResponse({type: StreamableFile, description: 'Social card image'})@ApiNotFoundResponse({description: 'User not found'})@ApiForbiddenResponse({description: 'Rate limit exceeded'})@Redirect()\n                \n            \n\n            \n                \n                    Defined in src/social-card/user-card/user-card.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                            FastifyReply\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Header, HttpStatus, Param, Redirect, Res, StreamableFile } from \"@nestjs/common\";\nimport {\n  ApiForbiddenResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation, ApiResponse,\n  ApiTags,\n} from \"@nestjs/swagger\";\nimport { FastifyReply } from \"fastify\";\n\nimport { UserCardService } from \"./user-card.service\";\n\n@Controller(\"users\")\n@ApiTags(\"User social cards\")\nexport class UserCardController {\n  constructor (\n    private readonly userCardService: UserCardService,\n  ) {}\n\n  @Get(\"/:username\")\n  @ApiOperation({\n    operationId: \"generateUserSocialCard\",\n    summary: \"Gets latest cache aware social card link for :username or generates a new one\",\n  })\n  @Header(\"Content-Type\", \"image/png\")\n  @ApiOkResponse({ type: StreamableFile, description: \"Social card image\" })\n  @ApiNotFoundResponse({ description: \"User not found\" })\n  @ApiForbiddenResponse({ description: \"Rate limit exceeded\" })\n  @Redirect()\n  async generateUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    if (hasFile && !needsUpdate) {\n      return res.status(HttpStatus.FOUND).redirect(fileUrl);\n    }\n\n    const url = await this.userCardService.getUserCard(sanitizedUsername);\n\n    return res.status(HttpStatus.FOUND).redirect(url);\n  }\n\n  @Get(\"/:username/metadata\")\n  @ApiOperation({\n    operationId: \"getUserSocialCardMetadata\",\n    summary: \"Gets latest cache aware social card metadata for :username\",\n  })\n  @ApiNoContentResponse({ description: \"User social card image is up to date\", status: HttpStatus.NO_CONTENT })\n  @ApiResponse({ description: \"User social card image needs regeneration\", status: HttpStatus.NOT_MODIFIED })\n  @ApiNotFoundResponse({ description: \"User social card image not found\", status: HttpStatus.NOT_FOUND })\n  async checkUserSocialCard (\n    @Param(\"username\") username: string,\n      @Res({ passthrough: true }) res: FastifyReply,\n  ): Promise {\n    const sanitizedUsername = username.toLowerCase();\n    const { fileUrl, hasFile, needsUpdate, lastModified } = await this.userCardService.checkRequiresUpdate(sanitizedUsername);\n\n    return res\n      .headers({\n        \"x-amz-meta-last-modified\": lastModified?.toISOString() ?? \"\",\n        \"x-amz-meta-location\": fileUrl,\n      })\n      .status(hasFile ? needsUpdate ? HttpStatus.NOT_MODIFIED : HttpStatus.NO_CONTENT : HttpStatus.NOT_FOUND)\n      .send();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCardData.html":{"url":"interfaces/UserCardData.html","title":"interface - UserCardData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCardData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            avatarUrl\n                                        \n                                \n                                \n                                        \n                                            formattedName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            langs\n                                        \n                                \n                                \n                                        \n                                            langTotal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            repos\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatarUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatarUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formattedName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langs:     ()[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ()[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        langTotal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        langTotal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repos:     Repository[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Repository[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes\n        ?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username)\n        .filter(Boolean) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserCardModule.html":{"url":"modules/UserCardModule.html","title":"module - UserCardModule","body":"\n                   \n\n\n\n\n    Modules\n    UserCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_imports\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nGithubModule\n\nGithubModule\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/social-card/user-card/user-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserCardService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserCardController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GithubModule\n                        \n                        \n                            S3FileStorageModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { HttpModule } from \"@nestjs/axios\";\n\nimport { UserCardService } from \"./user-card.service\";\nimport { UserCardController } from \"./user-card.controller\";\nimport { GithubModule } from \"../../github/github.module\";\nimport { S3FileStorageModule } from \"../../s3-file-storage/s3-file-storage.module\";\n\n@Module({\n  imports: [HttpModule, GithubModule, S3FileStorageModule],\n  providers: [UserCardService],\n  controllers: [UserCardController],\n})\nexport class UserCardModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserCardService.html":{"url":"injectables/UserCardService.html","title":"injectable - UserCardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserCardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/social-card/user-card/user-card.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkRequiresUpdate\n                            \n                            \n                                    Async\n                                generateCardBuffer\n                            \n                            \n                                    Async\n                                getUserCard\n                            \n                            \n                                    Private\n                                    Async\n                                getUserData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, githubService: GithubService, s3FileStorageService: S3FileStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/social-card/user-card/user-card.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        githubService\n                                                  \n                                                        \n                                                                        GithubService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        s3FileStorageService\n                                                  \n                                                        \n                                                                        S3FileStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkRequiresUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkRequiresUpdate(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        generateCardBuffer\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateCardBuffer(username: string, userData?: UserCardData)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userData\n                                    \n                                                UserCardData\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserCard\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserCard(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getUserData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserData(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/social-card/user-card/user-card.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(this.constructor.name)\n                    \n                \n                    \n                        \n                                Defined in src/social-card/user-card/user-card.service.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ForbiddenException, Injectable, Logger, NotFoundException } from \"@nestjs/common\";\nimport { HttpService } from \"@nestjs/axios\";\nimport { Resvg } from \"@resvg/resvg-js\";\nimport { Repository, Language, User } from \"@octokit/graphql-schema\";\nimport fs from \"node:fs/promises\";\n\nimport { GithubService } from \"../../github/github.service\";\nimport { S3FileStorageService } from \"../../s3-file-storage/s3-file-storage.service\";\nimport userLangs from \"../templates/shared/user-langs\";\nimport userProfileRepos from \"../templates/shared/user-repos\";\nimport userProfileCardTemplate from \"../templates/user-profile-card.template\";\nimport tailwindConfig from \"../templates/tailwind.config\";\n\nexport interface UserCardData {\n  id: User[\"databaseId\"];\n  name: User[\"name\"];\n  langs: (Language & {\n    size: number;\n  })[];\n  langTotal: number;\n  repos: Repository[];\n  avatarUrl: string;\n  formattedName: string;\n}\n\nexport interface RequiresUpdateMeta {\n  fileUrl: string;\n  hasFile: boolean;\n  needsUpdate: boolean;\n  lastModified: Date | null;\n}\n\n@Injectable()\nexport class UserCardService {\n  private readonly logger = new Logger(this.constructor.name);\n\n  constructor (\n    private readonly httpService: HttpService,\n    private readonly githubService: GithubService,\n    private readonly s3FileStorageService: S3FileStorageService,\n  ) {}\n\n  private async getUserData (username: string): Promise {\n    const langs: Record = {};\n    const today = (new Date);\n    const today30daysAgo = new Date((new Date).setDate(today.getDate() - 30));\n    const user = await this.githubService.getUser(username);\n    const langRepos = user.repositories.nodes?.filter(\n      repo => new Date(String(repo?.pushedAt)) > today30daysAgo,\n    ) as Repository[];\n    let langTotal = 0;\n\n    langRepos.map(repo => {\n      repo.languages?.edges?.map(edge => {\n        if (edge?.node.id) {\n          langTotal += edge.size;\n\n          if (!Object.keys(langs).includes(edge.node.id)) {\n            langs[edge.node.id] = {\n              ...edge.node,\n              size: edge.size,\n            };\n          } else {\n            langs[edge.node.id].size += edge.size;\n          }\n        }\n      });\n    });\n\n    return {\n      id: user.databaseId,\n      name: user.name,\n      langs: Array.from(Object.values(langs)).sort((a, b) => b.size - a.size),\n      langTotal,\n      repos: user.topRepositories.nodes\n        ?.filter(repo => !repo?.isPrivate && repo?.owner.login !== username)\n        .filter(Boolean) as Repository[],\n      avatarUrl: `${String(user.avatarUrl)}&size=150`,\n      formattedName: user.login,\n    };\n  }\n\n  // public only to be used in local scripts. Not for controller direct use.\n  async generateCardBuffer (username: string, userData?: UserCardData) {\n    const { html } = await import(\"satori-html\");\n    const satori = (await import(\"satori\")).default;\n\n    const { avatarUrl, repos, langs, langTotal, formattedName } = userData\n      ? userData\n      : await this.getUserData(username);\n\n    const template = html(\n      userProfileCardTemplate(avatarUrl, formattedName, userLangs(langs, langTotal), userProfileRepos(repos, 3)),\n    );\n\n    const interArrayBuffer = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-400-normal.woff\");\n    const interArrayBufferMedium = await fs.readFile(\"node_modules/@fontsource/inter/files/inter-all-500-normal.woff\");\n\n    const svg = await satori(template, {\n      width: 1200,\n      height: 627,\n      fonts: [\n        {\n          name: \"Inter\",\n          data: interArrayBuffer,\n          weight: 400,\n          style: \"normal\",\n        },\n        {\n          name: \"Inter\",\n          data: interArrayBufferMedium,\n          weight: 500,\n          style: \"normal\",\n        },\n      ],\n      tailwindConfig,\n    });\n\n    const resvg = new Resvg(svg, { background: \"rgba(238, 235, 230, .9)\" });\n\n    const pngData = resvg.render();\n\n    return { png: pngData.asPng(), svg };\n  }\n\n  async checkRequiresUpdate (username: string): Promise {\n    const hash = `users/${String(username)}.png`;\n    const fileUrl = `${this.s3FileStorageService.getCdnEndpoint()}${hash}`;\n    const hasFile = await this.s3FileStorageService.fileExists(hash);\n    const today3daysAgo = new Date((new Date).setDate((new Date).getDate() - 3));\n    const returnVal: RequiresUpdateMeta = {\n      fileUrl,\n      hasFile,\n      needsUpdate: true,\n      lastModified: null,\n    };\n\n    if (hasFile) {\n      const lastModified = await this.s3FileStorageService.getFileLastModified(hash);\n\n      returnVal.lastModified = lastModified;\n\n      if (lastModified && lastModified > today3daysAgo) {\n        this.logger.debug(\n          `User ${username} exists in S3 with lastModified: ${lastModified.toISOString()} less than 3 days ago, redirecting to ${fileUrl}`,\n        );\n        returnVal.needsUpdate = false;\n      }\n    }\n\n    return returnVal;\n  }\n\n  async getUserCard (username: string): Promise {\n    const { remaining } = await this.githubService.rateLimit();\n\n    if (remaining \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n📦 open-sauced/opengraph changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n2.4.1-beta.2 (2023-12-22)\n🤖 Build System\n\ndeps: bump octokit from 2.0.14 to 3.1.2 (#72) (54e3ec0)\n\n2.4.1-beta.1 (2023-08-16)\n🐛 Bug Fixes\n\nupdate reactions count grammar (#69) (765696a)\n\n2.4.0 (2023-07-24)\n🍕 Features\n\nadd emoji support (#63) (82c0a3a)\n\n2.4.0-beta.1 (2023-07-24)\n🍕 Features\n\nadd emoji support (#63) (82c0a3a)\n\n2.3.0 (2023-07-17)\n🍕 Features\n\nimprove performance when generating highlight card image (#60) (2c94638)\n\n2.3.0-beta.1 (2023-07-12)\n🍕 Features\n\nimprove performance when generating highlight card image (#60) (2c94638)\n\n2.2.1 (2023-07-12)\n🧑‍💻 Code Refactoring\n\nupdate social card design (#52) (6a46be1)\n\n2.2.1-beta.1 (2023-06-22)\n🧑‍💻 Code Refactoring\n\nupdate social card design (#52) (6a46be1)\n\n2.2.0 (2023-06-20)\n🐛 Bug Fixes\n\nremove issue templates (#49) (778ad4e)\n\n🍕 Features\n\ninsights social card generation (#51) (8a82a48)\n\n📝 Documentation\n\nupdate instructions on testing cards generation locally (#53) (e152d09)\n\n2.2.0-beta.2 (2023-06-20)\n📝 Documentation\n\nupdate instructions on testing cards generation locally (#53) (e152d09)\n\n📦 open-sauced/opengraph.opensauced.pizza changelog\n\n\n\nAll notable changes to this project will be documented in this file\n\n2.2.0-beta.1 (2023-06-08)\n🍕 Features\n\ninsights social card generation (#51) (8a82a48)\n\n2.1.2-beta.1 (2023-06-06)\n🐛 Bug Fixes\n\nremove issue templates (#49) (778ad4e)\n\n2.1.1 (2023-05-12)\n🐛 Bug Fixes\n\ncorrect rolled back build (e91c43f)\n\n🧑‍💻 Code Refactoring\n\ncorrect lint and merge issues (cba7521)\n\n2.1.1-beta.1 (2023-05-12)\n🐛 Bug Fixes\n\ncorrect rolled back build (e91c43f)\n\n🧑‍💻 Code Refactoring\n\ncorrect lint and merge issues (cba7521)\n\n2.1.0 (2023-05-09)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\nhiglight card upload & storage (#39) (b6abefa)\nUI adjustments (#42) (acbe81a)\n\n2.1.0-beta.6 (2023-05-09)\n🍕 Features\n\nUI adjustments (#42) (acbe81a)\n\n2.1.0-beta.5 (2023-05-05)\n🍕 Features\n\nhighlights getting repo name & languages from pr's repo (#41) (1555a25)\n\n2.1.0-beta.4 (2023-05-04)\n🍕 Features\n\nhiglight card upload & storage (#39) (b6abefa)\n\n2.1.0-beta.3 (2023-05-02)\n🍕 Features\n\nHighlight Cards UI Generation (frontend-only) (#36) (138a847)\n\n2.1.0-beta.2 (2023-04-30)\n🐛 Bug Fixes\n\nOverflowing language bar fix (#38) (3dc1a0a)\n\n2.1.0-beta.1 (2023-04-26)\n🍕 Features\n\nadding utilities for cards local generation & testing (#34) (c5a5fec)\n\n2.0.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.2 (2023-04-19)\n🐛 Bug Fixes\n\ncorrectly lowercase username display in social card (fc9211c)\n\n2.0.1-beta.1 (2023-04-19)\n🐛 Bug Fixes\n\ncorrect username file system caching issues (076ace0), closes #24\n\n2.0.0 (2023-04-11)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\nimplement no-content verification strategy (6efe0e6)\noptimize image loading and return errors (7c6f199), closes #17\n\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\ncorrect dark logo render and make it static (dc9f3a4)\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect server generation environment (68d0202)\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\nupdate graphql types (f7db713)\n\n2.0.0-beta.3 (2023-04-11)\n🤖 Build System\n\nupdate graphql types (f7db713)\n\n2.0.0-beta.2 (2023-04-11)\n🐛 Bug Fixes\n\ncorrect dark logo render and make it static (dc9f3a4)\n\n2.0.0-beta.1 (2023-04-10)\n⚠ BREAKING CHANGES\n\nid changed to :username in earlier commits, this is catching it up\n\n🐛 Bug Fixes\n\ncorrect server generation environment (68d0202)\n\n1.2.0-beta.10 (2023-04-10)\n🐛 Bug Fixes\n\ncorrect app spec GET automatic rewrites of HEAD (3047cec)\n\n1.2.0-beta.9 (2023-04-10)\n🍕 Features\n\noptimize image loading and return errors (7c6f199), closes #17\n\n🤖 Build System\n\nupdate dependencies and ts5 (715e349)\n\n1.2.0-beta.8 (2023-04-09)\n🍕 Features\n\nimplement no-content verification strategy (6efe0e6)\n\n🐛 Bug Fixes\n\ncorrect languages displaying less than 0.5% (bee0e6e)\ncorrect zero contribution top repos language distribution (7d82c0d)\n\n1.2.0-beta.7 (2023-04-09)\n📝 Documentation\n\nupdate live environments lins and document local development (08cead1)\n\n1.2.0-beta.6 (2023-04-09)\n🐛 Bug Fixes\n\ncorrect all tailwind classes except gaps (fe44711), closes #7\ncorrect user languages sizing issues (5846c42)\ncorrect username display instead of full name (1454cbb), closes #11\n\n1.2.0-beta.5 (2023-04-09)\n🎨 Styles\n\nadd tailwind proof of concept (8594508)\n\n🐛 Bug Fixes\n\ncorrect yoga layout double styling, remove repo icon extrenaous classes (d84015b)\n\n1.2.0-beta.4 (2023-04-08)\n🍕 Features\n\nadd custom cdn endpoint configuration for s3 bucket on digital ocean (077e473), closes #18\n\n1.2.0-beta.3 (2023-04-05)\n🍕 Features\n\nimplement digital ocean spaces s3 client storage and cache images 3 days (792992e)\n\n1.2.0-beta.2 (2023-04-04)\n🔁 Continuous Integration\n\ncorrect live release url in github actions deployment (4a434e6)\n\n1.2.0-beta.1 (2023-04-04)\n🍕 Features\n\nadd boilerplate s3-client sdk code connected to digital ocean spaces (a4a71e3)\n\n1.1.2 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect font usage from roboto to design (inter) (4748b98)\n\n1.1.1 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect user name being displayed as login (19043fc)\n\n1.1.0 (2023-04-04)\n📝 Documentation\n\ncorrect readme with new style (ccc8a96)\n\n🤖 Build System\n\nremove extraneous colors package (4c7d29a)\n\n🍕 Features\n\nadd correct languages calculation and display (977df75)\n\n1.0.4 (2023-04-04)\n🐛 Bug Fixes\n\ncorrect top repositories distribution and name concatenation (24bfb15)\n\n1.0.3 (2023-04-04)\n🐛 Bug Fixes\n\nremove static assets, get gfonts roboto versions (dd096ca)\n\n1.0.2 (2023-04-03)\n🐛 Bug Fixes\n\ncorrect docker build (b62c129)\n\n1.0.1 (2023-04-03)\n🔁 Continuous Integration\n\nfix container deployment path (a58ec19)\n\n1.0.0 (2023-04-03)\n🔁 Continuous Integration\n\nimplement release tooling (3e35dc9)\n\n📝 Documentation\n\nadd partial readme (3b5d838)\n\n🤖 Build System\n\nenable local development and transpilation (6893d90)\nmake package able to release (c2cc28c)\nupdate dependencies and package meta (8757519)\n\n🧑‍💻 Code Refactoring\n\nmove to nextjs backend architecture static component functions and boilerplate (d4f854d)\nrewrite code and correct buffers (c12099a)\n\n🍕 Features\n\nadd development tooling and backend configuration (f1f5947)\nadd dynamic image (5797c54)\nadd user not found handler (b1f870c)\ncode splitting & img manual insertion (8b48513)\ndynamic user profile card (18a3e23)\ngenerate images based on route (e81f5c1)\nmake div flex global (9790d30)\nrepalce https module with fetch (3b146a3)\nswitch to graphql and etl octokit (2e6cb05)\nuse https module instead of axios (0b6b7fc)\nuse node https instead of axios (12b86a7)\nUser Profile cards (#5) (64372f4)\n\n🐛 Bug Fixes\n\nadd awaits (14a5e28)\ncorrect application return type image (a0e6d3f)\ncorrect node engines required to deploy (5b088e9)\ndowngrade required node version (5ae3704)\nfix unexisting value handling (16d3101)\nset moduleResolution to node16 (52b97ed)\n\n✅ Tests\n\ncorrect test suite usage (f761ac8)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/api.config.ts\n            \n            variable\n            ApiConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/digital-ocean.config.ts\n            \n            variable\n            DigitalOceanConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/github.config.ts\n            \n            variable\n            GitHubConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/entities/db-insight.entity.ts\n            \n            interface\n            DbInsight\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/github/entities/db-insight.entity.ts\n            \n            interface\n            DbUserInsightRepo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/github/entities/db-reaction.entity.ts\n            \n            interface\n            DbReaction\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/github/entities/db-repos.entity.ts\n            \n            interface\n            DbRepo\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/github/entities/db-user-highlight.entity.ts\n            \n            interface\n            DbUserHighlight\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/github/github.service.ts\n            \n            injectable\n            GithubService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/github/gql/get-repo.ts\n            \n            variable\n            getRepo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/github/gql/get-user.ts\n            \n            variable\n            getUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/s3-file-storage/s3-file-storage.service.ts\n            \n            injectable\n            S3FileStorageService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.controller.ts\n            \n            controller\n            HighlightCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            injectable\n            HighlightCardService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/social-card/highlight-card/highlight-card.service.ts\n            \n            interface\n            HighlightCardData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.controller.ts\n            \n            controller\n            InsightCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.service.ts\n            \n            injectable\n            InsightCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/insight-card/insight-card.service.ts\n            \n            interface\n            InsightCardData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/templates/highlight-card.template.ts\n            \n            variable\n            highlightCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/insight-card.template.ts\n            \n            variable\n            insightCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            cardFooter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-footer.ts\n            \n            variable\n            heartIconData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/card-style-setup.ts\n            \n            variable\n            cardStyleSetup\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-contributors.ts\n            \n            variable\n            insightContributors\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-footer.ts\n            \n            variable\n            insightFooter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/insight-repos.ts\n            \n            variable\n            insightRepos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/repo-icon-with-name.ts\n            \n            variable\n            repoIconWithName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-langs.ts\n            \n            variable\n            userLangs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/shared/user-repos.ts\n            \n            variable\n            userProfileRepos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/tailwind.config.ts\n            \n            variable\n            tailwindConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/templates/user-profile-card.template.ts\n            \n            variable\n            userProfileCardTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.controller.ts\n            \n            controller\n            UserCardController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            injectable\n            UserCardService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            RequiresUpdateMeta\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/social-card/user-card/user-card.service.ts\n            \n            interface\n            UserCardData\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            function\n            getIconCode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            function\n            loadEmoji\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            function\n            toCodePoint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            variable\n            apis\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            variable\n            emojiCache\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            variable\n            U200D\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/twemoji.ts\n            \n            variable\n            UFE0Fg\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            getIconCode   (src/.../twemoji.ts)\n                        \n                        \n                            loadEmoji   (src/.../twemoji.ts)\n                        \n                        \n                            toCodePoint   (src/.../twemoji.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/twemoji.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getIconCode\n                        \n                    \n                \n            \n            \n                \ngetIconCode(char: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    char\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadEmoji\n                        \n                    \n                \n            \n            \n                \nloadEmoji(type, code: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    code\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toCodePoint\n                        \n                    \n                \n            \n            \n                \ntoCodePoint(unicodeSurrogates: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    unicodeSurrogates\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n🍕 Open Sauced OpenGraph Generator 🍕\n\nThe path to your next Open Source contribution\n\n\n\n\n\n\n\n\n\n\n🚀 Live release environments\nProduction (main)\n\nopengraph@digital-ocean.app\nopengraph.opensauced\n\nBeta (beta)\n\nopengraph-beta@digital-ocean.app\nbeta.opengraph.opensauced\n\n📖 Prerequisites\nIn order to run the project we need the following software binaries installed on our development machines:\n\n node>=18.15.0\n npm>=9.6.3\n docker>=20.10.23\n\n🖥️ Local development\nTo install the application:\nnpm ciTo start a local copy of the app on port 3001:\nnpm run start:devLocal dev scripts\nThere are a few scripts that can be used to generate and test the social cards locally without having to deploy to the CDN. This is the way to go when developing & testing the interface for the social cards.\nGenerating user profile cards\nnpm run test:local:user\nGenerates user cards for all users in the test array inside test/local-dev/UserCards.ts and outputs them in dist/local-dev/ for testing.\n\nThe same goes for the other card types:\n\nnpm run test:local:insight is for generating insight cards.\nnpm run test:local:highlight is for generating highlight cards.\n\nThe output of these scripts can be found in the dist/local-dev/ folder as well.\n📝 Environment variables\nSome environment variables are required to run the application. You can find them in the .env.example file. While most of them are optional, some are required to run the application.\nOne can reverse engineer the named configs but some need a little explanation.\nBoilerplate, changed mostly locally:\n# GitHub private access tokens\nGITHUB_PAT_USER=ghp_************************************\n\n# DigitalOcean Spaces through aws-sdk configuration\nDO_SPACES_ACCESS_KEY_ID=********************\nDO_SPACES_SECRET_ACCESS_KEY=*******************************************Ping @open-sauced/maintainers to get the dev CDN keys for the DO_SPACES_* variables.\nOther Digital Ocean S3 variables are sensibly set to default for local development, here are the defauls:\nDO_SPACES_ENDPOINT=digitaloceanspaces.com\nDO_SPACES_REGION=sfo3\nDO_SPACES_BUCKET_NAME=opengraph-devIt is also advised to set the following variables to true to avoid using the cached CDN during development:\nDO_SPACES_CDN_DISABLED=trueIf using a custom domain, you can set the following variable to the domain name:\nDO_SPACES_SUBDOMAIN=beta.opengraph-cdn.opensauced.pizzaOther API defaults you can change are not required in local development, but can sometimes appear configured differently for production:\nAPI_HOST=0.0.0.0\nAPI_PORT=3005\nAPI_DOMAIN=opengraph.opensauced.pizza\nMEMORY_HEAP=200\nMEMORY_RSS=3000\nDISK_PERCENTAGE=0.7\nDISK_SIZE=100🎨 Code linting\nTo check the code and styles quality, use the following command:\nnpm run lintThis will also display during development, but not break on errors.\nTo fix the linting errors, use the following command:\nnpm run formatIt is advised to run this command before committing or opening a pull request.\n📕 Types\nWe have a couple of scripts to check and adjust missing types.\nIn order to dry run what types would be added to package.json:\nnpm run types:auto-checkIn order to add any missing types to package.json:\nnpm run types:auto-add🚀 Production deployment\nA production deployment is a complete build of the project, including the build of the static assets.\nnpm run build🤝 Contributing\nWe encourage you to contribute to Open Sauced! Please check out the Contributing guide for guidelines about how to proceed.\n\n\n🍕 Community\nGot Questions? Join the conversation in our Discord.Find Open Sauced videos and release overviews on our YouTube Channel.\n🎦 Repository Visualization\nBelow is visual representation of our code repository. It is generated by Octo Repo Visualizer.\nThis visualization is being updated on release to our default branch by our release workflow.\n\n\n⚖️ LICENSE\nMIT © Open Sauced\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2023 Open Sauced\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GithubModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HighlightCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InsightCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        S3FileStorageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_GithubModule\n\n\n\ncluster_GithubModule_exports\n\n\n\ncluster_GithubModule_providers\n\n\n\ncluster_HighlightCardModule\n\n\n\ncluster_HighlightCardModule_providers\n\n\n\ncluster_InsightCardModule\n\n\n\ncluster_InsightCardModule_providers\n\n\n\ncluster_S3FileStorageModule\n\n\n\ncluster_S3FileStorageModule_exports\n\n\n\ncluster_S3FileStorageModule_providers\n\n\n\ncluster_UserCardModule\n\n\n\ncluster_UserCardModule_providers\n\n\n\n\nHighlightCardModule\n\nHighlightCardModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nHighlightCardModule->AppModule\n\n\n\n\n\nInsightCardModule\n\nInsightCardModule\n\nAppModule -->\n\nInsightCardModule->AppModule\n\n\n\n\n\nS3FileStorageModule\n\nS3FileStorageModule\n\nHighlightCardModule -->\n\nS3FileStorageModule->HighlightCardModule\n\n\n\nInsightCardModule -->\n\nS3FileStorageModule->InsightCardModule\n\n\n\n\n\nUserCardModule\n\nUserCardModule\n\nUserCardModule -->\n\nS3FileStorageModule->UserCardModule\n\n\n\nAppModule -->\n\nS3FileStorageModule->AppModule\n\n\n\n\n\nS3FileStorageService \n\nS3FileStorageService \n\nS3FileStorageService  -->\n\nS3FileStorageModule->S3FileStorageService \n\n\n\nAppModule -->\n\nUserCardModule->AppModule\n\n\n\n\n\nGithubService \n\nGithubService \n\n\n\nGithubModule\n\nGithubModule\n\nHighlightCardModule -->\n\nGithubModule->HighlightCardModule\n\n\n\nInsightCardModule -->\n\nGithubModule->InsightCardModule\n\n\n\nUserCardModule -->\n\nGithubModule->UserCardModule\n\n\n\nGithubService  -->\n\nGithubModule->GithubService \n\n\n\n\n\nGithubService\n\nGithubService\n\nGithubModule -->\n\nGithubService->GithubModule\n\n\n\n\n\nHighlightCardService\n\nHighlightCardService\n\nHighlightCardModule -->\n\nHighlightCardService->HighlightCardModule\n\n\n\n\n\nInsightCardService\n\nInsightCardService\n\nInsightCardModule -->\n\nInsightCardService->InsightCardModule\n\n\n\n\n\nS3FileStorageService\n\nS3FileStorageService\n\nS3FileStorageModule -->\n\nS3FileStorageService->S3FileStorageModule\n\n\n\n\n\nUserCardService\n\nUserCardService\n\nUserCardModule -->\n\nUserCardService->UserCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.4.1-beta.2\n        \n            Description : OpenGraph dot Open Sauced is a general purpose social card generator\n        \n            Keywords : \n        \n            Homepage : https://github.com/open-sauced/opengraph.opensauced.pizza#readme\n        \n            Bugs : https://github.com/open-sauced/opengraph.opensauced.pizza/issues\n        \n            License : MIT\n        \n            Repository : git+https://github.com/open-sauced/opengraph.opensauced.pizza.git\n        \n            Author : Ahmed Mohamed Atwa \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiConfig   (src/.../api.config.ts)\n                        \n                        \n                            apis   (src/.../twemoji.ts)\n                        \n                        \n                            cardFooter   (src/.../card-footer.ts)\n                        \n                        \n                            cardStyleSetup   (src/.../card-style-setup.ts)\n                        \n                        \n                            DigitalOceanConfig   (src/.../digital-ocean.config.ts)\n                        \n                        \n                            emojiCache   (src/.../twemoji.ts)\n                        \n                        \n                            getRepo   (src/.../get-repo.ts)\n                        \n                        \n                            getUser   (src/.../get-user.ts)\n                        \n                        \n                            GitHubConfig   (src/.../github.config.ts)\n                        \n                        \n                            heartIconData   (src/.../card-footer.ts)\n                        \n                        \n                            highlightCardTemplate   (src/.../highlight-card.template.ts)\n                        \n                        \n                            insightCardTemplate   (src/.../insight-card.template.ts)\n                        \n                        \n                            insightContributors   (src/.../insight-contributors.ts)\n                        \n                        \n                            insightFooter   (src/.../insight-footer.ts)\n                        \n                        \n                            insightRepos   (src/.../insight-repos.ts)\n                        \n                        \n                            repoIconWithName   (src/.../repo-icon-with-name.ts)\n                        \n                        \n                            tailwindConfig   (src/.../tailwind.config.ts)\n                        \n                        \n                            U200D   (src/.../twemoji.ts)\n                        \n                        \n                            UFE0Fg   (src/.../twemoji.ts)\n                        \n                        \n                            userLangs   (src/.../user-langs.ts)\n                        \n                        \n                            userProfileCardTemplate   (src/.../user-profile-card.template.ts)\n                        \n                        \n                            userProfileRepos   (src/.../user-repos.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/api.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"api\", () => ({\n  codename: String(process.env.API_CODENAME ?? \"opengraph-local\"),\n  logging: process.env.NODE_ENV !== \"production\" ? \"debug\" : \"info\",\n  host: String(process.env.API_HOST ?? \"0.0.0.0\"),\n  port: String(process.env.API_PORT ?? \"3001\"),\n  domain: String(process.env.API_DOMAIN ?? \"opengraph.opensauced.pizza\"),\n  development: !process.env.CI,\n  memory_heap: Number(parseInt(process.env.MEMORY_HEAP ?? \"200\", 10) * 1024 * 1024),\n  memory_rss: Number(parseInt(process.env.MEMORY_RSS ?? \"3000\", 10) * 1024 * 1024),\n  disk_percentage: Number(parseFloat(process.env.DISK_PERCENGATE ?? \"0.7\")),\n  disk_size: Number(parseInt(process.env.DISK_SIZE ?? \"100\", 10) * 1024 * 1024 * 1024),\n}))\n                    \n                \n\n\n        \n    \n\n    src/utils/twemoji.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apis\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  twemoji: (code: string) =>\n    `https://cdnjs.cloudflare.com/ajax/libs/twemoji/14.0.2/svg/${\n      code.toLowerCase()\n    }.svg`,\n  openmoji: \"https://cdn.jsdelivr.net/npm/@svgmoji/openmoji@2.0.0/svg/\",\n  blobmoji: \"https://cdn.jsdelivr.net/npm/@svgmoji/blob@2.0.0/svg/\",\n  noto: \"https://cdn.jsdelivr.net/gh/svgmoji/svgmoji/packages/svgmoji__noto/svg/\",\n  fluent: (code: string) =>\n    `https://cdn.jsdelivr.net/gh/shuding/fluentui-emoji-unicode/assets/${\n      code.toLowerCase()\n    }_color.svg`,\n  fluentFlat: (code: string) =>\n    `https://cdn.jsdelivr.net/gh/shuding/fluentui-emoji-unicode/assets/${\n      code.toLowerCase()\n    }_flat.svg`,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emojiCache\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        U200D\n                        \n                    \n                \n            \n                \n                    \n                        Default value : String.fromCharCode(8205)\n                    \n                \n\n            \n                \n                    modified version of https://unpkg.com/twemoji@13.1.0/dist/twemoji.esm.js.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UFE0Fg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : /\\uFE0F/g\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-footer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: string, repos: string, reactions?: number) => `\n    \n      \n        \n          ${repos}\n        \n\n\n\n          \n            ${\n  reactions\n    ? ` \n            \n              ${reactions} ${reactions > 1 ? \"Reactions\" : \"Reaction\"}\n            `\n    : \"\"\n}\n\n            \n               \n            \n          \n\n      \n\n      \n        \n          ${langs}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        heartIconData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `data:image/svg+xml,%3csvg width='24' height='24' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill-rule='evenodd' clip-rule='evenodd' d='M6.73649 2.5C3.82903 2.5 1 5.052 1 8.51351C1 12.3318 3.80141 15.5735 6.38882 17.7763C7.70549 18.8973 9.01844 19.7929 10.0004 20.4077C10.4922 20.7157 10.9029 20.9544 11.1922 21.1169C11.4093 21.2388 11.5582 21.318 11.6223 21.3516C11.7407 21.4132 11.8652 21.4527 12 21.4527C12.1193 21.4527 12.2378 21.4238 12.3438 21.3693C12.5003 21.2886 12.6543 21.2031 12.8078 21.1169C13.0971 20.9544 13.5078 20.7157 13.9996 20.4077C14.9816 19.7929 16.2945 18.8973 17.6112 17.7763C20.1986 15.5735 23 12.3318 23 8.51351C23 5.052 20.171 2.5 17.2635 2.5C14.9702 2.5 13.1192 3.72621 12 5.60482C10.8808 3.72621 9.02981 2.5 6.73649 2.5ZM6.73649 4C4.65746 4 2.5 5.88043 2.5 8.51351C2.5 11.6209 4.8236 14.4738 7.36118 16.6342C8.60701 17.6948 9.85656 18.5479 10.7965 19.1364C11.2656 19.4301 11.6557 19.6567 11.9269 19.8091L12 19.85L12.0731 19.8091C12.3443 19.6567 12.7344 19.4301 13.2035 19.1364C14.1434 18.5479 15.393 17.6948 16.6388 16.6342C19.1764 14.4738 21.5 11.6209 21.5 8.51351C21.5 5.88043 19.3425 4 17.2635 4C15.1581 4 13.4627 5.38899 12.7115 7.64258C12.6094 7.94883 12.3228 8.15541 12 8.15541C11.6772 8.15541 11.3906 7.94883 11.2885 7.64258C10.5373 5.38899 8.84185 4 6.73649 4Z' fill='%2324292F'/%3e%3c/svg%3e`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/card-style-setup.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cardStyleSetup\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `\n  \n    div {\n      display: flex;\n    }\n  \n`\n                    \n                \n\n\n        \n    \n\n    src/config/digital-ocean.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DigitalOceanConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"digitalOcean\", () => ({\n  accessKeyId: String(process.env.DO_SPACES_ACCESS_KEY_ID ?? \"\"),\n  secretAccessKey: String(process.env.DO_SPACES_SECRET_ACCESS_KEY ?? \"\"),\n  protocol: String(process.env.DO_SPACES_PROTOCOL ?? \"https\"),\n  endpoint: String(process.env.DO_SPACES_ENDPOINT ?? \"digitaloceanspaces.com\"),\n  region: String(process.env.DO_SPACES_REGION ?? \"sfo3\"),\n  bucketName: String(process.env.DO_SPACES_BUCKET_NAME ?? \"opengraph-dev\"),\n  cdnCustomDomain: String(process.env.DO_SPACES_SUBDOMAIN ?? \"\"),\n  cdnDisabled: !!process.env.DO_SPACES_CDN_DISABLED,\n}))\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-repo.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRepo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (owner: string, repo: string) => ({\n  query: `\nquery ($owner: String!, $repo: String!) {\n  repository(\n    owner: $owner\n    name: $repo\n  ) {\n    id\n    name\n    databaseId\n    nameWithOwner\n    owner {\n      id\n      login\n      avatarUrl\n    }\n    languages (first: 100, orderBy: { field: SIZE, direction: DESC }) {\n      edges {\n        node {\n          id\n          color\n          name\n        }\n        size\n      }\n      totalSize\n      totalCount\n    }\n  }\n}`,\n  variables: {\n    owner,\n    repo,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/github/gql/get-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (username: string, dateSince: string) => ({\n  query: `# Missing values\n# organizationVerifiedDomainEmails\n# pinnedItems\n# repositoriesContributedTo\n# starredRepositories\n# anything sponsors\n\nquery ($username: String!, $dateSince: DateTime) {\n  user(login: $username) {\n    id\n    databaseId\n    avatarUrl\n    bio\n    bioHTML\n    company\n    companyHTML\n    createdAt\n    email\n    hasSponsorsListing\n    isBountyHunter\n    isCampusExpert\n    isDeveloperProgramMember\n    isEmployee\n    isGitHubStar\n    isHireable\n    isSiteAdmin\n    location\n    login\n    monthlyEstimatedSponsorsIncomeInCents\n    name\n    url\n    pronouns\n    resourcePath\n    totalSponsorshipAmountAsSponsorInCents\n    websiteUrl\n    twitterUsername\n    organization(login: \"open-sauced\") {\n      id\n      avatarUrl\n      name\n      url\n      updatedAt\n    }\n    organizations(first: 10, orderBy: { field: CREATED_AT, direction: ASC }) {\n      nodes {\n        id\n        avatarUrl\n        name\n        url\n        updatedAt\n      }\n    }\n    socialAccounts(first: 10) {\n      nodes {\n        displayName\n        provider\n        url\n      }\n    }\n    status {\n      id\n      emoji\n      message\n      organization {\n        id\n      }\n    }\n    repositories(first: 100, orderBy: { field: PUSHED_AT, direction: DESC }) {\n      nodes {\n        name\n        primaryLanguage {\n          name\n        }\n        languages(first: 100, orderBy: { field: SIZE, direction: DESC }) {\n          edges {\n            node {\n              id\n              name\n              color\n            }\n            size\n          }\n          totalSize\n          totalCount\n        }\n        pushedAt\n      }\n    }\n    topRepositories(\n      first: 100\n      orderBy: { field: PUSHED_AT, direction: DESC }\n      since: $dateSince\n    ) {\n      nodes {\n        name\n        owner {\n          login\n          avatarUrl\n        }\n        isPrivate\n        primaryLanguage {\n          name\n        }\n        pushedAt\n      }\n    }\n  }\n}`,\n  variables: {\n    username,\n    dateSince,\n  },\n})\n                    \n                \n\n\n        \n    \n\n    src/config/github.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GitHubConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\"github\", () => ({\n  userPat: String(process.env.GITHUB_PAT_USER ?? \"\"),\n  prPat: String(process.env.GITHUB_PAT_PR ?? \"\"),\n  commitPat: String(process.env.GITHUB_PAT_COMMIT ?? \"\"),\n}))\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/highlight-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        highlightCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  avatarUrl: string,\n  body: string,\n  langs: string,\n  repos: string,\n  reactions: number,\n): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n          \n               🍕 OpenSauced Highlight\n          \n          \n          ${body.length > 108 ? `${body.slice(0, 108)}...` : body}\n          \n        \n        \n          \n        \n      \n\n\n    \n    ${cardFooter(langs, repos, reactions)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/insight-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (pageName: string, contributors: string, repos: string): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n          OpenSauced Insights\n        \n         ${pageName}: Insights \n      \n    \n    ${insightFooter(contributors, repos)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-contributors.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightContributors\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (contributors: string[]): string => {\n  const repoList = contributors.map(\n    contributor => ``,\n  );\n\n  return `${repoList.slice(0, 5).join(\"\")}${\n    repoList.length > 5\n      ? `+${\n        repoList.length - 5\n      }`\n      : ``\n  }`;\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-footer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightFooter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (contributors: string, repos: string) => `\n    \n      \n        \n          ${repos}\n        \n        \n           \n        \n      \n\n      \n        \n          ${contributors}\n        \n      \n    \n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/insight-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        insightRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: { repoName: string; avatarUrl: string }[], limit: number): string => {\n  const charLimit = limit === 1 ? 60 : repos.length === 1 ? 60 : 9;\n  const repoList = repos.map(({ repoName, avatarUrl }) =>\n    repoIconWithName(\n      `${repoName.substring(0, charLimit).replace(/\\.+$/, \"\")}${repoName.length > charLimit ? \"...\" : \"\"}`,\n      `${String(avatarUrl)}&size=40`,\n    ));\n\n  return `${repoList.slice(0, limit).join(\"\")}${\n    repoList.length > limit\n      ? `+${repoList.length - limit}`\n      : ``\n  }`;\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/repo-icon-with-name.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        repoIconWithName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (name: string, avatarUrl: string) => `\n  \n    \n      \n      \n        \n          ${name}\n        \n      \n    \n  \n`\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/tailwind.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        tailwindConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  theme: {\n    extend: {\n      screens: {\n        xs: \"425px\",\n\n        // => @media (min-width: 425px) { ... }\n\n        \"2xl\": \"1440px\",\n\n        // => @media (min-width: 1440px) { ... }\n      },\n      blur: { \"4xl\": \"5rem\" },\n      spacing: {\n        \"6px\": \"6px\",\n        \"8px\": \"8px\",\n        \"12px\": \"12px\",\n        \"16px\": \"16px\",\n        \"32px\": \"32px\",\n        \"48px\": \"48px\",\n        \"58px\": \"58px\",\n        \"96px\": \"96px\",\n        \"134px\": \"134px\",\n        \"627px\": \"627px\",\n        \"1200px\": \"1200px\",\n      },\n      colors: {\n        sauced: { orange: \"hsla(19, 100%, 50%, 1)\" },\n        gradient: {\n          \"dark-two\": \"hsl(26, 54%, 15%)\",\n          \"dark-one\": \"hsl(23, 75%, 5%)\",\n          \"orange-one\": \"\thsl(33, 100%, 50%)\",\n          \"orange-two\": \"\thsl(19, 100%, 50%)\",\n        },\n        light: {\n          slate: {\n            1: \"hsl(206, 30.0%, 98.8%)\",\n            2: \"hsl(210, 16.7%, 97.6%)\",\n            3: \"hsl(209, 13.3%, 95.3%)\",\n            4: \"hsl(209, 12.2%, 93.2%)\",\n            5: \"hsl(208, 11.7%, 91.1%)\",\n            6: \"hsl(208, 11.3%, 88.9%)\",\n            7: \"hsl(207, 11.1%, 85.9%)\",\n            8: \"hsl(205, 10.7%, 78.0%)\",\n            9: \"hsl(206, 6.0%, 56.1%)\",\n            10: \"hsl(206, 5.8%, 52.3%)\",\n            11: \"hsl(206, 6.0%, 43.5%)\",\n            12: \"hsl(206, 24.0%, 9.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(210, 92.6%, 26.5%, 0.016)\",\n            2: \"hsla(210, 87.7%, 16.0%, 0.028)\",\n            3: \"hsla(210, 98.8%, 14.4%, 0.055)\",\n            4: \"hsla(210, 94.1%, 11.1%, 0.075)\",\n            5: \"hsla(216, 91.1%, 10.9%, 0.099)\",\n            6: \"hsla(206, 96.4%, 11.3%, 0.126)\",\n            7: \"hsla(210, 99.1%, 10.1%, 0.157)\",\n            8: \"hsla(205, 96.5%, 10.0%, 0.244)\",\n            9: \"hsla(206, 98.8%, 5.9%, 0.467)\",\n            10: \"hsla(206, 99.6%, 5.4%, 0.506)\",\n            11: \"hsla(206, 97.0%, 4.8%, 0.593)\",\n            12: \"hsla(202, 97.0%, 2.4%, 0.934)\",\n          },\n          orange: {\n            1: \"hsl(24, 70.0%, 99.0%)\",\n            2: \"hsl(24, 83.3%, 97.6%)\",\n            3: \"hsl(24, 100%, 95.3%)\",\n            4: \"hsl(25, 100%, 92.2%)\",\n            5: \"hsl(25, 100%, 88.2%)\",\n            6: \"hsl(25, 100%, 82.8%)\",\n            7: \"hsl(24, 100%, 75.3%)\",\n            8: \"hsl(24, 94.5%, 64.3%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 46.5%)\",\n            11: \"hsl(24, 100%, 37.0%)\",\n            12: \"hsl(15, 60.0%, 17.0%)\",\n          },\n          blue: {\n            1: \"hsl(206, 100%, 99.2%)\",\n            2: \"hsl(210, 100%, 98.0%)\",\n            3: \"hsl(209, 100%, 96.5%)\",\n            4: \"hsl(210, 98.8%, 94.0%)\",\n            5: \"hsl(209, 95.0%, 90.1%)\",\n            6: \"hsl(209, 81.2%, 84.5%)\",\n            7: \"hsl(208, 77.5%, 76.9%)\",\n            8: \"hsl(206, 81.9%, 65.3%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(208, 100%, 47.3%)\",\n            11: \"hsl(211, 100%, 43.2%)\",\n            12: \"hsl(211, 100%, 15.0%)\",\n          },\n          red: {\n            1: \"hsl(359, 100%, 99.4%)\",\n            2: \"hsl(359, 100%, 98.6%)\",\n            3: \"hsl(360, 100%, 96.8%)\",\n            4: \"hsl(360, 97.9%, 94.8%)\",\n            5: \"hsl(360, 90.2%, 91.9%)\",\n            6: \"hsl(360, 81.7%, 87.8%)\",\n            7: \"hsl(359, 74.2%, 81.7%)\",\n            8: \"hsl(359, 69.5%, 74.3%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 69.4%, 55.2%)\",\n            11: \"hsl(358, 65.0%, 48.7%)\",\n            12: \"hsl(354, 50.0%, 14.6%)\",\n          },\n          grass: {\n            1: \"hsl(116, 50.0%, 98.9%)\",\n            2: \"hsl(120, 60.0%, 97.1%)\",\n            3: \"hsl(120, 53.6%, 94.8%)\",\n            4: \"hsl(121, 47.5%, 91.4%)\",\n            5: \"hsl(122, 42.6%, 86.5%)\",\n            6: \"hsl(124, 39.0%, 79.7%)\",\n            7: \"hsl(126, 37.1%, 70.2%)\",\n            8: \"hsl(131, 38.1%, 56.3%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(132, 43.1%, 42.2%)\",\n            11: \"hsl(133, 50.0%, 32.5%)\",\n            12: \"hsl(130, 30.0%, 14.9%)\",\n          },\n        },\n        dark: {\n          slate: {\n            1: \"hsl(200, 7.0%, 8.8%)\",\n            2: \"hsl(195, 7.1%, 11.0%)\",\n            3: \"hsl(197, 6.8%, 13.6%)\",\n            4: \"hsl(198, 6.6%, 15.8%)\",\n            5: \"hsl(199, 6.4%, 17.9%)\",\n            6: \"hsl(201, 6.2%, 20.5%)\",\n            7: \"hsl(203, 6.0%, 24.3%)\",\n            8: \"hsl(207, 5.6%, 31.6%)\",\n            9: \"hsl(206, 6.0%, 43.9%)\",\n            10: \"hsl(206, 5.2%, 49.5%)\",\n            11: \"hsl(206, 6.0%, 63.0%)\",\n            12: \"hsl(210, 6.0%, 93.0%)\",\n          },\n          \"slate-opacity\": {\n            1: \"hsla(0, 0%, 0%, 0)\",\n            2: \"hsla(181, 98.9%, 91.8%, 0.026)\",\n            3: \"hsla(182, 86.7%, 91.4%, 0.057)\",\n            4: \"hsla(209, 86.7%, 93.9%, 0.083)\",\n            5: \"hsla(200, 90.3%, 93.4%, 0.109)\",\n            6: \"hsla(209, 95.3%, 93.5%, 0.139)\",\n            7: \"hsla(204, 98.5%, 93.9%, 0.182)\",\n            8: \"hsla(209, 94.0%, 94.7%, 0.265)\",\n            9: \"hsla(207, 97.3%, 94.0%, 0.412)\",\n            10: \"hsla(209, 99.4%, 95.2%, 0.472)\",\n            11: \"hsla(208, 98.7%, 96.8%, 0.615)\",\n            12: \"hsla(211, 86.7%, 99.6%, 0.927)\",\n          },\n          orange: {\n            1: \"hsl(30, 70.0%, 7.2%)\",\n            2: \"hsl(28, 100%, 8.4%)\",\n            3: \"hsl(26, 91.1%, 11.6%)\",\n            4: \"hsl(25, 88.3%, 14.1%)\",\n            5: \"hsl(24, 87.6%, 16.6%)\",\n            6: \"hsl(24, 88.6%, 19.8%)\",\n            7: \"hsl(24, 92.4%, 24.0%)\",\n            8: \"hsl(25, 100%, 29.0%)\",\n            9: \"hsl(24, 94.0%, 50.0%)\",\n            10: \"hsl(24, 100%, 58.5%)\",\n            11: \"hsl(24, 100%, 62.2%)\",\n            12: \"hsl(24, 97.0%, 93.2%)\",\n          },\n          blue: {\n            1: \"hsl(212, 35.0%, 9.2%)\",\n            2: \"hsl(216, 50.0%, 11.8%)\",\n            3: \"hsl(214, 59.4%, 15.3%)\",\n            4: \"hsl(214, 65.8%, 17.9%)\",\n            5: \"hsl(213, 71.2%, 20.2%)\",\n            6: \"hsl(212, 77.4%, 23.1%)\",\n            7: \"hsl(211, 85.1%, 27.4%)\",\n            8: \"hsl(211, 89.7%, 34.1%)\",\n            9: \"hsl(206, 100%, 50.0%)\",\n            10: \"hsl(209, 100%, 60.6%)\",\n            11: \"hsl(210, 100%, 66.1%)\",\n            12: \"hsl(206, 98.0%, 95.8%)\",\n          },\n          red: {\n            1: \"hsl(353, 23.0%, 9.8%)\",\n            2: \"hsl(357, 34.4%, 12.0%)\",\n            3: \"hsl(356, 43.4%, 16.4%)\",\n            4: \"hsl(356, 47.6%, 19.2%)\",\n            5: \"hsl(356, 51.1%, 21.9%)\",\n            6: \"hsl(356, 55.2%, 25.9%)\",\n            7: \"hsl(357, 60.2%, 31.8%)\",\n            8: \"hsl(358, 65.0%, 40.4%)\",\n            9: \"hsl(358, 75.0%, 59.0%)\",\n            10: \"hsl(358, 85.3%, 64.0%)\",\n            11: \"hsl(358, 100%, 69.5%)\",\n            12: \"hsl(351, 89.0%, 96.0%)\",\n          },\n          grass: {\n            1: \"hsl(146, 30.0%, 7.4%)\",\n            2: \"hsl(136, 33.3%, 8.8%)\",\n            3: \"hsl(137, 36.0%, 11.4%)\",\n            4: \"hsl(137, 37.6%, 13.7%)\",\n            5: \"hsl(136, 38.7%, 16.0%)\",\n            6: \"hsl(135, 39.6%, 19.1%)\",\n            7: \"hsl(134, 40.3%, 23.8%)\",\n            8: \"hsl(131, 40.1%, 30.8%)\",\n            9: \"hsl(131, 41.0%, 46.5%)\",\n            10: \"hsl(131, 39.0%, 52.1%)\",\n            11: \"hsl(131, 43.0%, 57.2%)\",\n            12: \"hsl(137, 72.0%, 94.0%)\",\n          },\n        },\n      },\n      boxShadow: {\n        login: \"0px 64px 100px -80px #FF5F13, 0px 16px 56px rgba(181, 107, 72, 0.19)\",\n        superlative: \"0px 22px 24px -8px rgba(0, 0, 0, 0.05), 0px 4px 8px rgba(0, 0, 0, 0.1)\",\n        paginate: \"0px 1px 2px rgba(237, 95, 0, 0.05), 0px 1px 1px rgba(237, 95, 0, 0.05)\",\n        input: \"0px 1px 2px rgba(17, 24, 28, 0.05), 0px 1px 1px rgba(17, 24, 28, 0.05)\",\n      },\n      backgroundImage: { \"gradient-radial\": \"radial-gradient(var(--tw-gradient-stops))\" },\n    },\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-langs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userLangs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (langs: (Language & { size: number })[], totalCount = 0, joinLiteral = \"\") => {\n  const filteredLangs = langs.filter(({ size }) => size > 0 && (size / totalCount) * 100 >= 0.5);\n\n  return filteredLangs\n    .map(({ color, size }) => {\n      const realPercent = (size / totalCount) * 100;\n\n      return ` 0 ? realPercent : 100 / filteredLangs.length\n      }%\"/>`;\n    })\n    .join(joinLiteral);\n}\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/user-profile-card.template.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileCardTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (avatarUrl: string, name: string, langs: string, repos: string): string => `\n  ${cardStyleSetup}\n\n  \n    \n      \n        \n          ${name}\n        \n        \n      \n\n\n    \n    ${cardFooter(langs, repos)}\n  `\n                    \n                \n\n\n        \n    \n\n    src/social-card/templates/shared/user-repos.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userProfileRepos\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (repos: Repository[], limit: number): string => {\n  const charLimit = limit === 1 ? 60 : repos.length === 1 ? 60 : 9;\n  const repoList = repos.map(({ name, owner: { avatarUrl } }) =>\n    repoIconWithName(\n      `${name.substring(0, charLimit).replace(/\\.+$/, \"\")}${name.length > charLimit ? \"...\" : \"\"}`,\n      `${String(avatarUrl)}&size=40`,\n    ));\n\n  return `${repoList.slice(0, limit).join(\"\")}${\n    repoList.length > limit\n      ? `+${repoList.length - limit}`\n      : ``\n  }`;\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
